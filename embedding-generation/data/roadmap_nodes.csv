id,name,content,type
100,mathematics,mathematics,topic
10000,linear algebra calculus mathematical analysis,"- [Mathematics for Machine Learning Specialization](https://imp.i384100.net/baqMYv)

",concept
10001,differential calculus,"- [Algebra and Differential Calculus for Data Science](https://imp.i384100.net/LX5M7M)

",concept
101,statistics,statistics,topic
10100,statistics clt,"- [Introduction to Statistics](https://imp.i384100.net/3eRv4v)

",concept
10101,hypothesis testing,"- [Introduction to Statistical Analysis: Hypothesis Testing](https://imp.i384100.net/vN0JAA)

",concept
10102,probability sampling,"- [Probability and Statistics: To p or not to p?](https://imp.i384100.net/daDM6Q)

",concept
10103,ab testing,"- [Practitioner’s Guide to Statistical Tests](https://vkteam.medium.com/practitioners-guide-to-statistical-tests-ed2d580ef04f#1e3b)
- [Step by Step Process for Planning an A/B Test](https://towardsdatascience.com/step-by-step-for-planning-an-a-b-test-ef3c93143c0b)",concept
10104,increasing test sensitivity,"- [Minimum Detectable Effect (MDE)](https://splitmetrics.com/resources/minimum-detectable-effect-mde/)
- [Improving the Sensitivity of Online Controlled Experiments: Case Studies at Netflix](https://kdd.org/kdd2016/papers/files/adp0945-xieA.pdf)
- [Improving the Sensitivity of Online Controlled Experiments by Utilizing Pre-Experiment Data](https://exp-platform.com/Documents/2013-02-CUPED-ImprovingSensitivityOfControlledExperiments.pdf)
- [How Booking.com increases the power of online experiments with CUPED](https://booking.ai/how-booking-com-increases-the-power-of-online-experiments-with-cuped-995d186fff1d)
- [Improving Experimental Power through Control Using Predictions as Covariate — CUPAC](https://doordash.engineering/2020/06/08/improving-experimental-power-through-control-using-predictions-as-covariate-cupac/)
- [Improving the Sensitivity of Online Controlled Experiments: Case Studies at Netflix](https://www.researchgate.net/publication/305997925_Improving_the_Sensitivity_of_Online_Controlled_Experiments_Case_Studies_at_Netflix)

",concept
10105,ratio metrics,"- [Applying the Delta Method in Metric Analytics: A Practical Guide with Novel Ideas](https://arxiv.org/pdf/1803.06336.pdf)
- [Approximations for Mean and Variance of a Ratio](https://www.stat.cmu.edu/~hseltman/files/ratio.pdf)

",concept
102,econometrics,econometrics,topic
10200,prerequisities of econometrics,"- [10 Fundamental Theorems for Econometrics](https://bookdown.org/ts_robinson1994/10EconometricTheorems/)

",concept
10201,regression time series fitting distributions,"- [10 Fundamental Theorems for Econometrics](https://bookdown.org/ts_robinson1994/10EconometricTheorems/)
- [Dougherty Intro to Econometrics 4th edition](https://www.academia.edu/33062577/Dougherty_Intro_to_Econometrics_4th_ed_small)
- [Econometrics: Methods and Applications](https://imp.i384100.net/k0krYL)
- [Kaggle - Learn Time Series](https://www.kaggle.com/learn/time-series)
- [Time series Basics : Exploring traditional TS](https://www.kaggle.com/code/jagangupta/time-series-basics-exploring-traditional-ts#Hierarchical-time-series)
- [How to Create an ARIMA Model for Time Series Forecasting in Python](https://machinelearningmastery.com/arima-for-time-series-forecasting-with-python)
- [11 Classical Time Series Forecasting Methods in Python](https://machinelearningmastery.com/time-series-forecasting-methods-in-python-cheat-sheet/)
- [Blockchain.com Data Scientist TakeHome Test](https://github.com/stalkermustang/bcdc_ds_takehome)
- [Linear Regression for Business Statistics](https://imp.i384100.net/9g97Ke)

",concept
103,coding,coding,topic
10300,python,"- [Kaggle — Python](https://www.kaggle.com/learn/python)
- [Google's Python Class](https://developers.google.com/edu/python)

",concept
10301,data structures algorithms,"- [Learn Algorithms](https://leetcode.com/explore/learn/)
- [Leetcode - Study Plans](https://leetcode.com/studyplan/)
- [Algorithms Specialization](https://imp.i384100.net/5gqv4n)",concept
10302,sql,"- [SQL Tutorial](https://www.sqltutorial.org/)

",concept
104,exploratory data analysis (eda),exploratory data analysis (eda),topic
10400,data understanding data analysis visualization,"- [Exploratory Data Analysis With Python and Pandas](https://imp.i384100.net/AWAv4R)
- [Exploratory Data Analysis for Machine Learning](https://imp.i384100.net/GmQMLE)
- [Exploratory Data Analysis with Seaborn](https://imp.i384100.net/ZQmMgR)

",concept
105,machine learning,machine learning,topic
10500,classic advanced machine learning,"- [Open Machine Learning Course](https://mlcourse.ai/book/topic01/topic01_intro.html)
- [Coursera: Machine Learning Specialization](https://imp.i384100.net/oqGkrg)
- [Pattern Recognition and Machine Learning by Christopher Bishop](https://www.microsoft.com/en-us/research/uploads/prod/2006/01/Bishop-Pattern-Recognition-and-Machine-Learning-2006.pdf)
- [Repository of notes, code and notebooks in Python for the book Pattern Recognition and Machine Learning by Christopher Bishop](https://github.com/gerdm/prml)

",concept
106,deep learning,deep learning,topic
10600,fully connected nn cnn rnn lstm transformers transfer learning,"- [The Illustrated Transformer](https://jalammar.github.io/illustrated-transformer/)
- [Attention is All you Need](https://arxiv.org/pdf/1706.03762.pdf)
- [Deep Learning Book](https://www.deeplearningbook.org/)
- [Deep Learning Specialization](https://imp.i384100.net/Wq9MV3)

",concept
107,mlops,mlops,topic
10700,deployment models ci cd,"- [Machine Learning Engineering for Production (MLOps) Specialization](https://imp.i384100.net/nLA5mx)

",concept
200,pick a language,pick a language,topic
20000,kotlin,"`Kotlin` is a cross-platform, statically typed general-purpose programming language with type inference. Developed by JetBrains, the makers of the world’s leading IDEs, Kotlin has a syntax, which is more expressive and concise. This allows for more readable and maintainable code. It is fully interoperable with Java and comes with no limitations. It can be used almost everywhere Java is used today, for server-side development, Android apps, and much more. Kotlin introduces several improvements for programmers over Java, which makes it a preferred choice for many developers. With more concise code base and modern programming concept support - it's certainly a future of Android app development.",concept
20001,java,"Java is a popular programming language used for Android development due to its robustness and ease of use. Its object-oriented structure allows developers to create modular programs and reusable code. The language was built with the philosophy of ""write once, run anywhere"" (WORA), meaning compiled Java code can run on all platforms without the need for recompilation. Android’s API and core libraries are primarily written in Java, therefore understanding Java is fundamental in creating diverse and powerful Android apps. Java is a statically-typed language, which can be beneficial for detecting errors at compile-time rather than at runtime. Oracle, who owns Java, provides comprehensive documentation and support for the language.",concept
201,the fundamentals,the fundamentals,topic
20100,development ide,"""Development IDE"" refers to Development Integrated Development Environment that is vital for Android App development. For Android, the primary IDE is **Android Studio**. This official IDE from Google includes everything you need to build an Android app, such as a code editor, code analysis tools, emulators for all of Android's supported OS versions and hardware configurations, and more. Other popular IDEs include **Eclipse** (with an Android Developer Tools plugin), **NetBeans**, and **IntelliJ IDEA**. Each of these IDEs tends to have its own set of specialized features, but all are designed to provide the tools and services needed for Android development. The choice of IDE often depends on the specific needs and preferences of the developer or development team.",concept
20101,basics of kotlin,"Kotlin is a statically-typed programming language that runs on the Java Virtual Machine (JVM) and can be used to develop all types of Android apps. It is Google's preferred language for Android app development. Kotlin's syntax is more concise than Java, which means less code to write and read, and fewer opportunities for errors. It provides several high-level features like lambdas, coroutines and higher order functions that help making the code more clean and understandable. Key basics of Kotlin include control flow statements (if, when, for, while), variables (mutable and non-mutable), null safety, classes and objects, inheritance, interfaces, and exception handling. While learning Kotlin, experience with Java will certainly be helpful, but it's not a prerequisite.",concept
20102,basics of oop,"In Android development, understanding the `Basics of Object-Oriented Programming (OOP)` is crucial. OOP is a programming paradigm that uses ""Objects"" - entities that contain both data and functions that manipulate the data. Key concepts include `Classes`, which are blueprints from which objects are created; `Objects`, instances of a class; `Inheritance`, where one class acquires properties from another; `Polymorphism`, the ability of an object to take many forms; `Abstraction`, showing only necessary details and hiding implementation from the user; and `Encapsulation`, the concept of wrapping data and the methods that work on data within one unit. By understanding these fundamentals, you can create more efficient and effective Android apps.",concept
20103,datastructures and algorithms,"In Android, **data structures** are primarily used to collect, organize and perform operations on the stored data more effectively. They are essential for designing advanced-level Android applications. Examples include Array, Linked List, Stack, Queue, Hash Map, and Tree. 

Meanwhile, **algorithms** are a sequence of instructions or rules for performing a particular task. In Android, algorithms can be used for data searching, sorting, or performing complex business logic. Some commonly used algorithms are Binary Search, Bubble Sort, Selection Sort, etc. A deep understanding of data structures and algorithms is crucial in optimizing the performance and the memory consumption of the Android applications.",concept
20104,using gradle,"**Using Gradle**: Gradle is a powerful build system used in Android development that allows you to define your project and dependencies, and distinguish between different build types and flavors. Gradle uses a domain-specific language (DSL) which gives developers almost complete control over the build process. When you trigger a build in Android Studio, Gradle is the tool working behind the scenes to compile and package your app. It looks at the dependencies you declared in your build.gradle files and creates a build script accordingly. Using Gradle in android development requires continuous editing of the build.gradle files to manage app dependencies, build variants, signing configurations and other essential aspects related to building your app. ",concept
20105,hello world app,"The ""Hello World"" app is a simple project that you can build when you're getting started with Android development. It's often the first program that beginners learn to build in a new system. It's usually considered the simplest form of program that displays a message to the user - ""Hello, World!"" In Android, this involves creating a new project from the Android Studio and setting up the main activity. The main activity file is primarily written in Java or Kotlin where you can code for the display message, while the layout design view can be created in the XML file.",concept
202,version control,version control,topic
20200,git,"`Git` is a highly efficient and flexible distributed version control system that was created by Linus Torvalds, the creator of Linux. It allows multiple developers to work on a project concurrently, providing tools for non-linear development and tracking changes in any set of files. Git has a local repository with a complete history and version-tracking capabilities, allowing offline operations, unlike SVN. It ensures data integrity and provides strong support for non-linear development with features such as branching and merging. Yet, Git has a high learning curve and can be complex for beginners to understand the command line interface. Furthermore, Git also allows you to create `tags` to reference certain points in your history for milestone or version releases.",concept
20201,github,"**GitHub** is a cloud-based hosting service for managing software version control using Git. It provides a platform for enabling multiple developers to work together on the same project at the same time. With GitHub, codes can be stored publicly, allowing for collaboration with other developers or privately for individual projects. Key features of GitHub include code sharing, task management, and version control, among others. GitHub also offers functionalities such as bug tracking, feature requests, and task management for the project.
For Android development, it supports Gradle-based android projects, plugins for Android Studio and JetBrains IntelliJ IDEA, making version control operations more user-friendly.",concept
20202,bitbucket,"Bitbucket is a web-based hosting service that is owned by Atlassian. Bitbucket uses either Mercurial or Git revision control systems, allowing users to manage and maintain their code. This platform is mainly used for code and code review. Bitbucket provides both commercial plans and free accounts. It offers free accounts with an unlimited number of private repositories (which can have up to five users in the case of free accounts) as of September 2010. It originally offered only Mercurial support. Bitbucket integrates with other Atlassian software like JIRA, HipChat, Confluence and Bamboo.",concept
20203,gitlab,"`Gitlab` is a web-based DevOps lifecycle tool which provides a Git-repository manager, along with continuous integration and deployment pipeline features, using an open-source license, developed by GitLab Inc. Users can manage and create their software projects and repositories, and collaborate on these projects with other members. `Gitlab` also allows users to view analytics and open issues of their project. It stands next to other version control tools like `GitHub` and `Bitbucket`, but comes with its own set of additional features and nuances. For Android development, `Gitlab` can be particularly useful owing to its continuous integration and deployment system which can automate large parts of the app testing and deployment.",concept
203,app components,app components,topic
20300,activity,activity,topic
2030000,activity lifecycle,"The **Activity Lifecycle** in Android represents a series of states or events that an activity can go through from its creation to its destruction. The primary states or events are `onCreate()`, `onStart()`, `onResume()`, `onPause()`, `onStop()`, `onDestroy()`, and `onRestart()`. The method `onCreate()` is called when the activity is first created, followed by `onStart()` when the activity becomes visible to the user. The `onResume()` method executes when the user starts interacting with the application. `onPause()` and `onStop()` methods are invoked when the application is no longer in the foreground or visible to the user. The `onDestroy()` method is used when the activity is being completely removed from the memory. The `onRestart()` method is called after the system stops the activity and is about to start it again. The proper handling of these states ensures the efficient use of resources and a smooth user experience.",concept
2030001,state changes,"In Android, an ""Activity"" is a crucial component that represents a single screen with a user interface. One or more active activities make up an Application. These activities can go through different states in their lifecycle, often due to user interaction or system interruption. The primary states of an Activity include `Created`, `Started`, `Resumed`, `Paused`, `Stopped`, `Restarted`, and `Destroyed`. The ""Created"" state occurs when an activity instance is being created. The ""Started"" state is when the activity is visible to the user, while ""Resumed"" is when the activity is interacting with the user. An activity is ""Paused"" when it loses focus but is partly visible, ""Stopped"" when it's not visible, ""Restarted"" when the activity is about to be started, and ""Destroyed"" when the activity is finished or the system is temporarily destroying it.
",concept
2030002,tasks backstack,"The **tasks backstack** in Android refers to the way Android manages and arranges tasks in a stack-like structure. Every task has a stack of activities, which is referred to as the task's back stack. The activities are placed in the order they are opened. When a new activity is started, it is placed at the top of the stack and becomes the running activity, while the previous activity is paused and put into the back stack. When you press the back button, the current activity is destroyed and the activity at the top of the back stack becomes active again. Android defines how to navigate between tasks and activities using this back stack concept.",concept
20301,services,"**Services**: A service in Android is an app component that performs operations in the background without a user interface. It can be started by an application component, like an activity, and it will continue to run in the background even if the user switches to another application. There are two types of services in Android, namely, `Started Service` and `Bound Service`. A `Started Service` is used to perform a single operation, such as downloading a large file. On the other hand, a `Bound Service` offers a client-server interface that allows components to interact with the service, send requests, receive results, and even perform interprocess communication (IPC).",concept
20302,content provider,"A **Content Provider** in Android is a key component that allows applications to securely share data with other applications. They act as a layer between databases and applications to enhance data security. Content providers manage access to a structured set of data by handling data transactions, implementing data security, and maintaining isolation between applications. They provide an abstracted interface which is used to access data, while the underlying storage method (Like SQLite database, web, or any other method) remains hidden. This mechanism aids in retrieving data from a non-relational source in a structured way. They're used primarily when data needs to be shared between multiple applications, not just within a single application.",concept
20303,broadcast receiver,"**Broadcast Receivers** in Android are components that respond to system-wide broadcast announcements. They can be registered to respond to a specific type of broadcasts or implement a user-defined broadcast. While you can initiate a broadcast from your app, they are generally used for receiving system notifications or communicating with other applications. However, keep in mind that they cannot display a user interface, but they can start activities if necessary, which do have a user interface. A `BroadcastReceiver` class must override the `onReceive()` method where each message is received as an `Intent` object parameter.",concept
20304,intent,intent,topic
2030400,implicit intents,"In Android development, **Implicit Intents** do not specify the target component explicitly like Explicit Intents. Instead, they allow the system to find a suitable component matching the Intent description to handle the request. The system will find an activity that can handle this intent by comparing the `<intent-filter>` section in the `AndroidManifest.xml` of all apps installed on the device against the Implicit Intent. An ideal example of an implicit intent is opening a URL. You do not need to know the specific activity that can handle this request, you just declare an intent to view a web page and Android system will select the suitable app that can open the URL.",concept
2030401,explicit intents,"**Explicit Intents** are primarily used within an application's own boundaries. In explicit intents you specify the component that needs to be responded to the intent. Therefore, the target component must be specified by calling methods such as `setComponent(ComponentName)`, `setClass(Context, Class)`, or `setClassName(String, String)`. This means that explicit intents are typically used for launching activities, broadcasting messages, starting services within the app. Explicit intents are not resolved by the system but are passed to the component identified in the intent.",concept
2030402,intent filters,"`Intent Filters` in Android are essential components of the Android system where you can declare the capabilities of your activities, services, and broadcast receivers. An intent filter is an expression found in your app's manifest file, defined in the <intent-filter> XML element. Android uses these filters to determine the appropriate components for incoming intents, which can be either explicit or implicit. Your app's ability to respond to intents depends on the filters you define. The filters are set of conditions comprised of `action`, `category`, and `data` which your activity or service is able to perform. If the incoming `Intent` matches with defined `Intent Filters`, Android system will permit that `Intent` to your Component (Activity, Service, or Broadcast Receiver).",concept
204,interface and navigation,interface and navigation,topic
20400,jetpack compose,"`Jetpack Compose` is a modern toolkit for building native Android UI. It simplifies and accelerates UI development on Android with less code, powerful tools, and intuitive Kotlin APIs. `Jetpack Compose` offers a declarative approach to designing UI, where you can simply describe what your UI should look like at any given point of your app’s state, and `Compose` takes care of updating the view hierarchy, making UI development more efficient. It also integrates well with existing Android apps, letting you adopt its benefits at your own pace.",concept
20401,app shortcuts,"Sure, I can provide information about ""app shortcuts"" feature in Android. 

### App Shortcuts

App shortcuts in Android are designed to provide quick and convenient routes to specific actions or functions within your app from the device home screen. To use them, long-press an app's icon and a pop-up menu will appear with the available shortcuts. Depending on the app, you might be able to send a message, make a booking, navigate home, or perform some other specific task without having to first open the app and navigate to the desired function. These shortcuts can also be moved and placed individually on the home screen for even faster access.",concept
20402,navigation components,"The **Navigation Components** are part of Android Jetpack and are designed to simplify the implementation of navigation in your Android app. These components help you follow best practices, handle deep linking, and provide a consistent user experience across deep and conditional navigation. They also automate many common tasks, such as handling Up and Back actions correctly across many different types of devices. The Navigation component consists of three key parts which are Navigation graph, NavHost, and NavController.",concept
205,design architecture,design architecture,topic
20500,repository pattern,"In Android design architecture, the `Repository Pattern` separates the data sources from the rest of the application. It acts as a mediator between different data sources, such as persistent models, web services, or caches. Instead of having the network and database calls spread out throughout your ViewModel, they are encapsulated within a Repository class. This separation will make the code clean, easy to read and testable. It provides a simple API for data access, the rest of the app doesn't need to know where the data is coming from it just asks the repository.",concept
20501,builder pattern,The **Builder Pattern** in Android is used to construct complex objects step by step. It separates the construction of an object from its representation. The pattern involves a `Builder` class which is used to construct the `Product` class. The Builder class typically has a method for each part that may be used to construct a Product. It also has a method for returning the final product. The Builder pattern is useful in situations where you might have multiple ways to create an object or when an object requires a large number of parameters for its constructor.,concept
20502,observer pattern,observer pattern,topic
2050200,flow,"`Flow` in Android development is part of the Kotlin Coroutines library. It is a type that can emit multiple values sequentially, making it perfect for working with any data streams or any streams of events that aren't instantaneous. Like Observables, `Flow` is also based on the observer pattern, meaning it can emit values and these emissions can be observed and reacted to. However, `Flow` comes with built-in backpressure handling and the ability to transform, filter, or combine these flows in a sequence. Along with Coroutines, `Flow` encourages a more predictable and simplified concurrency design without callback hell problem.",concept
2050201,rxjava,"RxJava, standing for Reactive Extensions for the JVM, is a library in the Java and Android ecosystem that allows developers to write asynchronous, event-based programs. It is developed according to reactive programming principles and it supports multi-threading operations. One can create data streams from just about anything - variables, data structures, inputs, etc. and these streams could be used with functional programming methods to process the data. 

In Android, RxJava is often used in combination with Retrofit, to handle API calls or with Room, to handle tasks involving the database. This library provides a set of operators such as `map()`, `filter()`, `concat()`, `merge()`, `flatmap()` etc. to handle tasks such as chain asynchronous operations, perform computations, or transform data. 

There are three important entities in RxJava - 'Observable', 'Observer' and 'Subscription'. 'Observable' is a data stream that does some work, 'Observer' watches the 'Observable' and does something when the 'Observable’ changes, and 'Subscription' is what ties an 'Observer' to an 'Observable' - linking their lifecycles and allowing 'Observer’s to unsubscribe (to stop receiving updates) when they’re destroyed. In other words, 'Subscription' is what allows you to manage memory and prevent crashes due to leaks.",concept
2050202,rxkotlin,"`RxKotlin` is a lightweight library that adds convenient extension functions to `RxJava`. It allows developers to use RxJava with Kotlin in a more idiomatic way, thus making code more readable and understandable. While `RxJava` is a Java-based implementation of Reactive Extensions, `RxKotlin` is essentially a wrapper that includes extension functions and other constructs to take full advantage of Kotlin's features, such as its syntactic simplicity and ease of use.",concept
2050203,livedata,"`LiveData` is a data holder class that can be observed within a given lifecycle. This means that an `Observer` can be added in a pair with a `LifecycleOwner`, and this observer will be notified about modifications of the `LiveData` object only if the associated `LifecycleOwner` is in active state. `LiveData` respects the lifecycle state of app components, such as activities, fragments, or services, and it only updates app-component observers that are in an active lifecycle state. Furthermore, `LiveData` automatically removes the observers when their associated `LifecycleOwner` moves to the `Destroyed` state. This combination of `LiveData` and `LifecycleOwner` helps you to manage appropriate and efficient updates because `LiveData` takes into consideration the lifecycle state of your app components.",concept
20503,dependency injection,dependency injection,topic
2050300,dagger,"[Dagger](https://dagger.dev/) is a fully static, compile-time dependency injection framework for both Java and Android. It is an adaptation of an earlier version created by Square that's focused on simplicity and speed. Dagger's primary focus is on compile-time analysis of dependencies, code simplicity, and clarity. It uses annotations to define dependencies, thus aiding in easy readability and understanding of the code. Dagger also eliminates the use of reflection to inject dependencies, thus boosting performance. It offers custom scopes to control the lifespan of instances and ensures that dependencies are Singleton across the entire lifespan of certain scopes.",concept
2050301,hilt,"Hilt is a dependency injection library for Android that reduces the boilerplate code that you would normally need to write when setting up manual dependency injection in your project. It is based on the Dagger library, but it simplifies the implementation process and streamlines the use of Dagger in Android apps. To set it up, you must annotate your Android classes and Hilt will automatically generate and provide the necessary dependencies for you. Moreover, Hilt provides predefined set of components tied to the Android lifecycle which helps to handle scoped instances.",concept
2050302,koin,"[Koin](https://insert-koin.io) is a lightweight dependency injection framework developed specifically for Kotlin developers. It uses functional resolution only - no proxy, no code generation, no reflection, and offers simplicity by leveraging Kotlin's language features. While Koin is not related to the Android platform, it provides specific extensions enabling an efficient integration into your Android applications, including [Android Architecture Components](https://developer.android.com/topic/libraries/architecture/index.html) and [Kotlin Coroutines](https://kotlinlang.org/docs/reference/coroutines-overview.html), amongst others.",concept
2050303,kodein,"`Kodein` is one of the recommended dependency injection frameworks suitable for Android development. This open-source Kotlin library simplifies the DI process by allowing developers to bind various types of dependencies, such as singleton, factory, or provider bindings into containers or `Kodein` modules. It promotes dependency declaration where used, instead of prior declaration. It follows a ""Define in Use"" principle that enables easy-to-use, easy-to-debug and very idiomatic Kotlin code. It's also worth noting that `Kodein` works hand in hand with Android's lifecycle and provides easy integration with popular libraries such as Android Architecture Components, leveraging their functionality.",concept
20504,factory pattern,"The **Factory Pattern** is part of the Creational Design Patterns. This pattern provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created. It introduces an abstraction layer between the client code and the concrete objects. Normally, this is achieved by using a factory method to create objects instead of using constructors. The instance of the class is usually created by a method, referred to as a `factory method`, which is either specified in an interface and implemented in implementing classes or implemented in a base class which may be optionally overridden by derived classes. The Factory Method is used when we want to provide users with a way to create an instance of a class from one of several possible classes that share a common super class.

Here is a basic example of the Factory Pattern:

```java
public abstract class Animal {
    public abstract String makeSound();
}

public class Dog extends Animal {
    @override
    public String makeSound() {
        return ""Woof"";
    }
}

public class Cat extends Animal {
    @override
    public String makeSound() {
        return ""Meow"";
    }
}

public class AnimalFactory {
    public Animal createAnimal(String type) {
        if (""Dog"".equals(type)) {
            return new Dog();
        } else if (""Cat"".equals(type)) {
            return new Cat();
        }
        return null;
    }
}
```
In the code above, `AnimalFactory` is the factory class responsible to create and return instances of `Dog` and `Cat` classes.",concept
20505,architectural patterns,architectural patterns,topic
2050500,mvi,"""MVI"" stands for Model-View-Intent, and is an architectural pattern used in Android development. This pattern introduces a unidirectional data flow which makes it easier to understand an app's state at any given point in time. In the MVI pattern, the `Intent` represents an intention or desire to perform an action, often triggered by user inputs. The `View` is responsible for rendering the UI and emitting intents. The `Model`, on the other hand, represents the state of the app and reacts to intents by changing its state. It's the Model's responsibility to respond to each Intent with a resulting new state. Once a new state is created, it is published back to the `View`. This clear separation and single direction of data and event flow can help in managing side-effects and handling asynchronous actions.",concept
2050501,mvvm,"""**MVVM**"" stands for ""Model View ViewModel"" and it is an architectural pattern that aims to separate the development of Graphical User Interface from the business logic. In MVVM, the **Model** represents the data and the business logic of the app. The **View** is responsible for the display of the data and interacts with the user. The **ViewModel** acts as a link between the Model and the View. It handles all the UI logic and preserves the state of the data when the configuration changes or when the app is stopped and then started again.",concept
2050502,mvp,"MVP stands for Model-View-Presenter. It is an architectural pattern often used in Android development. In MVP, the architect separates the application's responsibilities into three main layers. The 'Model' refers to the data and business logic of the application. The 'View', typically implemented by an Activity or Fragment in Android, is responsible for displaying the data to the user and collecting user inputs. Lastly, the 'Presenter' works as a bridge between the Model and the View. It listens to user interactions from the View and updates the Model accordingly, and also updates the View based on changes in the Model. This separation of responsibilities allows for better code organization, easier testing, and greater flexibility.",concept
2050503,mvc,"MVC stands for Model-View-Controller. It is a widely used design pattern for designing software's architecture. According to this, an application is divided into three core components. The 'Model' is responsible for handling the data and business logic. The 'View' is responsible for rendering the model's data and generating the user interface. The 'Controller' acts as an interface between the Model and View. It processes all the user's interactions and updates the View and Model accordingly. It's crucial to note that in MVC, the View can have multiple representations of the Model.",concept
206,storage,storage,topic
20600,shared preferences,"Shared Preferences in Android are used to store data in key-value pairs. It works similar to a tiny database where you can save small pieces of data such as settings or the state of an application. When data is saved to Shared Preferences, it persists across user sessions, even if your application is killed or gets deleted. Data in Shared Preferences is not typically used for large amounts of data. To perform actions such as saving, retrieving, or editing data in Shared Preferences, you use an instance of `SharedPreferences.Editor`.",concept
20601,datastore,"`DataStore` is a new and improved data storage solution by Android, meant to supersede `SharedPreferences`. It is important to understand that it comes in two different implementations: `Preferences DataStore` and `Proto DataStore`. `Preferences DataStore` uses key-value pairs similar to `SharedPreferences`, but it's more robust and handles runtime exceptions more efficiently. On the other hand, `Proto DataStore` uses custom data types to provide type safety. It lets you leverage the power of Protocol Buffers, a language-neutral, platform-neutral mechanism for serializing structured data, as the data storage format. Operating on data in `DataStore` is transactional, meaning that if an error occurs during an operation, all changes are rolled back, so the data remains in a consistent state.",concept
20602,room,"""Room"" is a persistence library introduced by Google that provides an abstraction layer over SQLite to help with robust database access while harnessing the full power of SQLite. Room supports the creation of databases and defines queries in compile-time-checked SQL strings. These databases belong to the data classes that you create representing your app's data. Room comprises three main components: **Database**, a container that holds your app's data tables; **Entity**, representing a table within the database; and **DAO (Data Access Object)**, containing SQL query methods to interact with the database.",concept
20603,file system,"The Android operating system uses a specific File System structure to store and manage files. It’s primarily based on the Linux File system, with some specific Android features. The File System includes several key directories that are used for specific purposes. For instance, directories such as `/system` hold system apps and firmware, while `/data` contains user data, settings and installed applications, and `/sdcard` usually represents an internal or external SD card for additional storage. It's worth mentioning directories like `/proc`, `/dev`, and `/sys` which are virtual file systems and house important system files. As an Android developer, understanding these directories can help you interact with Android's file system more effectively. Note that access to some of these directories may be restricted depending on system permissions.",concept
207,network,network,topic
20700,retrofit,"Retrofit is a type-safe HTTP client for Android and Java. It's designed to connect your application with an API or a back-end web service. Retrofit uses annotations to encode details about the API's operations and requests, such as the HTTP method (GET, POST, PUT, DELETE, HEAD) and the query parameters. The main advantage of Retrofit over other similar libraries is in its simplicity and intuitiveness, and it efficiently handles all network calls.
```
Retrofit retrofit = new Retrofit.Builder()
                      .baseUrl(""https://api.example.com"")
                      .addConverterFactory(GsonConverterFactory.create())
                      .build();

ExampleService service = retrofit.create(ExampleService.class);
Call<ExampleResponse> call = service.exampleCall();
```
The `baseUrl()` is your API base URL. The `addConverterFactory()` specifies a factory to use for serialization and deserialization. In the example above, the Gson library will handle the conversion of JSON data. The `build()` call finishes the builder and returns the retrofit instance. Finally, `create()` generates an implementation of the `ExampleService` interface.",concept
20701,okhttp,"`OkHttp` is an HTTP client that's extremely efficient, enabling several advanced features in Android app or other platforms that use Java. Developed by Square, it's built for high efficiency and capacity, simplifying many networking tasks, including connection pooling, response caching, and request retries. OkHttp allows seamless recovery from network issues, minimizing the loss of data. The library ensures fewer errors and higher quality of service by using the modern TLS encryption, extensible request and response models, and a fluent API for ease of use and integration.",concept
20702,apollo android,"**Apollo Android** is a set of tools for using GraphQL with Android, made by the Apollo community developers. It's fully written in Kotlin and it was designed to seamlessly integrate with any Android app, making fetching data across network and handling data in the client-side a breeze. Apollo Android runs your queries and mutations and returns results as generated Kotlin types. It also normalizes your data and caches your results for further speed enhancements. It operates both on Android and Kotlin/JVM backend environment. It's also coroutines-first making handling concurrency easy and effective. To use Apollo Android, you'll set up the plugin, point it at your GraphQL schema, and write GraphQL queries.",concept
208,asynchronism,asynchronism,topic
20800,coroutines,"In Android, `coroutines` refer to a concurrency design pattern that you can use on Android to simplify code that executes asynchronously. `Coroutines` provide a way to write asynchronous, non-blocking code in a natural, sequential manner. The fundamental building blocks of `coroutines` are `suspend` functions which are simply functions that can be paused and resumed at later times. They are the key to writing non-blocking asynchronous code and represent a single unit of asynchronous computation. This aspect of `coroutines` makes them useful for managing long-running tasks that might otherwise block the main thread and cause your application to become unresponsive.",concept
20801,threads,"In Android, a `Thread` is a concurrent unit of execution. It has its own call stack, but can share its state with other threads in the same process, i.e., they can share the same memory area. They're primarily used in Android to perform operations in the background. One important aspect to note is that Android UI operations are not thread-safe, meaning they should always be done on the UI thread. Operations on `Threads` are typically managed through `Handler`, `Looper` and `MessageQueue` classes. Android also provides high-level constructs like `AsyncTask` and `Loader` for managing threads in relation to the UI.",concept
20802,rxjava,"RxJava (Reactive Extensions for the JVM) is a powerful library for composing asynchronous and event-based programs using observable sequences in Java. If you are an Android developer, you might be familiar with callbacks and async tasks to perform long-running operations in the background. However, handling multiple async tasks and nested callbacks can produce code that's complicated to read and maintain. To alleviate such complexities, RxJava provides tools and methods to create, transform and chain Observable sequences in a clean and declarative manner. In other words, it provides a way to manage asynchronicity and concurrency in your code.
",concept
20803,rxkotlin,"`RxKotlin` is a lightweight language extension to Java for Android development, enabling Android apps to be built using Kotlin with Reactivex. It brings the power of reactive programming paradigm to Kotlin, extending its capabilities for processing asynchronous streams of data. It allows you to express static (e.g., already known) or dynamic (e.g., future unknown) data streams, and perform various operations on them easily. Key concepts of `RxKotlin` include Observables, Observers and Schedulers. Observables represent the data streams, Observers interact with the data stream, and Schedulers determine on which thread operations are performed. RxKotlin helps manage background tasks, handle asynchronous data streams, and implement complex UIs, among others. It is especially beneficial for mobile development where UI thread and background thread coordination is essential.",concept
20804,work manager,"`WorkManager` is an Android library introduced by Google to execute tasks in a predictable and reliable manner. It's designed for tasks that require guaranteed execution, even if the app has been closed or the device restarts. It is backwards compatible up to API 14 and uses JobScheduler for API 23 and above, whilst using a combination of BroadcastReceiver + AlarmManager for APIs 14 and up. Regardless of the device API level, WorkManager works for all Android devices. Three types of work are supported by WorkManager - OneTimeWorkRequest, PeriodicWorkRequest, and DelayedWorkRequest. You can have constraints too for your work execution like work only when there's Internet or work only when the device is in idle state. It also supports work-chaining where you can create a chain of works to be performed in a specific order.",concept
209,common services,common services,topic
20900,firebase,firebase,topic
2090000,authentication,"Firebase Authentication in Android provides backend services, easy-to-use SDKs, and ready-made UI libraries to authenticate users to your app. It supports authentication using passwords, popular federated identity providers like Google, Facebook and Twitter, and more. Firebase also facilitates integration of functionality to sign in, sign up, and reset password. Moreover, it can be used to secure your database by implementing role-based access to data and to provide personalized experience according to the user's unique identity.

Firebase Authentication offers two methods to authenticate. These are using an `email/password` login provided by Firebase Authentication or a `federated identity provider` like Google or Facebook. It also covers token-based authentication by creating custom tokens or verifying ID tokens. In addition to this, Firebase Authentication works with Firebase's client SDKs for practical use and works for long-running server processes for some of your users.

Firebase Authentication provides a full suite of capabilities even beyond authentication to make your life easier, which includes Security Rules for Cloud Storage and Cloud Firestore, Firebase Dynamic Links, and Firebase Invites.

Remember to always keep your development environment and Firebase console synced for smooth development operations. Any changes to the authentication method in the Firebase console should be reflected in your app and vice versa.",concept
2090001,crashlytics,"`Crashlytics` is a lightweight, real-time crash reporter that helps you track, prioritize, and fix stability issues that dismantle your app's quality. It delivers fast and precise information about crashes and helps you gain insights into your app's performance so you can pinpoint the exact line of code your app crashed on. Crashlytics offers a comprehensive suite of features like crash analysis, issue aggregation, and tracking user activities that led to a crash. This tool is now a part of Google's `Firebase` platform but can also be used independently.",concept
2090002,remote config,"Firebase Remote Config is a cloud service offered by Firebase. It lets you change the behavior and appearance of your app without requiring a new app release. By using Firebase Remote config, you can customize your app for different user segments, manage the core aspects of your app by modifying parameters externally, and conduct A/B tests to improve your app. It works efficiently by using default values that control the behavior and appearance of your app. When your app needs configuration information, it makes a request to the Firebase Remote Config server. If the server has updated values, these values replace the default ones, hence modifying the app's behavior or appearance according to your needs.",concept
2090003,cloud messaging,"Firebase Cloud Messaging (FCM) is a powerful, battery-efficient messaging service that enables you to send messages reliably and securely to your Android applications. It enables you to send two types of messages: ""notification messages"" and ""data messages"". Notification messages are primarily meant for user notifications and will only be delivered when the application is in the foreground. On the other hand, data messages can handle even when the app is in the background or killed and can be used to send custom key-value pairs. FCM also supports various additional features, such as topic messaging to send messages to multiple devices subscribed to a common topic, device group messaging for sending messages to groups of user devices, and upstream messaging for sending messages from the client application to the FCM server.",concept
2090004,fire store,"Firestore, often referred to as Firebase Firestore or Cloud Firestore, is a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud. Firestore comes with features like expressive querying, real-time updates, and automatic multi-region data replication. It is designed to offer seamless integration with other Firebase and Google Cloud products. It provides a cloud-based NoSQL database, which means the data is stored as collections of documents. Each document, in turn, contains a set of key-value pairs. Firestore ensures durable networking, so data syncs across client apps in real-time, even when the device is offline, making it easier for you to work with distributed data that can be kept in sync across various clients.",concept
20901,google admob,"Google AdMob is a mobile advertising platform designed for app developers to monetize their apps by displaying ads from over 1 million Google advertisers. AdMob supports a wide range of ad formats, such as banner ads, interstitial ads, video ads, and more. It offers a powerful mediator that enables you to display ads from multiple sources, which includes the Google Mobile Ads SDK, third-party ad networks, and house ad campaigns. Furthermore, AdMob provides analytical tools to better understand your users and maximize ad revenue.",concept
20902,google play services,"*Google Play Services* is a proprietary background service and API package for Android devices from Google. Operated by Google, the service provides core functionalities like authentication for Google services, synchronized contacts, access to all the latest user privacy settings, and higher quality, lower-powered location-based services. It also speeds up offline searches, provides more immersive maps, and improves gaming experiences. Google Play Services play a crucial role in the operation of various other applications, including those not developed by Google. Moreover, it improves the overall Android experience by speeding up offline searches, providing more detailed maps, enhancing gaming experiences, and more.",concept
20903,google maps,"Google Maps is a crucial service on Android, offering powerful, user-friendly mapping technology and local business information. Google Maps features include street maps, satellite imagery, 360° panoramic views of streets (Street View), real-time traffic conditions (Google Traffic), and route planning for traveling by foot, car, bicycle and air, or public transportation. The service's interface includes a function to overlay various layers such as traffic density, public transit lines, and cycling paths. Google Maps for Android also provides an API, which allows developers to interface with and control certain aspects of the Google Maps service in their applications. This capability subjects to certain usage limits and requirements set by Google.
",concept
210,linting,linting,topic
21000,ktlint,"`ktlint` is a static code analysis tool. It enforces a highly consistent style and adheres extensively to the official Kotlin coding conventions. `ktlint` does not have any configuration options (by design). The only exceptions are disabling specific rule(s) and specifying indentation size. `ktlint` can check, as well as automatically fix your code. Its main goal is to bring unified code style to your project. It works on the command line as well, so it can be hooked up into your continuous integration pipeline. It also has Ant, Gradle and Maven wrappers. You can use Ktlint on any Android/Kotlin project, as long as you have Gradle or Maven installed.",concept
21001,detekt,"`Detekt` is a static code analysis tool for the Kotlin programming language. It operates on the abstract syntax tree provided by the Kotlin compiler and can run in the command line or as a task in your Gradle build script. Detekt provides complexity reports that can be used to identify overly complex code and help simplify it. It also checks for a variety of potential bugs and code smells, including issues with formatting, naming conventions, exception handling, and more. Moreover, Detekt is highly configurable, allowing you to enable, disable, or modify the behavior of its checks to suit your project's needs.",concept
211,debugging,debugging,topic
21100,timber,"`Timber` is a logging utility tool that has been specifically extended from the `Log` class of Android. It has been built to simplify the logging process while aiming to reduce the amount of boilerplate code the developer has to write. It was designed and is maintained by Jake Wharton, a renowned contributor in the Android Developer community. In Timber, each log message is directed to the next available logger, reducing the redundancy of manually assigning log tags. The simplicity of Timber is highlighted by its ability to log without defining any tag. Most importantly, Timber only logs messages in debug builds by default, avoiding potential data leaks in your production application.",concept
21101,leak canary,"LeakCanary is a powerful open-source memory leak detection library for Android and Java. It is integrated into your app, and once you run your app, LeakCanary immediately starts watching for memory leaks and captures a memory dump if it detects one. After investigation, it will present a full stack trace to help you pinpoint the exact location of the memory leak. With the LeakCanary's user-friendly interface, you can then analyze the memory leak right in your app. The most recent version of LeakCanary also includes other improvements like automatic detection of leaks in Activity, Fragment, View, ViewModel, LiveData, etc.",concept
21102,chucker,"`Chucker` is an open-source debugging library created for Android applications. It has been designed to be easy to use and convenient for developers. This library intercepts and records all HTTP requests and responses inside your application, which helps to visualize and share this information in an understandable and easy-to-read format. Using Chucker's distinct features, you can inspect all the HTTP and HTTPS traffic going in and out of your app directly. In addition, it provides other nifty features such as a user-friendly interface to view the server's raw response. It's like having a built-in network inspector in your debugging tool, enabling you to solve network-related issues more efficiently.",concept
21103,jetpack benchmark,"Jetpack Benchmark is a library within the Android Jetpack Suite that allows developers to quickly and accurately measure the performance of their apps. This library can help measure CPU, memory, and IO performance of code in Android apps. Developers can define some specific code paths to be benchmarked by wrapping the code in `BenchmarkRule.measureRepeated {}`. In addition, it automatically takes care of warmup, measures your code performance, and outputs benchmarking results to the Android Studio's logcat.",concept
212,testing,testing,topic
21200,espresso,"Espresso is a testing framework provided by Android to create UI tests for Android applications. It automatically synchronizes your test actions with the UI of your application, ensuring that your test will only proceed when the necessary UI activities have been completed. In Espresso, you can programmatically simulate user interactions like clicking buttons, typing text, or swiping screens, and then examine the UI's state to confirm it's as expected. Espresso tests can run on devices running Android 4.3 (API level 18) or higher. It's important to note that Espresso tests are written based on what the user can see on the screen.",concept
21201,junit,"JUnit is a popular testing framework for Java programming. It forms the basis for many other testing libraries and tools in the Android ecosystem, making it important for any Android developer to become familiar with. The basic use of JUnit involves annotations such as `@Test`, indicating methods that represent a single test case. Other useful features include `@Before` and `@After` which allow for setup and teardown processes to be defined clearly. Another powerful feature in JUnit is the ability to create parameterized tests, effectively running the same test multiple times with different inputs.",concept
213,distribution,distribution,topic
21300,google playstore,"**Google Play Store** is the official distribution channel for Android apps and other digital media content. It is a global online software store developed and operated by Google. Developers submit their applications to Google Play through the Play Console where Google Play's automated systems scan for potentially malicious code and content violations, before they are published on the Play Store. Users can then browse, download, and use these applications on their Android devices or via the web. Purchases, downloads, and user feedback can be tracked via the Google Play Console. Owners of Android devices can also configure automatic updates for the applications they have installed from the store. This platform supports multiple languages and multiple forms of payment methods, making it accessible and customer-friendly.",concept
21301,firebase distribution,"Firebase Distribution is a development tool within the Google Firebase suite that allows you to share pre-release versions of your Android apps with your development team. It enables you to distribute your app binaries to multiple testers and teams to get feedback before the app's official launch. Firebase Distribution supports both Android and iOS applications and works in tandem with other features, like Firebase Crashlytics, to effectively manage the testing and debugging aspects of your application's lifecycle.",concept
21302,signed apk,"A **Signed APK** is a version of your app that you prepare for distribution in the Play Store or other Android markets. When you sign your app using a private key, you authenticate your identity as the developer of the app. It is a required step by the Android system that ensures only updates to the APK that are from the original developer will be accepted. The Android system refuses to install an app if it's not signed appropriately, thereby protecting users from potential security risks. Please make sure that you keep your private key in a safe place for future updates to your app, losing it would imply that you cannot update your app anymore.",concept
300,internet,internet,topic
30000,how does the internet work,"The Internet is a global network of computers connected to each other which communicate through a standardized set of protocols.

Visit the following resources to learn more:

- [How does the Internet Work?](https://cs.fyi/guide/how-does-internet-work)
- [The Internet Explained](https://www.vox.com/2014/6/16/18076282/the-internet)
- [How Does the Internet Work?](http://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm)
- [Introduction to Internet](/guides/what-is-internet)
- [How does the Internet work?](https://www.youtube.com/watch?v=x3c1ih2NJEg)
- [How the Internet Works in 5 Minutes](https://www.youtube.com/watch?v=7_LPdttKXPc)
- [How does the internet work? (Full Course)](https://www.youtube.com/watch?v=zN8YNNHcaZc)
",concept
30001,what is http,"HTTP is the `TCP/IP` based application layer communication protocol which standardizes how the client and server communicate with each other. It defines how the content is requested and transmitted across the internet.

Visit the following resources to learn more:

- [Everything you need to know about HTTP](https://cs.fyi/guide/http-in-depth)
- [What is HTTP?](https://www.cloudflare.com/en-gb/learning/ddos/glossary/hypertext-transfer-protocol-http/)
- [Full HTTP Networking Course](https://www.youtube.com/watch?v=2JYT5f2isg4)
- [An overview of HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview)
- [HTTP/3 From A To Z: Core Concepts](https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/)
- [HTTP/1 to HTTP/2 to HTTP/3](https://www.youtube.com/watch?v=a-sBfyiXysI)
- [HTTP Crash Course & Exploration](https://www.youtube.com/watch?v=iYM2zFP3Zn0)
- [SSL, TLS, HTTPS Explained](https://www.youtube.com/watch?v=j9QmMEWmcfo)
",concept
30002,browsers and how they work,"A web browser is a software application that enables a user to access and display web pages or other online content through its graphical user interface.

Visit the following resources to learn more:

- [How Browsers Work](https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/)
- [Role of Rendering Engine in Browsers](https://www.browserstack.com/guide/browser-rendering-engine)
- [Populating the Page: How Browsers Work](https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work)
",concept
30003,dns and how it works,"The Domain Name System (DNS) is the phonebook of the Internet. Humans access information online through domain names, like nytimes.com or espn.com. Web browsers interact through Internet Protocol (IP) addresses. DNS translates domain names to IP addresses so browsers can load Internet resources.

Visit the following resources to learn more:

- [What is DNS?](https://www.cloudflare.com/en-gb/learning/dns/what-is-dns/)
- [How DNS works (comic)](https://howdns.works/)
- [Understanding Domain names](https://developer.mozilla.org/en-US/docs/Glossary/DNS/)
- [DNS and How does it Work?](https://www.youtube.com/watch?v=Wj0od2ag5sk)
- [DNS Records](https://www.youtube.com/watch?v=7lxgpKh_fRY)
- [Complete DNS mini-series](https://www.youtube.com/watch?v=zEmUuNFBgN8&list=PLTk5ZYSbd9MhMmOiPhfRJNW7bhxHo4q-K)
",concept
30004,what is domain name,"A domain name is a unique, easy-to-remember address used to access websites, such as ‘google.com’, and ‘facebook.com’. Users can connect to websites using domain names thanks to the DNS system.

Visit the following resources to learn more:

- [What is a Domain Name?](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_domain_name)
- [What is a Domain Name? | Domain name vs. URL](https://www.cloudflare.com/en-gb/learning/dns/glossary/what-is-a-domain-name/)
- [A Beginners Guide to How Domain Names Work](https://www.youtube.com/watch?v=Y4cRx19nhJk)
",concept
30005,what is hosting,"Web hosting is an online service that allows you to publish your website files onto the internet. So, anyone who has access to the internet has access to your website.

Visit the following resources to learn more:

- [What Is Web Hosting? Explained](https://www.youtube.com/watch?v=htbY9-yggB0)
- [Different Types of Web Hosting Explained](https://www.youtube.com/watch?v=AXVZYzw8geg)
- [Where to Host a Fullstack Project on a Budget](https://www.youtube.com/watch?v=Kx_1NYYJS7Q)
- [What is the difference between webpage, website, web server, and search engine?](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/Pages_sites_servers_and_search_engines)
- [What is a web server?](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_web_server)
",concept
301,basic frontend,basic frontend,topic
30100,html,"HTML stands for HyperText Markup Language. It is used on the frontend and gives the structure to the webpage which you can style using CSS and make interactive using JavaScript.

Visit the following resources to learn more:

- [W3Schools: Learn HTML](https://www.w3schools.com/html/html_intro.asp)
- [Codecademy - Learn HTML](https://www.codecademy.com/learn/learn-html)
- [Interactive HTML Course](https://github.com/denysdovhan/learnyouhtml)
- [HTML Full Course - Build a Website Tutorial](https://www.youtube.com/watch?v=pQN-pnXPaVg)
- [HTML Tutorial for Beginners: HTML Crash Course](https://www.youtube.com/watch?v=qz0aGYrrlhU)
",concept
30101,css,"CSS or Cascading Style Sheets is the language used to style the frontend of any website. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.

Visit the following resources to learn more:

- [W3Schools — Learn CSS](https://www.w3schools.com/css/)
- [freeCodeCamp — Responsive Web Design](https://www.freecodecamp.org/learn/2022/responsive-web-design)
- [Learn to Code HTML & CSS](https://learn.shayhowe.com/html-css/building-your-first-web-page/)
- [What The Flexbox!](https://flexbox.io/)
- [Learn CSS | Codecademy](https://www.codecademy.com/learn/learn-css)
- [Learn Intermediate CSS | Codecademy](https://www.codecademy.com/learn/learn-intermediate-css)
- [CSS Crash Course For Absolute Beginners](https://www.youtube.com/watch?v=yfoY53QXEnI)
- [HTML and CSS Tutorial](https://www.youtube.com/watch?v=D-h8L5hgW-w)
- [CSS Masterclass - Tutorial & Course for Beginners](https://www.youtube.com/watch?v=FqmB-Zj2-PA)
",concept
30102,javascript,"JavaScript allows you to add interactivity to your pages. Common examples that you may have seen on the websites are sliders, click interactions, popups and so on.

Visit the following resources to learn more:

- [Visit Dedicated JavaScript Roadmap](/javascript)
- [W3Schools – JavaScript Tutorial](https://www.w3schools.com/js/)
- [The Modern JavaScript Tutorial](https://javascript.info/)
- [Exploring JS: JavaScript books for programmers](https://exploringjs.com/)
- [JavaScript Crash Course for Beginners](https://youtu.be/hdI2bqOjy3c?t=2)
- [Build a Netflix Landing Page Clone with HTML, CSS & JS](https://youtu.be/P7t13SGytRk?t=22)
",concept
302,os general knowledge,os general knowledge,topic
30200,terminal usage,"Terminals, also known as command lines or consoles, allow us to accomplish and automate tasks on a computer without the use of a graphical user interface.

Visit the following resources to learn more:

- [Command line crash course](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line)
- [Basic Terminal Usage - Cheat Sheet to make the command line EASY](https://www.youtube.com/watch?v=jDINUSK7rXE)
- [50+ Linux Commands You Must Know](https://www.digitalocean.com/community/tutorials/linux-commands)",concept
30201,how oss work in general,"An operating system is a main program on computer, that governs all other applications. It allows you to use browsers, play games, print documents, launch your favorite program.

Visit the following resources to learn more:

- [Operating System - Overview](https://www.tutorialspoint.com/operating_system/os_overview.htm)
- [Operating System Concepts](https://codex.cs.yale.edu/avi/os-book/OS10/index.html)
- [Operating System Basics ](https://www.youtube.com/watch?v=9GDX-IyZ_C8)
",concept
30202,process management,"Process management involves various tasks like creation, scheduling, termination of processes, and a deadlock. Process is a program that is under execution, which is an important part of modern-day operating systems. The OS must allocate resources that enable processes to share and exchange information. It also protects the resources of each process from other methods and allows synchronization among processes.

Visit the following resources to learn more:

- [Operating System: Process and Process Management](https://medium.com/@akhandmishra/operating-system-process-and-process-management-108d83e8ce60)
- [Process Management in OS: PCB in Operating System](https://www.guru99.com/process-management-pcb.html)
",concept
30203,threads and concurrency,"A thread is the smallest unit of processing that can be performed in an OS. In most modern operating systems, a thread exists within a process - that is, a single process may contain multiple threads.

Concurrency refers to the execution of multiple threads at the same time. It occurs in an operating system when multiple process threads are executing concurrently. These threads can interact with one another via shared memory or message passing. Concurrency results in resource sharing, which causes issues like deadlocks and resource scarcity. It aids with techniques such as process coordination, memory allocation, and execution schedule to maximize throughput.

Visit the following resources to learn more:

- [What’s the Diff: Programs, Processes and Threads](https://www.backblaze.com/blog/whats-the-diff-programs-processes-and-threads/)
- [Concurrency in Operating System](https://www.javatpoint.com/concurrency-in-operating-system)
- [Intro to Processes & Threads](https://www.youtube.com/watch?v=exbKr6fnoUw)
- [Introduction to Concurrency](https://www.youtube.com/watch?v=iKtvNJQoCNw)
- [Concurrency, Threading and Parallelism Explained](https://www.youtube.com/watch?v=olYdb0DdGtM)
",concept
30204,basic terminal commands,"Working within the terminal is common practice for any Backend Developer and there are many commands and utilities that can help you achieve your tasks more efficiently.

The best way to learn these commands is to practice them in your own machine/environment. Specifically, these are related to Linux commands/utilities which are the most prevalent in the market.

To understand these commands, read through the manual pages by using `man` command e.g. `man grep`, `man awk` etc.

After enough exposure and practice to these commands, it will become easier to use these in practice

Visit the following resources to learn more:

- [40 Basic Linux Commands](https://www.hostinger.com/tutorials/linux-commands)
- [A collection of modern/faster/saner alternatives to common unix commands](https://github.com/ibraheemdev/modern-unix)
- [Command Line Tutorial](https://www.learnenough.com/command-line-tutorial)
- [Commandline Challenge](https://cmdchallenge.com/)
- [The 50 Most Popular Linux & Terminal Commands (with timestamps)](https://www.youtube.com/watch?v=ZtqBQ68cfJc)
",concept
30205,memory management,"The term Memory can be defined as a collection of data in a specific format. It is used to store instructions and process data. The memory comprises a large array or group of words or bytes, each with its own location. The primary motive of a computer system is to execute programs. These programs, along with the information they access, should be in the main memory during execution. The CPU fetches instructions from memory according to the value of the program counter.

To achieve a degree of multiprogramming and proper utilization of memory, memory management is important. There are several memory management methods, reflecting various approaches, and the effectiveness of each algorithm depends on the situation.

Visit the following resources to learn more:

- [Demystifying memory management in modern programming languages](https://dev.to/deepu105/demystifying-memory-management-in-modern-programming-languages-ddd)
- [Memory Management in Operating System](https://www.geeksforgeeks.org/memory-management-in-operating-system/)
",concept
30206,interprocess communication,"Interprocess communication (IPC) refers specifically to the mechanisms an operating system provides to allow the processes to manage shared data

Visit the following resources to learn more:

- [Interprocess Communication](https://www.geeksforgeeks.org/inter-process-communication-ipc/)
- [Interprocess Communication - Neso Academy](https://www.youtube.com/watch?v=dJuYKfR8vec)
",concept
30207,io management,"One of the important jobs of an Operating System is to manage various I/O devices including mouse, keyboards, touchpad, disk drives, display adapters, USB devices, Bit-mapped screens, LED, Analog-to-digital converter, On/off switch, network connections, audio I/O, printers, etc.

Visit the following resources to learn more:

- [Operating System - I/O Hardware](https://www.tutorialspoint.com/operating_system/os_io_hardware.htm)
- [IO Management](https://www.omscs-notes.com/operating-systems/io-management/)
- [Basics of OS (I/O Structure)](https://www.youtube.com/watch?v=F18RiREDkwE)
",concept
30208,posix basics,"POSIX (Portable Operating System Interface) is a family of standards for maintaining compatibility between operating systems. It describes utilities, APIs, and services that a compliant OS should provide to software, thus making it easier to port programs from one system to another.

A practical example: in a Unix-like operating system, there are three _standard streams_, `stdin`, `stdout` and `stderr` - they are I/O connections that you will probably come across when using a terminal, as they manage the flow from the **standard input** (stdin), **standard output** (stdout) and **standard error** (stderr).

So, in this case, when we want to interact with any of these streams (through a process, for example), the POSIX operating system API makes it easier - for example, in the `<unistd.h>` C header where the stdin, stderr, and stdout are defined as `STDIN_FILENO`, `STDERR_FILENO` and `STDOUT_FILENO`.

POSIX also adds a standard for exit codes, filesystem semantics, and several other command line utility API conventions.

Visit the following resources to learn more:

- [POSIX standard by IEEE](https://pubs.opengroup.org/onlinepubs/9699919799/)
- [Summary of some POSIX implementations](https://unix.stackexchange.com/a/220877)
- [A guide to POSIX](https://www.baeldung.com/linux/posix)
",concept
30209,basic networking concepts,"Computer networking refers to interconnected computing devices that can exchange data and share resources with each other. These networked devices use a system of rules, called communications protocols, to transmit information over physical or wireless technologies.

Visit the following resources to learn more:

- [What is Computer Networking?](https://aws.amazon.com/what-is/computer-networking/)
",concept
303,learn a language,learn a language,topic
30300,go,"Go is an open source programming language supported by Google. Go can be used to write cloud services, CLI tools, used for API development, and much more.

Visit the following resources to learn more:

- [Visit Dedicated Go Roadmap](/golang)
- [A Tour of Go – Go Basics](https://go.dev/tour/welcome/1)
- [Go Reference Documentation](https://go.dev/doc/)
- [Learn Go | Boot.dev](https://boot.dev/learn/learn-golang)
- [Go by Example - annotated example programs](https://gobyexample.com/)
- [Learn Go | Codecademy](https://www.codecademy.com/learn/learn-go)
- [W3Schools Go Tutorial ](https://www.w3schools.com/go/)
- [Making a RESTful JSON API in Go](https://thenewstack.io/make-a-restful-json-api-go/)
- [Go, the Programming Language of the Cloud](https://thenewstack.io/go-the-programming-language-of-the-cloud/)
",concept
30301,rust,"Rust is a modern systems programming language focusing on safety, speed, and concurrency. It accomplishes these goals by being memory safe without using garbage collection.

Visit the following resources to learn more:

- [The Rust Programming Language - online book](https://doc.rust-lang.org/book/)
- [Rust by Example - collection of runnable examples](https://doc.rust-lang.org/stable/rust-by-example/index.html)
- [Rust vs. Go: Why They’re Better Together](https://thenewstack.io/rust-vs-go-why-theyre-better-together/)
- [Rust by the Numbers: The Rust Programming Language in 2021](https://thenewstack.io/rust-by-the-numbers-the-rust-programming-language-in-2021/)
",concept
30302,java,"Java is general-purpose language, primarily used for Internet-based applications.
It was created in 1995 by James Gosling at Sun Microsystems and is one of the most popular options for backend developers.

Visit the following resources to learn more:

- [Visit Dedicated Java Roadmap](/java)
- [Java Website](https://www.java.com/)
- [Codeacademy - Free Course](https://www.codecademy.com/learn/learn-java)
- [W3 Schools Tutorials](https://www.w3schools.com/java/)
- [Java Crash Course](https://www.youtube.com/watch?v=eIrMbAQSU34)
- [Complete Java course](https://www.youtube.com/watch?v=xk4_1vdrzzo)",concept
30303,csharp,"C# (pronounced ""C sharp"") is a general purpose programming language made by Microsoft. It is used to perform different tasks and can be used to create web apps, games, mobile apps, etc.

Visit the following resources to learn more:

- [C# Learning Path](https://docs.microsoft.com/en-us/learn/paths/csharp-first-steps/?WT.mc_id=dotnet-35129-website)
- [C# on W3 schools](https://www.w3schools.com/cs/index.php)
- [Introduction to C#](https://docs.microsoft.com/en-us/shows/CSharp-101/?WT.mc_id=Educationalcsharp-c9-scottha)
- [C# tutorials](https://www.youtube.com/watch?v=gfkTfcpWqAY&list=PLTjRvDozrdlz3_FPXwb6lX_HoGXa09Yef)
",concept
30304,php,"PHP is a general purpose scripting language often used for making dynamic and interactive Web pages. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994. The PHP reference implementation is now produced by The PHP Group and supported by PHP Foundation. PHP supports procedural and object-oriented styles of programming with some elements of functional programming as well.

Visit the following resources to learn more:

- [PHP Website](https://php.net/)
- [Learn PHP - W3Schools](https://www.w3schools.com/php/)
- [PHP - The Right Way](https://phptherightway.com/)
- [PHP for Beginners](https://www.youtube.com/watch?v=U2lQWR6uIuo&list=PL3VM-unCzF8ipG50KDjnzhugceoSG3RTC)
- [PHP For Absolute Beginners](https://www.youtube.com/watch?v=2eebptXfEvw)
- [Full PHP 8 Tutorial - Learn PHP The Right Way In 2022](https://www.youtube.com/watch?v=sVbEyFZKgqk&list=PLr3d3QYzkw2xabQRUpcZ_IBk9W50M9pe-)
",concept
30305,javascript,"Apart from being used in the browser, JavaScript is also used in backend e.g. using [Node.js](https://nodejs.org/) or [Deno](https://deno.land/) for writing server-side code in JavaScript.

If you pick up JavaScript for the Backend, my personal recommendation would be to learn [JavaScript](/javascript) and then go with [Node.js](/nodejs) as it is the most popular and widely used option. Also, I would recommend learning TypeScript later on as you continue with your backend development Journey; it's a superset of JavaScript and is used in many projects.

Visit the following resources to learn more:

- [Visit Dedicated JavaScript Roadmap](/javascript)
- [W3Schools – JavaScript Tutorial](https://www.w3schools.com/js/)
- [The Modern JavaScript Tutorial](https://javascript.info/)
- [Eloquent Javascript - Book](https://eloquentjavascript.net/)
- [You Dont Know JS Yet (book series) ](https://github.com/getify/You-Dont-Know-JS)
- [Codecademy - Learn JavaScript](https://www.codecademy.com/learn/introduction-to-javascript)
- [JavaScript Crash Course for Beginners](https://youtu.be/hdI2bqOjy3c)
- [Node.js Crash Course](https://www.youtube.com/watch?v=fBNz5xF-Kx4)
- [Node.js Tutorial for Beginners](https://www.youtube.com/watch?v=TlB_eWDSMt4)
",concept
30306,python,"Python is a well known programming language which is both a strongly typed and a dynamically typed language. Being an interpreted language, code is executed as soon as it is written and the Python syntax allows for writing code in functional, procedural or object-oriented programmatic ways.

Visit the following resources to learn more:

- [Visit Dedicated Python Roadmap](/python)
- [Python Website](https://www.python.org/)
- [Python Getting Started](https://www.python.org/about/gettingstarted/)
- [Automate the Boring Stuff](https://automatetheboringstuff.com/)
- [FreeCodeCamp.org - How to Learn Python ? ](https://www.freecodecamp.org/news/how-to-learn-python/)
- [Python principles - Python basics](https://pythonprinciples.com/)
- [W3Schools - Python Tutorial ](https://www.w3schools.com/python/)
- [Python Crash Course](https://ehmatthes.github.io/pcc/)
- [Codecademy - Learn Python 2](https://www.codecademy.com/learn/learn-python)
- [An Introduction to Python for Non-Programmers](https://thenewstack.io/an-introduction-to-python-for-non-programmers/)
- [Getting Started with Python and InfluxDB](https://thenewstack.io/getting-started-with-python-and-influxdb/)
- [Python for Beginners - Learn Python in 1 Hour](https://www.youtube.com/watch?v=kqtD5dpn9C8&ab_channel=ProgrammingwithMosh)
",concept
30307,ruby,"Ruby is a high-level, interpreted programming language that blends Perl, Smalltalk, Eiffel, Ada, and Lisp. Ruby focuses on simplicity and productivity along with a syntax that reads and writes naturally. Ruby supports procedural, object-oriented and functional programming and is dynamically typed.

Visit the following resources to learn more:

- [Ruby Website](https://www.ruby-lang.org/en/)
- [Learn Ruby in 20 minutes](https://www.ruby-lang.org/en/documentation/quickstart/)
- [Learn Ruby | Codecademy](https://www.codecademy.com/learn/learn-ruby)
- [Ruby, An Introduction to a Programmer’s Best Friend](https://thenewstack.io/ruby-a-programmers-best-friend/)
",concept
30308,cpp,"C++ is a powerful general-purpose programming language. It can be used to develop operating systems, browsers, games, and so on. C++ supports different ways of programming like procedural, object-oriented, functional, and so on. This makes C++ powerful as well as flexible.

Visit the following resources to learn more:

- [Learn Cpp](https://learncpp.com/)
- [C++ Reference](https://en.cppreference.com/)
",concept
304,version control systems,version control systems,topic
30400,basic usage of git,"[Git](https://git-scm.com/) is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Visit the following resources to learn more:

- [Git & GitHub Crash Course For Beginners](https://www.youtube.com/watch?v=SWYqp7iY_Tc)
- [Learn Git with Tutorials, News and Tips - Atlassian](https://www.atlassian.com/git)
- [Git Cheat Sheet](https://cs.fyi/guide/git-cheatsheet)
",concept
30401,git,"[Git](https://git-scm.com/) is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Visit the following resources to learn more:

- [Git & GitHub Crash Course For Beginners](https://www.youtube.com/watch?v=SWYqp7iY_Tc)
- [Learn Git with Tutorials, News and Tips - Atlassian](https://www.atlassian.com/git)
- [Git Cheat Sheet](https://cs.fyi/guide/git-cheatsheet)
- [Learn Git Branching](https://learngitbranching.js.org/)
- [Git Tutorial](https://www.w3schools.com/git/)",concept
305,repo hosting services,repo hosting services,topic
30500,github,"GitHub is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitHub Website](https://github.com)
- [GitHub Documentation](https://docs.github.com/en/get-started/quickstart)
- [How to Use Git in a Professional Dev Team](https://ooloo.io/project/github-flow)
- [What is GitHub?](https://www.youtube.com/watch?v=w3jLJU7DT5E)
- [Git vs. GitHub: Whats the difference?](https://www.youtube.com/watch?v=wpISo9TNjfU)
- [Git and GitHub for Beginners](https://www.youtube.com/watch?v=RGOj5yH7evk)
- [Git and GitHub - CS50 Beyond 2019](https://www.youtube.com/watch?v=eulnSXkhE7I)
- [Learn Git Branching](https://learngitbranching.js.org/?locale=en_us)",concept
30501,gitlab,"GitLab is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitLab Website](https://gitlab.com/)
- [GitLab Documentation](https://docs.gitlab.com/)
",concept
30502,bitbucket,"Bitbucket is a Git based hosting and source code repository service that is Atlassian's alternative to other products like GitHub, GitLab etc

Bitbucket offers hosting options via Bitbucket Cloud (Atlassian's servers), Bitbucket Server (customer's on-premise) or Bitbucket Data Centre (number of servers in customers on-premise or cloud environment)

Visit the following resources to learn more:

- [Bitbucket Website](https://bitbucket.org/product)
- [Getting started with Bitbucket](https://bitbucket.org/product/guides/basics/bitbucket-interface)
- [Using Git with Bitbucket Cloud](https://www.atlassian.com/git/tutorials/learn-git-with-bitbucket-cloud)
- [A brief overview of Bitbucket](https://bitbucket.org/product/guides/getting-started/overview#a-brief-overview-of-bitbucket)
- [Bitbucket tutorial | How to use Bitbucket Cloud](https://www.youtube.com/watch?v=M44nEyd_5To)
- [Bitbucket Tutorial | Bitbucket for Beginners](https://www.youtube.com/watch?v=i5T-DB8tb4A)
",concept
306,relational databases,relational databases,topic
30600,postgresql,"PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance.

Visit the following resources to learn more:

- [Visit Dedicated PostgreSQL DBA Roadmap](/postgresql-dba)
- [Official Website](https://www.postgresql.org/)
- [What is PostgreSQL](https://www.geeksforgeeks.org/what-is-postgresql-introduction/)
- [Learn PostgreSQL - Full Tutorial for Beginners](https://www.postgresqltutorial.com/)
- [Learn PostgreSQL Tutorial - Full Course for Beginners](https://www.youtube.com/watch?v=qw--VYLpxG4)
- [Postgres tutorial for Beginners](https://www.youtube.com/watch?v=eMIxuk0nOkU)
",concept
30601,mysql,"MySQL is an incredibly popular open source relational database management system (RDBMS). MySQL can be used as a stand-alone client or in conjunction with other services to provide database connectivity. The **M** in LAMP stack stands for MySQL; that alone should provide an idea of its prevalence.

Visit the following resources to learn more:

- [MySQL website](https://www.mysql.com/)
- [W3Schools - MySQL tutorial ](https://www.w3schools.com/mySQl/default.asp)
- [MySQL tutorial for beginners](https://www.youtube.com/watch?v=7S_tz1z_5bA)
- [MySQL for Developers](https://planetscale.com/courses/mysql-for-developers/introduction/course-introduction)
- [MySQL Tutorial](https://www.mysqltutorial.org/)",concept
30602,mariadb,"MariaDB server is a community developed fork of MySQL server. Started by core members of the original MySQL team, MariaDB actively works with outside developers to deliver the most featureful, stable, and sanely licensed open SQL server in the industry. MariaDB was created with the intention of being a more versatile, drop-in replacement version of MySQL

Visit the following resources to learn more:

- [MariaDB website](https://mariadb.org/)
- [MariaDB vs MySQL](https://www.guru99.com/mariadb-vs-mysql.html)
- [W3Schools - MariaDB tutorial ](https://www.w3schools.blog/mariadb-tutorial)
- [MariaDB Tutorial For Beginners in One Hour](https://www.youtube.com/watch?v=_AMj02sANpI)
",concept
30603,mssql,"MS SQL (or Microsoft SQL Server) is the Microsoft developed relational database management system (RDBMS). MS SQL uses the T-SQL (Transact-SQL) query language to interact with the relational databases. There are many different versions and editions available of MS SQL

Visit the following resources to learn more:

- [MS SQL website](https://www.microsoft.com/en-ca/sql-server/)
- [Tutorials for SQL Server](https://docs.microsoft.com/en-us/sql/sql-server/tutorials-for-sql-server-2016?view=sql-server-ver15)
- [SQL Server tutorial for beginners](https://www.youtube.com/watch?v=-EPMOaV7h_Q)
",concept
30604,oracle,"Oracle Database Server or sometimes called Oracle RDBMS or even simply Oracle is a world leading relational database management system produced by Oracle Corporation.

Visit the following resources to learn more:

- [Official Website](https://www.oracle.com/database/)
- [Official Docs](https://docs.oracle.com/en/database/index.html)
- [Oracle SQL Tutorial for Beginners](https://www.youtube.com/watch?v=ObbNGhcxXJA)
",concept
307,nosql databases,nosql databases,topic
30700,document databases,"## MongoDB

MongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License (SSPL).

Visit the following resources to learn more:

- [Visit Dedicated MongoDB Roadmap](/mongodb)
- [MongoDB Website](https://www.mongodb.com/)
- [MongoDB Documentation](https://docs.mongodb.com/)
- [MongoDB Online Sandbox](https://mongoplayground.net/)
- [Learning Path for MongoDB Developers](https://learn.mongodb.com/catalog)
- [Dynamo DB Docs](https://docs.aws.amazon.com/dynamodb/index.html)
- [Official Developers Guide](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html)
",concept
30701,column databases,"A **<u>wide-column database</u>** (sometimes referred to as a column database) is similar to a relational database. It store data in tables, rows and columns. However in opposite to relational databases here each row can have its own format of the columns. Column databases can be seen as a two-dimensional key-value database. One of such database system is **Apache Cassandra**.

**Warning:** <a href=""https://en.wikipedia.org/wiki/Wide-column_store#Wide-column_stores_versus_columnar_databases"">note that a ""columnar database"" and a ""column database"" are two different terms!</a>

Visit the following resources to learn more:

- [Apache Cassandra](https://cassandra.apache.org/_/index.html)
- [Apache Cassandra Database - Full Course for Beginners](https://www.youtube.com/watch?v=J-cSy5MeMOA)
",concept
30702,timeseries databases,"## InfluxDB

InfluxDB was built from the ground up to be a purpose-built time series database; i.e., it was not repurposed to be time series. Time was built-in from the beginning. InfluxDB is part of a comprehensive platform that supports the collection, storage, monitoring, visualization and alerting of time series data. It’s much more than just a time series database.

Visit the following resources to learn more:

- [InfluxDB Website](https://www.influxdata.com/)
- [Time series database](https://www.influxdata.com/time-series-database/)
",concept
30703,realtime databases,"A real-time database is broadly defined as a data store designed to collect, process, and/or enrich an incoming series of data points (i.e., a data stream) in real time, typically immediately after the data is created.
",concept
30704,key value databases,"A key-value database (KV database) is a type of database that stores data as a collection of key-value pairs. In a KV database, each piece of data is identified by a unique key, and the value is the data associated with that key.

KV databases are designed for fast and efficient storage and retrieval of data, and they are often used in applications that require high performance and low latency. They are particularly well-suited for storing large amounts of unstructured data, such as log data and user profiles.

Some popular KV databases include Redis, Memcached, and LevelDB. These databases are often used in combination with other types of databases, such as relational databases or document databases, to provide a complete and scalable data storage solution.

Visit the following resources to learn more:

- [Key-Value Databases - Wikipedia](https://en.wikipedia.org/wiki/Key-value_database)
",concept
308,more about databases,more about databases,topic
30800,orms,"Object-Relational Mapping (ORM) is a technique that lets you query and manipulate data from a database using an object-oriented paradigm. When talking about ORM, most people are referring to a library that implements the Object-Relational Mapping technique, hence the phrase ""an ORM"".

Visit the following resources to learn more:

- [Object Relational Mapping - Wikipedia](https://en.wikipedia.org/wiki/Object–relational_mapping)
- [What is an ORM and how should I use it?](https://stackoverflow.com/questions/1279613/what-is-an-orm-how-does-it-work-and-how-should-i-use-one)
- [What is an ORM, how does it work, and how should I use one?](https://stackoverflow.com/a/1279678)",concept
30801,acid,"ACID are the four properties of relational database systems that help in making sure that we are able to perform the transactions in a reliable manner. It's an acronym which refers to the presence of four properties: atomicity, consistency, isolation and durability

Visit the following resources to learn more:

- [What is ACID Compliant Database?](https://retool.com/blog/whats-an-acid-compliant-database/)
- [What is ACID Compliance?: Atomicity, Consistency, Isolation](https://fauna.com/blog/what-is-acid-compliance-atomicity-consistency-isolation)
- [ACID Explained: Atomic, Consistent, Isolated & Durable](https://www.youtube.com/watch?v=yaQ5YMWkxq4)
",concept
30802,transactions,"In short, a database transaction is a sequence of multiple operations performed on a database, and all served as a single logical unit of work — taking place wholly or not at all. In other words, there's never a case where only half of the operations are performed and the results saved.

Visit the following resources to learn more:

- [What are Transactions?](https://fauna.com/blog/database-transaction)
",concept
30803,n plus one problem,"The N+1 query problem happens when your code executes N additional query statements to fetch the same data that could have been retrieved when executing the primary query.

Visit the following resources to learn more:

- [In Detail Explanation of N+1 Problem](https://medium.com/doctolib/understanding-and-fixing-n-1-query-30623109fe89)
",concept
30804,database normalization,"Database normalization is the process of structuring a relational database in accordance with a series of so-called normal forms in order to reduce data redundancy and improve data integrity. It was first proposed by Edgar F. Codd as part of his relational model.

Normalization entails organizing the columns (attributes) and tables (relations) of a database to ensure that their dependencies are properly enforced by database integrity constraints. It is accomplished by applying some formal rules either by a process of synthesis (creating a new database design) or decomposition (improving an existing database design).

Visit the following resources to learn more:

- [What is Normalization in DBMS (SQL)? 1NF, 2NF, 3NF, BCNF Database with Example](https://www.guru99.com/database-normalization.html)
- [Database normalization](https://en.wikipedia.org/wiki/Database_normalization)
- [Basic Concept of Database Normalization](https://www.youtube.com/watch?v=xoTyrdT9SZI)
",concept
30805,failure modes,"There are several different failure modes that can occur in a database, including:

- Read contention: This occurs when multiple clients or processes are trying to read data from the same location in the database at the same time, which can lead to delays or errors.
- Write contention: This occurs when multiple clients or processes are trying to write data to the same location in the database at the same time, which can lead to delays or errors.
- Thundering herd: This occurs when a large number of clients or processes try to access the same resource simultaneously, which can lead to resource exhaustion and reduced performance.
- Cascade: This occurs when a failure in one part of the database system causes a chain reaction that leads to failures in other parts of the system.
- Deadlock: This occurs when two or more transactions are waiting for each other to release a lock on a resource, leading to a standstill.
- Corruption: This occurs when data in the database becomes corrupted, which can lead to errors or unexpected results when reading or writing to the database.
- Hardware failure: This occurs when hardware components, such as disk drives or memory, fail, which can lead to data loss or corruption.
- Software failure: This occurs when software components, such as the database management system or application, fail, which can lead to errors or unexpected results.
- Network failure: This occurs when the network connection between the database and the client is lost, which can lead to errors or timeouts when trying to access the database.
- Denial of service (DoS) attack: This occurs when a malicious actor attempts to overwhelm the database with requests, leading to resource exhaustion and reduced performance.
",concept
30806,profiling performance,"There are several ways to profile the performance of a database:

- Monitor system performance: You can use tools like the Windows Task Manager or the Unix/Linux top command to monitor the performance of your database server. These tools allow you to see the overall CPU, memory, and disk usage of the system, which can help identify any resource bottlenecks.
- Use database-specific tools: Most database management systems (DBMSs) have their own tools for monitoring performance. For example, Microsoft SQL Server has the SQL Server Management Studio (SSMS) and the sys.dm_os_wait_stats dynamic management view, while Oracle has the Oracle Enterprise Manager and the v$waitstat view. These tools allow you to see specific performance metrics, such as the amount of time spent waiting on locks or the number of physical reads and writes.
- Use third-party tools: There are also several third-party tools that can help you profile the performance of a database. Some examples include SolarWinds Database Performance Analyzer, Quest Software Foglight, and Redgate SQL Monitor. These tools often provide more in-depth performance analysis and can help you identify specific issues or bottlenecks.
- Analyze slow queries: If you have specific queries that are running slowly, you can use tools like EXPLAIN PLAN or SHOW PLAN in MySQL or SQL Server to see the execution plan for the query and identify any potential issues. You can also use tools like the MySQL slow query log or the SQL Server Profiler to capture slow queries and analyze them further.
- Monitor application performance: If you are experiencing performance issues with a specific application that is using the database, you can use tools like Application Insights or New Relic to monitor the performance of the application and identify any issues that may be related to the database.

Have a look at the documentation for the database that you are using.
",concept
309,apis,apis,topic
30900,rest,"REST, or REpresentational State Transfer, is an architectural style for providing standards between computer systems on the web, making it easier for systems to communicate with each other.

Visit the following resources to learn more:

- [What is REST?](https://www.codecademy.com/article/what-is-rest)
- [REST Fundamental](https://dev.to/cassiocappellari/fundamentals-of-rest-api-2nag)
- [What is a REST API?](https://www.redhat.com/en/topics/api/what-is-a-rest-api)
- [Roy Fieldings dissertation chapter, Representational State Transfer (REST)](https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm)
- [Learn REST: A RESTful Tutorial](https://restapitutorial.com/)
",concept
30901,json apis,"JSON or JavaScript Object Notation is an encoding scheme that is designed to eliminate the need for an ad-hoc code for each application to communicate with servers that communicate in a defined way. JSON API module exposes an implementation for data stores and data structures, such as entity types, bundles, and fields.

Visit the following resources to learn more:

- [Official Website](https://jsonapi.org/)
- [Official Docs](https://jsonapi.org/implementations/)
- [JSON API: Explained in 4 minutes ](https://www.youtube.com/watch?v=N-4prIh7t38)
",concept
30902,soap,"Simple Object Access Protocol (SOAP) is a message protocol for exchanging information between systems and applications. When it comes to application programming interfaces (APIs), a SOAP API is developed in a more structured and formalized way. SOAP messages can be carried over a variety of lower-level protocols, including the web-related Hypertext Transfer Protocol (HTTP).

Visit the following resources to learn more:

- [w3school SOAP explanation](https://www.w3schools.com/xml/xml_soap.asp)
",concept
30903,grpc,"gRPC is a high-performance, open source universal RPC framework

RPC stands for Remote Procedure Call, there's an ongoing debate on what the g stands for. RPC is a protocol that allows a program to execute a procedure of another program located on another computer. The great advantage is that the developer doesn’t need to code the details of the remote interaction. The remote procedure is called like any other function. But the client and the server can be coded in different languages.

Visit the following resources to learn more:

- [gRPC Website](https://grpc.io/)
- [gRPC Docs](https://grpc.io/docs/)
- [What Is GRPC?](https://www.wallarm.com/what/the-concept-of-grpc)
- [What Is GRPC?](https://www.youtube.com/watch?v=hVrwuMnCtok)
",concept
30904,hateoas,"HATEOAS is an acronym for <b>H</b>ypermedia <b>A</b>s <b>T</b>he <b>E</b>ngine <b>O</b>f <b>A</b>pplication <b>S</b>tate, it's the concept that when sending information over a RESTful API the document received should contain everything the client needs in order to parse and use the data i.e they don't have to contact any other endpoint not explicitly mentioned within the Document

Visit the following resources to learn more:

- [Oktane17: Designing Beautiful REST + JSON APIs (3:56 - 5:57)](https://youtu.be/MiOSzpfP1Ww?t=236)
",concept
30905,open api spec,"The OpenAPI Specification (OAS) defines a standard, language-agnostic interface to RESTful APIs which allows both humans and computers to discover and understand the capabilities of the service without access to source code, documentation, or through network traffic inspection. When properly defined, a consumer can understand and interact with the remote service with a minimal amount of implementation logic.

An OpenAPI definition can then be used by documentation generation tools to display the API, code generation tools to generate servers and clients in various programming languages, testing tools, and many other use cases.

Visit the following resources to learn more:

- [OpenAPI Specification Website](https://swagger.io/specification/)
- [Open API Live Editor](https://swagger.io/tools/swagger-editor/)
- [Official training guide](https://swagger.io/docs/specification/about/)
- [OpenAPI 3.0: How to Design and Document APIs with the Latest OpenAPI Specification 3.0](https://www.youtube.com/watch?v=6kwmW_p_Tig)
",concept
30906,graphql,"GraphQL is a query language and runtime system for APIs (application programming interfaces). It is designed to provide a flexible and efficient way for clients to request data from servers, and it is often used as an alternative to REST (representational state transfer) APIs.

One of the main features of GraphQL is its ability to specify exactly the data that is needed, rather than receiving a fixed set of data from an endpoint. This allows clients to request only the data that they need, and it reduces the amount of data that needs to be transferred over the network.

GraphQL also provides a way to define the structure of the data that is returned from the server, allowing clients to request data in a predictable and flexible way. This makes it easier to build and maintain client applications that depend on data from the server.

GraphQL is widely used in modern web and mobile applications, and it is supported by a large and active developer community.

Visit the following resources to learn more:

- [GraphQL Official Website](https://graphql.org/)
",concept
30907,authentication,authentication,topic
3090700,cookie based,"Cookies are pieces of data used to identify the user and their preferences. The browser returns the cookie to the server every time the page is requested. Specific cookies like HTTP cookies are used to perform cookie-based authentication to maintain the session for each user.

Visit the following resources to learn more:

- [How does cookie based authentication work?](https://stackoverflow.com/questions/17769011/how-does-cookie-based-authentication-work)
",concept
3090701,oauth,"OAuth stands for **O**pen **Auth**orization and is an open standard for authorization. It works to authorize devices, APIs, servers and applications using access tokens rather than user credentials, known as ""secure delegated access"".

In its most simplest form, OAuth delegates authentication to services like Facebook, Amazon, Twitter and authorizes third-party applications to access the user account **without** having to enter their login and password.

It is mostly utilized for REST/APIs and only provides a limited scope of a user's data.

Visit the following resources to learn more:

- [Okta - What the Heck is OAuth](https://developer.okta.com/blog/2017/06/21/what-the-heck-is-oauth)
- [DigitalOcean - An Introduction to OAuth 2](https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2)
- [What is OAuth really all about](https://www.youtube.com/watch?v=t4-416mg6iU)
- [OAuth 2.0: An Overview](https://www.youtube.com/watch?v=CPbvxxslDTU)
",concept
3090702,basic authentication,"Given the name ""Basic Authentication"", you should not confuse Basic Authentication with the standard username and password authentication. Basic authentication is a part of the HTTP specification, and the details can be [found in the RFC7617](https://www.rfc-editor.org/rfc/rfc7617.html).

Because it is a part of the HTTP specifications, all the browsers have native support for ""HTTP Basic Authentication"".

Visit the following resources to learn more:

- [HTTP Basic Authentication](https://roadmap.sh/guides/http-basic-authentication)
- [Illustrated HTTP Basic Authentication](https://www.youtube.com/watch?v=mwccHwUn7Gc)
",concept
3090703,token authentication,"Token-based authentication is a protocol which allows users to verify their identity, and in return receive a unique access token. During the life of the token, users then access the website or app that the token has been issued for, rather than having to re-enter credentials each time they go back to the same webpage, app, or any resource protected with that same token.

Auth tokens work like a stamped ticket. The user retains access as long as the token remains valid. Once the user logs out or quits an app, the token is invalidated.

Token-based authentication is different from traditional password-based or server-based authentication techniques. Tokens offer a second layer of security, and administrators have detailed control over each action and transaction.

But using tokens requires a bit of coding know-how. Most developers pick up the techniques quickly, but there is a learning curve.

Visit the following resources to learn more:

- [What Is Token-Based Authentication?](https://www.okta.com/identity-101/what-is-token-based-authentication/)
",concept
3090704,jwt,"JWT stands for JSON Web Token is a token-based encryption open standard/methodology that is used to transfer information securely as a JSON object. Clients and Servers use JWT to securely share information, with the JWT containing encoded JSON objects and claims. JWT tokens are designed to be compact, safe to use within URLs, and ideal for SSO contexts.

Visit the following resources to learn more:

- [jwt.io Website](https://jwt.io/)
- [Introduction to JSON Web Tokens](https://jwt.io/introduction)
- [What is JWT?](https://www.akana.com/blog/what-is-jwt)
- [What Is JWT and Why Should You Use JWT](https://www.youtube.com/watch?v=7Q17ubqLfaM)
- [What is JWT? JSON Web Token Explained](https://www.youtube.com/watch?v=926mknSW9Lo)
",concept
3090705,openid,"OpenID is a protocol that utilizes the authorization and authentication mechanisms of OAuth 2.0 and is now widely adopted by many identity providers on the Internet.
It solves the problem of needing to share user's personal info between many different web services(e.g. online shops, discussion forums etc.)

Visit the following resources to learn more:

- [Official Website](https://openid.net/)
- [What is OpenID](https://openid.net/connect/)
- [OAuth vs OpenID](https://securew2.com/blog/oauth-vs-openid-which-is-better)
- [An Illustrated Guide to OAuth and OpenID Connect](https://www.youtube.com/watch?v=t18YB3xDfXI)
- [OAuth 2.0 and OpenID Connect (in plain English)](https://www.youtube.com/watch?v=996OiexHze0)",concept
3090706,saml,"**SAML** stands for Security Assertion Markup Language. It is an XML-based standard for exchanging authentication and authorization data between parties, particularly between an identity provider (IdP) and a service provider (SP). In a SAML-based system, a user requests access to a protected resource. The service provider asks the identity provider to authenticate the user and assert whether they are granted access to the resource.

### Benefits of SAML

Some advantages of using SAML include:

- Single Sign-On (SSO): Users can log in once at the IdP and access multiple service providers without needing to authenticate again.
- Improved security: Passwords and user credentials are not required to be stored and managed by the service provider, reducing the potential vectors for attack.
- Increased efficiency: As users no longer need to maintain multiple sets of credentials, managing access becomes easier for both the user and the system administrators.
- Interoperability: SAML enables a wide range of applications to work together, regardless of the underlying technology or platform.

### SAML Components

Three main components are involved in the SAML architecture:

1. **Identity Provider (IdP)**: The entity that manages users' identities and authenticates them by providing security tokens, also called assertions.
2. **Service Provider (SP)**: The entity that provides a service (such as a web application or API) and relies on the identity provider to authenticate users and grant/deny access to the resources.
3. **User/Principal**: The end user seeking access to the service provided by the service provider.

### SAML Workflow

The SAML authentication process consists of the following steps:

1. The user requests access to a protected resource from the service provider.
2. If the user is not already authenticated, the service provider generates and sends a SAML authentication request to the identity provider.
3. The identity provider authenticates the user (using, e.g., a username and password, multi-factor authentication, or another method).
4. The identity provider constructs a SAML response, which includes details about the user and asserts whether the user is authorized to access the requested resource.
5. The SAML response is sent back to the service provider, typically via the user's web browser or API client.
6. The service provider processes the SAML response, extracts the necessary information, and grants or denies access to the user based on the identity provider's assertion.

With SAML, you can streamline user authentication and authorization across various applications and systems, providing a better user experience and improving your overall backend security.
",concept
310,scaling databases,scaling databases,topic
31000,database indexes,"An index is a data structure that you build and assign on top of an existing table that basically looks through your table and tries to analyze and summarize so that it can create shortcuts.

Visit the following resources to learn more:

- [An in-depth look at Database Indexing](https://www.freecodecamp.org/news/database-indexing-at-a-glance-bb50809d48bd/)
- [Database Indexing Explained](https://www.youtube.com/watch?v=-qNSXK7s7_w)
",concept
31001,data replication,"Data replication is the process by which data residing on a physical/virtual server(s) or cloud instance (primary instance) is continuously replicated or copied to a secondary server(s) or cloud instance (standby instance). Organizations replicate data to support high availability, backup, and/or disaster recovery.

Visit the following resources to learn more:

- [What is Data Replication?](https://youtu.be/fUrKt-AQYtE)
",concept
31002,sharding strategies,"Sharding strategy is a technique to split a large dataset into smaller chunks (logical shard) in which we distribute these chunks in different machines/database nodes in order to distribute the traffic load. It’s a good mechanism to improve the scalability of an application. Many databases support sharding, but not all.

Visit the following resources to learn more:

- [Database Sharding – System Design Interview Concept](https://www.geeksforgeeks.org/database-sharding-a-system-design-concept/)
- [Wikipedia - Sharding in Database Architectures](<https://en.wikipedia.org/wiki/Shard_(database_architecture)>)
- [How sharding a database can make it faster](https://stackoverflow.blog/2022/03/14/how-sharding-a-database-can-make-it-faster/)
",concept
31003,cap theorem,"CAP is an acronym that stands for Consistency, Availability and Partition Tolerance. According to CAP theorem, any distributed system can only guarantee two of the three properties at any point of time. You can't guarantee all three properties at once.

Visit the following resources to learn more:

- [What is CAP Theorem?](https://www.bmc.com/blogs/cap-theorem/)
- [CAP Theorem - Wikipedia](https://en.wikipedia.org/wiki/CAP_theorem)
- [An Illustrated Proof of the CAP Theorem](https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/)
- [CAP Theorem and its applications in NoSQL Databases](https://www.ibm.com/uk-en/cloud/learn/cap-theorem)
- [What is CAP Theorem?](https://www.youtube.com/watch?v=_RbsFXWRZ10)
",concept
311,caching,caching,topic
31100,cdn,"A Content Delivery Network (CDN) service aims to provide high availability and performance improvements of websites. This is achieved with fast delivery of website assets and content typically via geographically closer endpoints to the client requests.
Traditional commercial CDNs (Amazon CloudFront, Akamai, CloudFlare and Fastly) provide servers across the globe which can be used for this purpose.
Serving assets and contents via a CDN reduces bandwidth on website hosting, provides an extra layer of caching to reduce potential outages and can improve website security as well

Visit the following resources to learn more:

- [CloudFlare - What is a CDN? | How do CDNs work?](https://www.cloudflare.com/en-ca/learning/cdn/what-is-a-cdn/)
- [Wikipedia - Content Delivery Network](https://en.wikipedia.org/wiki/Content_delivery_network)
- [What is Cloud CDN?](https://www.youtube.com/watch?v=841kyd_mfH0)
- [What is a Content Delivery Network (CDN)?](https://www.youtube.com/watch?v=Bsq5cKkS33I)
",concept
31101,server side,server side,topic
3110100,redis,"Redis is an open source (BSD licensed), in-memory **data structure store** used as a database, cache, message broker, and streaming engine. Redis provides data structures such as [strings](https://redis.io/topics/data-types-intro#strings), [hashes](https://redis.io/topics/data-types-intro#hashes), [lists](https://redis.io/topics/data-types-intro#lists), [sets](https://redis.io/topics/data-types-intro#sets), [sorted sets](https://redis.io/topics/data-types-intro#sorted-sets) with range queries, [bitmaps](https://redis.io/topics/data-types-intro#bitmaps), [hyperloglogs](https://redis.io/topics/data-types-intro#hyperloglogs), [geospatial indexes](https://redis.io/commands/geoadd), and [streams](https://redis.io/topics/streams-intro). Redis has built-in [replication](https://redis.io/topics/replication), [Lua scripting](https://redis.io/commands/eval), [LRU eviction](https://redis.io/topics/lru-cache), [transactions](https://redis.io/topics/transactions), and different levels of [on-disk persistence](https://redis.io/topics/persistence), and provides high availability via [Redis Sentinel](https://redis.io/topics/sentinel) and automatic partitioning with [Redis Cluster](https://redis.io/topics/cluster-tutorial).

Visit the following resources to learn more:

- [Redis Website](https://redis.io/)
- [Redis in 100 Seconds](https://www.youtube.com/watch?v=G1rOthIU-uo)
",concept
3110101,memcached,"Memcached (pronounced variously mem-cash-dee or mem-cashed) is a general-purpose distributed memory-caching system. It is often used to speed up dynamic database-driven websites by caching data and objects in RAM to reduce the number of times an external data source (such as a database or API) must be read. Memcached is free and open-source software, licensed under the Revised BSD license. Memcached runs on Unix-like operating systems (Linux and macOS) and on Microsoft Windows. It depends on the `libevent` library.

Memcached's APIs provide a very large hash table distributed across multiple machines. When the table is full, subsequent inserts cause older data to be purged in the least recently used (LRU) order. Applications using Memcached typically layer requests and additions into RAM before falling back on a slower backing store, such as a database.

Memcached has no internal mechanism to track misses which may happen. However, some third-party utilities provide this functionality.

Visit the following resources to learn more:

- [Memcached, From Wikipedia](https://en.wikipedia.org/wiki/Memcached)
- [Memcached, From Official Github](https://github.com/memcached/memcached#readme)
- [Memcached Tutorial](https://www.tutorialspoint.com/memcached/index.htm)
",concept
31102,client side,"Client-side caching is the storage of network data to a local cache for future re-use. After an application fetches network data, it stores that resource in a local cache. Once a resource has been cached, the browser uses the cache on future requests for that resource to boost performance.

Visit the following resources to learn more:

- [Everything you need to know about HTTP Caching](https://www.youtube.com/watch?v=HiBDZgTNpXY)
",concept
312,web security knowledge,web security knowledge,topic
31200,md5,"MD5 (Message-Digest Algorithm 5) is a hash function that is currently advised not to be used due to its extensive vulnerabilities. It is still used as a checksum to verify data integrity.

Visit the following resources to learn more:

- [Wikipedia - MD5](https://en.wikipedia.org/wiki/MD5)
- [What is MD5?](https://www.techtarget.com/searchsecurity/definition/MD5)
- [Why is MD5 not safe?](https://infosecscout.com/why-md5-is-not-safe/)
",concept
31201,sha family,"SHA (Secure Hash Algorithms) is a family of cryptographic hash functions created by the NIST (National Institute of Standards and Technology). The family includes:

- SHA-0: Published in 1993, this is the first algorithm in the family. Shortly after its release, it was discontinued for an undisclosed significant flaw.
- SHA-1: Created to replace SHA-0 and which resembles MD5, this algorithm has been considered insecure since 2010.
- SHA-2: This isn't an algorithm, but a set of them, with SHA-256 and SHA-512 being the most popular. SHA-2 is still secure and widely used.
- SHA-3: Born in a competition, this is the newest member of the family. SHA-3 is very secure and doesn't carry the same design flaws as its brethren.

Visit the following resources to learn more:

- [Wikipedia - SHA-1](https://en.wikipedia.org/wiki/SHA-1)
- [Wikipedia - SHA-2](https://en.wikipedia.org/wiki/SHA-2)
- [Wikipedia - SHA-3](https://en.wikipedia.org/wiki/SHA-3)
",concept
31202,bcrypt,"bcrypt is a password hashing function, that has been proven reliable and secure since it's release in 1999. It has been implemented into most commonly-used programming languages.

Visit the following resources to learn more:

- [bcrypts npm package](https://www.npmjs.com/package/bcrypt)
- [Understanding bcrypt](https://auth0.com/blog/hashing-in-action-understanding-bcrypt/)
- [bcrypt explained](https://www.youtube.com/watch?v=O6cmuiTBZVs)
",concept
31204,scrypt,"Scrypt (pronounced ""ess crypt"") is a password hashing function (like bcrypt). It is designed to use a lot of hardware, which makes brute-force attacks more difficult. Scrypt is mainly used as a proof-of-work algorithm for cryptocurrencies.

Visit the following resources to learn more:

- [Wikipedia - Scrypt](https://en.wikipedia.org/wiki/Scrypt)
",concept
31205,content security policy,"Content Security Policy is a computer security standard introduced to prevent cross-site scripting, clickjacking and other code injection attacks resulting from execution of malicious content in the trusted web page context.

Visit the following resources to learn more:

- [MDN — Content Security Policy (CSP)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP)
- [Google Devs — Content Security Policy (CSP)](https://developers.google.com/web/fundamentals/security/csp)
",concept
31206,https,"HTTPS is a secure way to send data between a web server and a browser.

A communication through HTTPS starts with the handshake phase during which the server and the client agree on how to encrypt the communication, in particular they choose an encryption algorithm and a secret key. After the handshake all the communication between the server and the client will be encrypted using the agreed upon algorithm and key.

The handshake phase uses a particular kind of cryptography, called asymmetric cryptography, to communicate securely even though client and server have not yet agreed on a secret key. After the handshake phase the HTTPS communication is encrypted with symmetric cryptography, which is much more efficient but requires client and server to both have knowledge of the secret key.

Visit the following resources to learn more:

- [What is HTTPS?](https://www.cloudflare.com/en-gb/learning/ssl/what-is-https/)
- [Why HTTPS Matters](https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https)
- [Enabling HTTPS on Your Servers](https://developers.google.com/web/fundamentals/security/encrypt-in-transit/enable-https)
- [How HTTPS works (comic)](https://howhttps.works/)
- [SSL, TLS, HTTP, HTTPS Explained](https://www.youtube.com/watch?v=hExRDVZHhig)
- [HTTPS — Stories from the field](https://www.youtube.com/watch?v=GoXgl9r0Kjk)
- [HTTPS explained with carrier pigeons](https://baida.dev/articles/https-explained-with-carrier-pigeons)
",concept
31207,cors,"Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any origins (domain, scheme, or port) other than its own from which a browser should permit loading resources.

Visit the following resources to learn more:

- [Cross-Origin Resource Sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
- [CORS in 100 Seconds](https://www.youtube.com/watch?v=4KHiSt0oLJ0)
- [CORS in 6 minutes](https://www.youtube.com/watch?v=PNtFSVU-YTI)
- [Understanding CORS](https://rbika.com/blog/understanding-cors)
",concept
31208,owasp,"OWASP or Open Web Application Security Project is an online community that produces freely-available articles, methodologies, documentation, tools, and technologies in the field of web application security.

Visit the following resources to learn more:

- [Wikipedia - OWASP](https://en.wikipedia.org/wiki/OWASP)
- [OWASP Application Security Verification Standard](https://github.com/OWASP/ASVS)
- [OWASP Top 10 Security Risks](https://cheatsheetseries.owasp.org/IndexTopTen.html)
- [OWASP Cheatsheets](https://cheatsheetseries.owasp.org/cheatsheets/AJAX_Security_Cheat_Sheet.html)
",concept
31209,server security,"Learn about the security of your server and how to secure it. Here are some of the topics off the top of my head:

- Use a firewall: One of the most effective ways to secure a server is to use a firewall to block all unnecessary incoming traffic. You can use iptables on Linux systems or a hardware firewall to do this.
- Close unnecessary ports: Make sure to close any ports that are not needed for your server to function properly. This will reduce the attack surface of your server and make it more difficult for attackers to gain access.
- Use strong passwords: Use long, complex passwords for all of your accounts, and consider using a password manager to store them securely.
- Keep your system up to date: Make sure to keep your operating system and software up to date with the latest security patches. This will help to prevent vulnerabilities from being exploited by attackers.
- Use SSL/TLS for communication: Use Secure Sockets Layer (SSL) or Transport Layer Security (TLS) to encrypt communication between your server and client devices. This will help to protect against man-in-the-middle attacks and other types of cyber threats.
- Use a intrusion detection system (IDS): An IDS monitors network traffic and alerts you to any suspicious activity, which can help you to identify and respond to potential threats in a timely manner.
- Enable two-factor authentication: Two-factor authentication adds an extra layer of security to your accounts by requiring a second form of authentication, such as a code sent to your phone, in addition to your password.

Also learn about OpenSSL and creating your own PKI as well as managing certs, renewals, and mutual client auth with x509 certs
",concept
31210,ssl tls,"Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are cryptographic protocols used to provide security in internet communications. These protocols encrypt the data that is transmitted over the web, so anyone who tries to intercept packets will not be able to interpret the data. One difference that is important to know is that SSL is now deprecated due to security flaws, and most modern web browsers no longer support it. But TLS is still secure and widely supported, so preferably use TLS.

Visit the following resources to learn more:

- [Wikipedia - SSL/TLS](https://en.wikipedia.org/wiki/Transport_Layer_Security)
- [Cloudflare - What is SSL?](https://www.cloudflare.com/learning/ssl/what-is-ssl/)
",concept
313,testing,testing,topic
31300,integration testing,"Integration testing is a broad category of tests where multiple software modules are **integrated** and tested as a group. It is meant to test the **interaction** between multiple services, resources, or modules. For example, an API's interaction with a backend service, or a service with a database.

Visit the following resources to learn more:

- [Integration Testing](https://www.guru99.com/integration-testing.html)
- [How to Integrate and Test Your Tech Stack](https://thenewstack.io/how-to-integrate-and-test-your-tech-stack/)
- [What is Integration Testing?](https://youtu.be/QYCaaNz8emY)
",concept
31301,unit testing,"Unit testing is where individual **units** (modules, functions/methods, routines, etc.) of software are tested to ensure their correctness. This low-level testing ensures smaller components are functionally sound while taking the burden off of higher-level tests. Generally, a developer writes these tests during the development process and they are run as automated tests.

Visit the following resources to learn more:

- [Unit Testing Tutorial](https://www.guru99.com/unit-testing-guide.html)
- [What is Unit Testing?](https://youtu.be/3kzHmaeozDI)
",concept
31302,functional testing,"Functional testing is where software is tested to ensure functional requirements are met. Usually, it is a form of black box testing in which the tester has no understanding of the source code; testing is performed by providing input and comparing expected/actual output.
It contrasts with non-functional testing, which includes performance, load, scalability, and penetration testing.

Visit the following resources to learn more:

- [What is Functional Testing?](https://www.guru99.com/functional-testing.html)
- [Functional Testing vs Non-Functional Testing](https://youtu.be/j_79AXkG4PY)
",concept
314,design and development principles,design and development principles,topic
31400,gof design patterns,"Design patterns are typical solutions to commonly occurring problems in software design. They can be broken into three categories:

- Creational Patterns for the creation of objects
- Structural Patterns to provide relationship between objects
- Behavioral Patterns to help define how objects interact

Visit the following resources to learn more:

- [Design Patterns for Humans](https://github.com/kamranahmedse/design-patterns-for-humans)
- [GOF design patterns](https://springframework.guru/gang-of-four-design-patterns/)
- [Design Patterns](https://refactoring.guru/design-patterns)
",concept
31401,domain driven design,"Domain-driven design (DDD) is a software design approach focusing on modeling software to match a domain according to input from that domain's experts.

In terms of object-oriented programming, it means that the structure and language of software code (class names, class methods, class variables) should match the business domain. For example, if a software processes loan applications, it might have classes like LoanApplication and Customer, and methods such as AcceptOffer and Withdraw.

DDD connects the implementation to an evolving model and it is predicated on the following goals:

- Placing the project's primary focus on the core domain and domain logic;
- Basing complex designs on a model of the domain;
- Initiating a creative collaboration between technical and domain experts to iteratively refine a conceptual model that addresses particular domain problems.

Visit the following resources to learn more:

- [Domain Driven Design Quickly](https://matfrs2.github.io/RS2/predavanja/literatura/Avram%20A,%20Marinescu%20F.%20-%20Domain%20Driven%20Design%20Quickly.pdf)
",concept
31402,test driven development,"Test driven development (TDD) is the process of writing tests for software's requirements which will fail until the software is developed to meet those requirements. Once those tests pass, then the cycle repeats to refactor code or develop another feature/requirement. In theory, this ensures that software is written to meet requirements in the simplest form, and avoids code defects.

Visit the following resources to learn more:

- [What is Test Driven Development (TDD)?](https://www.guru99.com/test-driven-development.html)
- [Test-driven development](https://www.ibm.com/garage/method/practices/code/practice_test_driven_development/)
- [Agile in Practice: Test Driven Development](https://youtu.be/uGaNkTahrIw)
",concept
31403,cqrs,"CQRS, or command query responsibility segregation, defines an architectural pattern where the main focus is to separate the approach of reading and writing operations for a data store. CQRS can also be used along with Event Sourcing pattern in order to persist application state as an ordered of sequence events, making it possible to restore data to any point in time.

Visit the following resources to learn more:

- [CQRS Pattern](https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs)
",concept
31404,event sourcing,"Event sourcing is a design pattern in which the state of a system is represented as a sequence of events that have occurred over time. In an event-sourced system, changes to the state of the system are recorded as events and stored in an event store. The current state of the system is derived by replaying the events from the event store.

One of the main benefits of event sourcing is that it provides a clear and auditable history of all the changes that have occurred in the system. This can be useful for debugging and for tracking the evolution of the system over time.

Event sourcing is often used in conjunction with other patterns, such as Command Query Responsibility Segregation (CQRS) and domain-driven design, to build scalable and responsive systems with complex business logic. It is also useful for building systems that need to support undo/redo functionality or that need to integrate with external systems.

Visit the following resources to learn more:

- [Event Sourcing - Martin Fowler](https://martinfowler.com/eaaDev/EventSourcing.html)
",concept
315,ci cd,"CI/CD (Continuous Integration/Continuous Deployment) is the practice of automating building, testing, and deployment of applications with the main goal of detecting issues early, and provide quicker releases to the production environment.

Visit the following resources to learn more:

- [DevOps CI/CD Explained in 100 Seconds by Fireship](https://www.youtube.com/watch?v=scEDHsr3APg)
- [Automate your Workflows with GitHub Actions](https://www.youtube.com/watch?v=nyKZTKQS_EQ)
- [What is CI/CD?](https://about.gitlab.com/topics/ci-cd/)
- [A Primer: Continuous Integration and Continuous Delivery (CI/CD)](https://thenewstack.io/a-primer-continuous-integration-and-continuous-delivery-ci-cd/)
- [3 Ways to Use Automation in CI/CD Pipelines](https://thenewstack.io/3-ways-to-use-automation-in-ci-cd-pipelines/)
- [Articles about CI/CD](https://thenewstack.io/category/ci-cd/)
",concept
316,architectural patterns,architectural patterns,topic
31600,monolithic apps,"Monolithic architecture is a pattern in which an application handles requests, executes business logic, interacts with the database, and creates the HTML for the front end. In simpler terms, this one application does many things. It's inner components are highly coupled and deployed as one unit.

Visit the following resources to learn more:

- [Pattern: Monolithic Architecture](https://microservices.io/patterns/monolithic.html)
- [Monolithic Architecture - Advantages & Disadvantages](https://datamify.medium.com/monolithic-architecture-advantages-and-disadvantages-e71a603eec89)
",concept
31601,microservices,"Microservice architecture is a pattern in which highly cohesive, loosely coupled services are separately developed, maintained, and deployed. Each component handles an individual function, and when combined, the application handles an overall business function.

Visit the following resources to learn more:

- [Pattern: Microservice Architecture](https://microservices.io/patterns/microservices.html)
- [What is Microservices?](https://smartbear.com/solutions/microservices/)
- [Microservices 101](https://thenewstack.io/microservices-101/)
- [Primer: Microservices Explained](https://thenewstack.io/primer-microservices-explained/)
- [Articles about Microservices](https://thenewstack.io/category/microservices/)
",concept
31602,soa,"SOA, or service-oriented architecture, defines a way to make software components reusable via service interfaces. These interfaces utilize common communication standards in such a way that they can be rapidly incorporated into new applications without having to perform deep integration each time.

Visit the following resources to learn more:

- [Reference Architecture Foundation for Service Oriented Architecture](http://docs.oasis-open.org/soa-rm/soa-ra/v1.0/soa-ra.html)
",concept
31604,serverless,"Serverless is an architecture in which a developer builds and runs applications without provisioning or managing servers. With cloud computing/serverless, servers exist but are managed by the cloud provider. Resources are used as they are needed, on demand and often using auto scaling.

Visit the following resources to learn more:

- [Serverless](https://www.ibm.com/cloud/learn/serverless)
- [AWS Services](https://aws.amazon.com/serverless/)
- [Serverless Computing in 100 Seconds](https://www.youtube.com/watch?v=W_VV2Fx32_Y&ab_channel=Fireship)
",concept
31605,service mesh,"A service mesh is a network of microservices that are connected using a mesh of interconnected, intelligent proxies. It is used to manage and secure communication between microservices, and it provides features such as load balancing, service discovery, and observability.

In a service mesh, each microservice is typically represented by an instance of a lightweight, transparent proxy called an ""envoy."" The envoys handle the communication between microservices and provide features such as load balancing, routing, and security.

Service meshes are typically implemented using a sidecar pattern, in which the envoys are deployed alongside the microservices they are responsible for. This allows the service mesh to be decoupled from the microservices and makes it easier to manage and update.

Service meshes are commonly used in cloud-native architectures and are often managed using a control plane, which is responsible for configuring and managing the envoys. Some popular service mesh implementations include Istio and Linkerd.

Visit the following resources to learn more:

- [What is a Service Mesh?](https://www.nginx.com/blog/what-is-a-service-mesh/)
",concept
31606,twelve factor apps,"The Twelve-Factor App is a methodology for building scalable and maintainable software-as-a-service (SaaS) applications. It is based on a set of best practices that were identified by the authors of the methodology as being essential for building modern, cloud-native applications.

The Twelve-Factor App methodology consists of the following principles:

- Codebase: There should be a single codebase for the application, with multiple deployments.
- Dependencies: The application should explicitly declare and isolate its dependencies.
- Config: The application should store configuration in the environment.
- Backing services: The application should treat backing services as attached resources.
- Build, release, run: The application should be built, released, and run as an isolated unit.
- Processes: The application should be executed as one or more stateless processes.
- Port binding: The application should expose its services through port binding.
- Concurrency: The application should scale out by adding more processes, not by adding threads.
- Disposability: The application should be designed to start and stop quickly.
- Dev/prod parity: The development, staging, and production environments should be as similar as possible.
- Logs: The application should treat logs as event streams.
- Admin processes: The application should run admin/maintenance tasks as one-off processes.

The Twelve-Factor App methodology is widely adopted by developers of SaaS applications, and it is seen as a best practice for building cloud-native applications that are scalable, maintainable, and easy to deploy.

Visit the following resources to learn more:

- [The Twelve-Factor App](https://12factor.net/)
",concept
317,search engines,search engines,topic
31700,elasticsearch,"Elastic search at its core is a document-oriented search engine. It is a document based database that lets you INSERT, DELETE , RETRIEVE and even perform analytics on the saved records. But, Elastic Search is unlike any other general purpose database you have worked with, in the past. It's essentially a search engine and offers an arsenal of features you can use to retrieve the data stored in it, as per your search criteria. And that too, at lightning speeds.

Visit the following resources to learn more:

- [Elasticsearch Website](https://www.elastic.co/elasticsearch/)
- [Elasticsearch Documentation](https://www.elastic.co/guide/index.html)
",concept
31701,solr,"Solr is highly reliable, scalable and fault tolerant, providing distributed indexing, replication and load-balanced querying, automated failover and recovery, centralized configuration and more. Solr powers the search and navigation features of many of the world's largest internet sites.

Visit the following resources to learn more:

- [Official Website](https://solr.apache.org/)
- [Official Documentation](https://solr.apache.org/resources.html#documentation)
",concept
318,message brokers,message brokers,topic
31800,rabbitmq,"With tens of thousands of users, RabbitMQ is one of the most popular open-source message brokers. RabbitMQ is lightweight and easy to deploy on-premises and in the cloud. It supports multiple messaging protocols. RabbitMQ can be deployed in distributed and federated configurations to meet high-scale, high-availability requirements.

Visit the following resources to learn more:

- [RabbitMQ Tutorials](https://www.rabbitmq.com/getstarted.html)
- [RabbitMQ Tutorial - Message Queues and Distributed Systems](https://www.youtube.com/watch?v=nFxjaVmFj5E)
",concept
31801,kafka,"Apache Kafka is an open-source distributed event streaming platform used by thousands of companies for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.

Visit the following resources to learn more:

- [Apache Kafka quickstart](https://kafka.apache.org/quickstart)
- [Apache Kafka Fundamentals](https://www.youtube.com/watch?v=B5j3uNBH8X4)
",concept
319,containerization,containerization,topic
31900,docker,"Docker is a platform for working with containerized applications. Among its features are a daemon and client for managing and interacting with containers, registries for storing images, and a desktop application to package all these features together.

Visit the following resources to learn more:

- [Docker Documentation](https://docs.docker.com/)
- [What is Docker | AWS ](https://aws.amazon.com/docker/)
- [Complete Docker Course - From BEGINNER to PRO!](https://www.youtube.com/watch?v=RqTEHSBrYFw)
- [Docker Tutorial](https://youtu.be/3c-iBn73dDE)
- [Docker simplified in 55 seconds](https://youtu.be/vP_4DlOH1G4)
",concept
31902,lxc,"LXC is an abbreviation used for Linux Containers which is an operating system that is used for running multiple Linux systems virtually on a controlled host via a single Linux kernel. LXC is a userspace interface for the Linux kernel containment features. Through a powerful API and simple tools, it lets Linux users easily create and manage system or application containers.

Visit the following resources to learn more:

- [LXC Documentation](https://linuxcontainers.org/lxc/documentation/)
- [What is LXC?](https://linuxcontainers.org/lxc/introduction/)
- [Linux Container (LXC) Introduction](https://youtu.be/_KnmRdK69qM)
- [Getting started with LXC containers](https://youtu.be/CWmkSj_B-wo)
",concept
31903,kubernetes,"Kubernetes is an [open source](https://github.com/kubernetes/kubernetes) container management platform, and the dominant product in this space. Using Kubernetes, teams can deploy images across multiple underlying hosts, defining their desired availability, deployment logic, and scaling logic in YAML. Kubernetes evolved from Borg, an internal Google platform used to provision and allocate compute resources. (similar to the Autopilot and Aquaman systems of Microsoft Azure)

The popularity of Kubernetes has made it an increasingly important skill for the DevOps Engineer and has triggered the creation of Platform teams across the industry. These Platform engineering teams often exist with the sole purpose of making Kubernetes approachable and usable for their product development colleagues.

Visit the following resources to learn more:

- [Kubernetes Website](https://kubernetes.io/)
- [Kubernetes Documentation](https://kubernetes.io/docs/home/)
- [Kubernetes Crash Course for Absolute Beginners](https://www.youtube.com/watch?v=s_o8dwzRlu4)
- [Primer: How Kubernetes Came to Be, What It Is, and Why You Should Care](https://thenewstack.io/primer-how-kubernetes-came-to-be-what-it-is-and-why-you-should-care/)
- [Kubernetes: An Overview](https://thenewstack.io/kubernetes-an-overview/)
",concept
320,graphql,graphql,topic
32000,apollo,"Apollo is a platform for building a unified graph, a communication layer that helps you manage the flow of data between your application clients (such as web and native apps) and your back-end services.

Visit the following resources to learn more:

- [Apollo Website](https://www.apollographql.com)
- [Official Docs](https://www.apollographql.com/docs/)
- [Official YouTube Channel](https://www.youtube.com/c/ApolloGraphQL/)
- [GraphQL With React Tutorial - Apollo Client](https://www.youtube.com/watch?v=YyUWW04HwKY)
",concept
32001,relay modern,"Relay is a JavaScript client used in the browser to fetch GraphQL data. It's a JavaScript framework developed by Facebook for managing and fetching data in React applications. It is built with scalability in mind in order to power complex applications like Facebook. The ultimate goal of GraphQL and Relay is to deliver instant UI-response interactions.

Visit the following resources to learn more:

- [Official Website](https://relay.dev/)
- [Introduction to Relay modern](https://relay.dev/docs/)
",concept
321,graph databases,graph databases,topic
32100,neo4j,"Neo4j AuraDB is a fast, reliable, scalable, and completely automated Neo4j graph database, provided as a cloud service.

Visit the following resources to learn more:

- [Official Website](https://neo4j.com/)
- [Official Docs](https://neo4j.com/docs/)
- [Neo4j (Graph Database) Crash Course](https://www.youtube.com/watch?v=8jNPelugC2s)
",concept
322,web servers,web servers,topic
32200,nginx,"NGINX is a powerful web server and uses a non-threaded, event-driven architecture that enables it to outperform Apache if configured correctly. It can also do other important things, such as load balancing, HTTP caching, or be used as a reverse proxy.

Visit the following resources to learn more:

- [Official Website](https://nginx.org/)
- [NGINX Explained in 100 Seconds](https://www.youtube.com/watch?v=JKxlsvZXG7c)
",concept
32201,apache,"Apache is a free, open-source HTTP server, available on many operating systems, but mainly used on Linux distributions. It is one of the most popular options for web developers, as it accounts for over 30% of all the websites, as estimated by W3Techs.

Visit the following resources to learn more:

- [Apache Server Website](https://httpd.apache.org/)
- [What is Apache Web Server?](https://www.youtube.com/watch?v=kaaenHXO4t4)
",concept
32202,caddy,"The Caddy web server is an extensible, cross-platform, open-source web server written in Go. It has some really nice features like automatic SSL/HTTPs and a really easy configuration file.

Visit the following resources to learn more:

- [Official Website](https://caddyserver.com/)
- [Getting started with Caddy the HTTPS Web Server from scratch](https://www.youtube.com/watch?v=t4naLFSlBpQ)
",concept
32203,ms iis,"Internet Information Services (IIS) for Windows® Server is a flexible, secure and manageable Web server for hosting anything on the Web.

Visit the following resources to learn more:

- [Official Website](https://www.iis.net/)
- [Learn Windows Web Server IIS](https://www.youtube.com/watch?v=1VdxPWwtISA)
",concept
323,web sockets,"Web sockets are defined as a two-way communication between the servers and the clients, which mean both the parties, communicate and exchange data at the same time. This protocol defines a full duplex communication from the ground up. Web sockets take a step forward in bringing desktop rich functionalities to the web browsers.

Visit the following resources to learn more:

- [Introduction to WebSockets](https://www.tutorialspoint.com/websockets/index.htm)
- [A Beginners Guide to WebSockets](https://www.youtube.com/watch?v=8ARodQ4Wlf4)
- [Socket.io Library Bidirectional and low-latency communication for every platform](https://socket.io/)
",concept
324,server sent events,"Server-Sent Events (SSE) is a technology that allows a web server to push data to a client in real-time. It uses an HTTP connection to send a stream of data from the server to the client, and the client can listen for these events and take action when they are received.

SSE is useful for applications that require real-time updates, such as chat systems, stock tickers, and social media feeds. It is a simple and efficient way to establish a long-lived connection between a client and a server, and it is supported by most modern web browsers.

To use SSE, the client must create an EventSource object and specify the URL of the server-side script that will send the events. The server can then send events by writing them to the response stream with the proper formatting.

Visit the following resources to learn more:

- [Server-Sent Events - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events)
",concept
325,scalability,scalability,topic
32500,mitigation strategies,mitigation strategies,topic
3250000,graceful degradation,"Graceful degradation is a design principle that states that a system should be designed to continue functioning, even if some of its components or features are not available. In the context of web development, graceful degradation refers to the ability of a web page or application to continue functioning, even if the user's browser or device does not support certain features or technologies.

Graceful degradation is often used as an alternative to progressive enhancement, a design principle that states that a system should be designed to take advantage of advanced features and technologies if they are available.

Visit the following resources to learn more:

- [What is Graceful Degradation & Why Does it Matter?](https://blog.hubspot.com/website/graceful-degradation)
- [Four Considerations When Designing Systems For Graceful Degradation](https://newrelic.com/blog/best-practices/design-software-for-graceful-degradation)
- [The Art of Graceful Degradation](https://farfetchtechblog.com/en/blog/post/the-art-of-failure-ii-graceful-degradation/)
",concept
3250001,throttling,"Throttling is a design pattern that is used to limit the rate at which a system or component can be used. It is commonly used in cloud computing environments to prevent overuse of resources, such as compute power, network bandwidth, or storage capacity.

There are several ways to implement throttling in a cloud environment:

- Rate limiting: This involves setting a maximum number of requests that can be made to a system or component within a specified time period.
- Resource allocation: This involves allocating a fixed amount of resources to a system or component, and then limiting the use of those resources if they are exceeded.
- Token bucket: This involves using a ""bucket"" of tokens to represent the available resources, and then allowing a certain number of tokens to be ""consumed"" by each request. When the bucket is empty, additional requests are denied until more tokens become available.

Throttling is an important aspect of cloud design, as it helps to ensure that resources are used efficiently and that the system remains stable and available. It is often used in conjunction with other design patterns, such as auto-scaling and load balancing, to provide a scalable and resilient cloud environment.

Visit the following resources to learn more:

- [Throttling - AWS Well-Architected Framework](https://docs.aws.amazon.com/wellarchitected/2022-03-31/framework/rel_mitigate_interaction_failure_throttle_requests.html)
",concept
3250002,backpressure,"Backpressure is a design pattern that is used to manage the flow of data through a system, particularly in situations where the rate of data production exceeds the rate of data consumption. It is commonly used in cloud computing environments to prevent overloading of resources and to ensure that data is processed in a timely and efficient manner.

There are several ways to implement backpressure in a cloud environment:

- Buffering: This involves storing incoming data in a buffer until it can be processed, allowing the system to continue receiving data even if it is temporarily unable to process it.
- Batching: This involves grouping incoming data into batches and processing the batches in sequence, rather than processing each piece of data individually.
- Flow control: This involves using mechanisms such as flow control signals or windowing to regulate the rate at which data is transmitted between systems.

Backpressure is an important aspect of cloud design, as it helps to ensure that data is processed efficiently and that the system remains stable and available. It is often used in conjunction with other design patterns, such as auto-scaling and load balancing, to provide a scalable and resilient cloud environment.

Visit the following resources to learn more:

- [Backpressure - AWS Well-Architected Framework](https://aws.amazon.com/architecture/well-architected/serverless/patterns/backpressure/)
",concept
3250003,loadshifting,"Load shifting is a design pattern that is used to manage the workload of a system by shifting the load to different components or resources at different times. It is commonly used in cloud computing environments to balance the workload of a system and to optimize the use of resources.

There are several ways to implement load shifting in a cloud environment:

- Scheduling: This involves scheduling the execution of tasks or workloads to occur at specific times or intervals.
- Load balancing: This involves distributing the workload of a system across multiple resources, such as servers or containers, to ensure that the workload is balanced and that resources are used efficiently.
- Auto-scaling: This involves automatically adjusting the number of resources that are available to a system based on the workload, allowing the system to scale up or down as needed.

Load shifting is an important aspect of cloud design, as it helps to ensure that resources are used efficiently and that the system remains stable and available. It is often used in conjunction with other design patterns, such as throttling and backpressure, to provide a scalable and resilient cloud environment.

Visit the following resources to learn more:

- [Load Shifting - AWS Well-Architected Framework](https://aws.amazon.com/architecture/well-architected/serverless/patterns/load-shifting/)
",concept
3250004,circuit breaker,"The circuit breaker design pattern is a way to protect a system from failures or excessive load by temporarily stopping certain operations if the system is deemed to be in a failed or overloaded state. It is commonly used in cloud computing environments to prevent cascading failures and to improve the resilience and availability of a system.

A circuit breaker consists of three states: closed, open, and half-open. In the closed state, the circuit breaker allows operations to proceed as normal. If the system encounters a failure or becomes overloaded, the circuit breaker moves to the open state, and all subsequent operations are immediately stopped. After a specified period of time, the circuit breaker moves to the half-open state, and a small number of operations are allowed to proceed. If these operations are successful, the circuit breaker moves back to the closed state; if they fail, the circuit breaker moves back to the open state.

The circuit breaker design pattern is useful for protecting a system from failures or excessive load by providing a way to temporarily stop certain operations and allow the system to recover. It is often used in conjunction with other design patterns, such as retries and fallbacks, to provide a more robust and resilient cloud environment.

Visit the following resources to learn more:

- [Circuit Breaker - AWS Well-Architected Framework](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_mitigate_interaction_failure_graceful_degradation.html)
",concept
32501,instrumentation monitoring telemetry,"Instrumentation refers to the measure of a product's performance, in order to diagnose errors and to write trace information. Instrumentation can be of two types: source instrumentation and binary instrumentation.

Backend monitoring allows the user to view the performance of infrastructure i.e. the components that run a web application. These include the HTTP server, middleware, database, third-party API services, and more.

Telemetry is the process of continuously collecting data from different components of the application. This data helps engineering teams to troubleshoot issues across services and identify the root causes. In other words, telemetry data powers observability for your distributed applications.

Visit the following resources to learn more:

- [What is Instrumentation?](<https://en.wikipedia.org/wiki/Instrumentation_(computer_programming)>)
- [What is Monitoring?](https://www.yottaa.com/performance-monitoring-backend-vs-front-end-solutions/)
- [What is Telemetry?](https://www.sumologic.com/insight/what-is-telemetry/)
",concept
32502,migration strategies,"Learn how to run database migrations effectively. Especially zero downtime multi-phase schema migrations. Rather than make all changes at once, do smaller incremental changes to allow old code, and new code to work with the database at the same time, before removing old code, and finally removing the parts of the database schema which is no longer used.

Visit the following resources to learn more:

- [Databases as a Challenge for Continuous Delivery](https://phauer.com/2015/databases-challenge-continuous-delivery/)
",concept
32503,horizontal vertical scaling,"Horizontal scaling is a change in the **number** of a resource. For example, increasing the number of virtual machines processing messages in a queue. Vertical scaling is a change in the **size/power** of a resource. For example, increasing the memory or disk space available to a machine. Scaling can be applied to databases, cloud resources, and other areas of computing.

Visit the following resources to learn more:

- [Horizontal vs Vertical Scaling](https://touchstonesecurity.com/horizontal-vs-vertical-scaling-what-you-need-to-know/)
- [Scaling In Databases](https://www.geeksforgeeks.org/horizontal-and-vertical-scaling-in-databases/)
- [System Design Basics: Horizontal vs. Vertical Scaling](https://youtu.be/xpDnVSmNFX0)
- [System Design 101](https://www.youtube.com/watch?v=Y-Gl4HEyeUQ)
",concept
32504,observability,"In software development, observability is the measure of how well we can understand a system from the work it does, and how to make it better.

So what makes a system to be ""observable""? It is its ability of producing and collecting metrics, logs and traces in order for us to understand what happens under the hood and identify issues and bottlenecks faster.

You can of course implement all those features by yourself, but there are a lot of softwares out there that can help you with it like Datadog, Sentry and CloudWatch.

Visit the following resources to learn more:

- [DataDog Docs](https://docs.datadoghq.com/)
- [AWS CloudWatch Docs](https://aws.amazon.com/cloudwatch/getting-started/)
- [Sentry Docs](https://docs.sentry.io/)
- [AWS re:Invent 2017: Improving Microservice and Serverless Observability with Monitor](https://www.youtube.com/watch?v=Wx0SHRb2xcI)
- [Observability and Instrumentation: What They Are and Why They Matter](https://newrelic.com/blog/best-practices/observability-instrumentation)
",concept
400,blockchain basics,blockchain basics,topic
40000,what is blockchain,"A blockchain is a decentralized, distributed, and oftentimes public, digital ledger consisting of records called blocks that is used to record transactions across many computers so that any involved block cannot be altered retroactively, without the alteration of all subsequent blocks.

Visit the following resources to learn more:

- [Blockchain Explained](https://www.investopedia.com/terms/b/blockchain.asp)
- [What is decentralization?](https://aws.amazon.com/blockchain/decentralization-in-blockchain/)
- [How does a blockchain work?](https://youtu.be/SSo_EIwHSd4)
- [What Is a Blockchain? | Blockchain Basics for Developers](https://youtu.be/4ff9esY_4aU)
",concept
40001,decentralization,"In blockchain, decentralization refers to the transfer of control and decision-making from a centralized entity (individual, organization, or group thereof) to a distributed network. Decentralized networks strive to reduce the level of trust that participants must place in one another, and deter their ability to exert authority or control over one another in ways that degrade the functionality of the network.

Visit the following resources to learn more:

- [What is decentralization?](https://aws.amazon.com/blockchain/decentralization-in-blockchain/)
- [What is Decentralization in Blockchain?](https://www.blockchain-council.org/blockchain/what-is-decentralization-in-blockchain/)
",concept
40002,why blockchain matters,"The nature of blockchain allows for trustless systems to be built on top of it. Users don’t rely on a centralized group of people, such as a bank, to make decisions and allow transactions to flow through. Because the system is decentralized, users know that transactions will never be denied for non-custodial reasons.

This decentralization enables use-cases that were previously impossible, such as parametric insurance, decentralized finance, and decentralized organizations (DAOs), among a few. This allows developers to build products that provide immediate value without having to go through a bureaucratic process of applications, approvals, and general red tape.

Visit the following resources to learn more:

- [Why Blockchain?](https://www.blockchain.education/blockchain101/blockchain)
- [What Is The Blockchain And Why Does It Matter?](https://www.forbes.com/sites/theyec/2020/05/18/what-is-the-blockchain-and-why-does-it-matter/)
- [Web3/Crypto: Why Bother?](https://continuations.com/post/671863718643105792/web3crypto-why-bother)
- [Why is Blockchain Important and Why Does it Matter](https://www.simplilearn.com/tutorials/blockchain-tutorial/why-is-blockchain-important)
",concept
40003,blockchain structure,"The blockchain gets its name from its underlying structure. The blockchain is organized as a series of “blocks” that are “chained” together.

Understanding blockchain security requires understanding how the blockchain is put together. This requires knowing what the blocks and chains of blockchain are and why they are designed the way that they are.

Visit the following resources to learn more:

- [Blockchain Architecture Basics: Components, Structure, Benefits & Creation](https://mlsdev.com/blog/156-how-to-build-your-own-blockchain-architecture)
- [Blockchain Architecture 101: Components, Structure, and Benefits](https://komodoplatform.com/en/academy/blockchain-architecture-101/)
- [Blockchain structure](https://resources.infosecinstitute.com/topic/blockchain-structure/)
- [Blockchain Basics | Coursera](https://www.coursera.org/lecture/blockchain-basics/blockchain-structure-5rj9Z)
",concept
40004,basic blockchain operations,"Operations in a decentralized networks are the responsibility of the peer participants and their respective computational nodes. These are specific for each type of blockchain.

Visit the following resources to learn more:

- [Blockchain Basics: Structure, Operations, and the Bitcoin Blockchain](https://www.mlq.ai/blockchain-basics/)
- [How Bitcoin blockchain actually work (Video)](https://www.youtube.com/watch?v=bBC-nXj3Ng4)
- [Bitcoin blockchain transactions | Bitcoin Developer](https://developer.bitcoin.org/reference/transactions.html)
- [Ethereum blockchain transactions | ethereum.org](https://ethereum.org/en/developers/docs/transactions/)
- [Blockchain Basics | Coursera](https://www.coursera.org/lecture/blockchain-basics/basic-operations-OxILB)
",concept
40005,applications and uses,"Blockchain applications go far beyond cryptocurrency and bitcoin. With its ability to create more transparency and fairness while also saving businesses time and money, the technology is impacting a variety of sectors in ways that range from how contracts are enforced to making government work more efficiently.

Visit the following resources to learn more:

- [Blockchain Use Cases and Applications by Industry](https://consensys.net/blockchain-use-cases/)
- [Top 10 Real-World Applications Of Blockchain Technology](https://www.blockchain-council.org/blockchain/top-10-real-world-applications-of-blockchain-technology/)
- [Ethereum blockchain transactions | ethereum.org](https://ethereum.org/en/developers/docs/transactions/)
- [E34 Blockchain Applications and Real-World Use Cases Disrupting the Status Quo](https://builtin.com/blockchain/blockchain-applications)
",concept
401,blockchain general knowledge,blockchain general knowledge,topic
40100,storage,"Unlike a centralized server operated by a single company or organization, decentralized storage systems consist of a peer-to-peer network of user-operators who hold a portion of the overall data, creating a resilient file storage sharing system.

Visit the following resources to learn more:

- [Blockchain Storage](https://www.techtarget.com/searchstorage/definition/blockchain-storage)
- [Decentralized Storage](https://ethereum.org/en/developers/docs/storage/)
- [How IPFS works](https://docs.ipfs.tech/concepts/how-ipfs-works/)
",concept
40101,mining and incentive models,"Mining is the process of adding transaction details to the Blockchain, like sender address, hash value, etc. The Blockchain contains all the history of the transactions that have taken place in the past for record purposes and it is stored in such a manner that, it can’t be manipulated.

An Incentive is basically a reward given to a Blockchain Miner for speeding up the transactions and making correct decisions while processing the complete transaction securely.

Visit the following resources to learn more:

- [Blockchain Incentives to Miners](https://www.geeksforgeeks.org/blockchain-incentives-to-miners/)
- [Ethereum Consensus Mechanisms](https://ethereum.org/en/developers/docs/consensus-mechanisms/)
- [Solana Staking Rewards](https://docs.solana.com/implemented-proposals/staking-rewards)
",concept
40102,decentralization vs trust,"Blockchains, cryptocurrency, smart contracts, and oracles have emerged as new technologies for coordinating social and economic activities in a more secure, transparent, and accessible manner. Most importantly, these technologies are revealing the power of cryptographic guarantees—what we often call cryptographic truth—in restoring users’ trust in everyday interactions.

Visit the following resources to learn more:

- [What Crypto Is Really About](https://blog.chain.link/what-crypto-is-really-about/)
- [Ethereum Consensus Mechanisms](https://ethereum.org/en/developers/docs/consensus-mechanisms/)
- [The Superiority of Cryptographic Truth](https://youtu.be/AEtBPbmIRKQ)
",concept
40103,blockchain forking,"A fork happens whenever a community makes a change to the blockchain’s protocol, or basic set of rules.

Visit the following resources to learn more:

- [Blockchain Fork](<https://en.wikipedia.org/wiki/Fork_(blockchain)>)
- [What is a fork?](https://www.coinbase.com/learn/crypto-basics/what-is-a-fork)
- [What Is a Hard Fork?](https://www.investopedia.com/terms/h/hard-fork.asp)
- [Blockchain Forking](https://www.youtube.com/watch?v=bu1gcyyfz7w)",concept
40104,cryptocurrencies,"A cryptocurrency, crypto-currency, or crypto is a digital currency designed to work as a medium of exchange through a blockchain, which is not reliant on any central authority, such as a government or bank, to uphold or maintain it.

Visit the following resources to learn more:

- [What Is Cryptocurrency?](https://www.investopedia.com/terms/c/cryptocurrency.asp)
- [Cryptocurrency: What It Is and How It Works](https://www.nerdwallet.com/article/investing/cryptocurrency)
- [How Cryptocurrency actually works.](https://youtu.be/rYQgy8QDEBI)
",concept
40105,cryptowallets,"A cryptocurrency wallet is an application that functions as a wallet for your cryptocurrency.

Visit the following resources to learn more:

- [What is a Cryptocurrency Wallet?](https://www.investopedia.com/terms/b/bitcoin-wallet.asp)
- [What is a Crypto Wallet? A Beginner’s Guide](https://crypto.com/university/crypto-wallets)
",concept
40106,cryptography,"Cryptography, or cryptology, is the practice and study of techniques for secure communication in the presence of adversarial behavior.

Visit the following resources to learn more:

- [Cryptography](https://en.wikipedia.org/wiki/Cryptography)
- [What is Cryptography](https://www.synopsys.com/glossary/what-is-cryptography.html)
- [Asymmetric Encryption - Simply explained](https://youtu.be/AQDCe585Lnc)
- [What is Cryptography?](https://www.youtube.com/watch?v=6_Cxj5WKpIw)
- [Learn Cryptography](https://www.youtube.com/watch?v=trHox1bN5es)
",concept
40107,consensus protocols,"Consensus for blockchain is a procedure in which the peers of a Blockchain network reach agreement about the present state of the data in the network. Through this, consensus algorithms establish reliability and trust in the Blockchain network.

Visit the following resources to learn more:

- [Consensus Mechanisms in Blockchain: A Beginner’s Guide](https://crypto.com/university/consensus-mechanisms-explained)
- [Consensus Mechanisms](https://ethereum.org/en/developers/docs/consensus-mechanisms/)
- [What Is a Consensus Mechanism?](https://www.coindesk.com/learn/what-is-a-consensus-mechanism/)
",concept
40108,blockchain interoperability,"The concept of “blockchain interoperability” refers to the ability of different blockchain networks to exchange and leverage data between one another and to move unique types of digital assets between the networks’ respective blockchains.

Visit the following resources to learn more:

- [Cross-Chain Interoperability: What it Means for Blockchain](https://www.gemini.com/cryptopedia/why-is-interoperability-important-for-blockchain)
- [Blockchain Interoperability : Why Is Cross Chain Technology Important?](https://101blockchains.com/blockchain-interoperability/)
- [Blockchain Interoperability – Understanding Cross-Chain Technology](https://www.blockchain-council.org/blockchain/blockchain-interoperability/)
",concept
40109,blockchains,blockchains,topic
4010900,solana,"Solana is a public blockchain platform with smart contract functionality. Its native cryptocurrency is SOL.

Visit the following resources to learn more:

- [What is Solana, and how does it work?](https://cointelegraph.com/news/what-is-solana-and-how-does-it-work)
- [Beginners Guide To Solana](https://solana.com/news/getting-started-with-solana-development)
- [Solana Introduction](https://docs.solana.com/introduction)
- [Solana Whitepaper](https://solana.com/solana-whitepaper.pdf)
- [Solana Architecture](https://docs.solana.com/cluster/overview)
- [Start Building Solana!](https://beta.solpg.io/?utm_source=solana.com)
",concept
4010901,ton,"TON is a fully decentralized layer-1 blockchain designed by Telegram to onboard billions of users. It boasts ultra-fast transactions, tiny fees, easy-to-use apps, and is environmentally friendly.

Visit the following resources to learn more:

- [TON Telegram integration highlights synergy of blockchain community](https://cointelegraph.com/news/ton-telegram-integration-highlights-synergy-of-blockchain-community)
- [Start building on The Open Network](https://ton.org/dev)
- [TON Introduction](https://ton.org/docs/learn/introduction)
- [Blockchain analysis](https://ton.org/analysis)
",concept
4010902,evm based,evm based,topic
401090200,ethereum,"Ethereum is a programmable blockchain platform with the capacity to support smart contracts, dapps (decentralized apps), and other DeFi projects. The Ethereum native token is the Ether (ETH), and it’s used to fuel operations on the blockchain.

The Ethereum platform launched in 2015, and it’s now the second largest form of crypto next to Bitcoin (BTC).

Visit the following resources to learn more:

- [Ethereum whitepaper](https://ethereum.org/en/whitepaper/)
- [Intro to Ethereum](https://ethereum.org/en/developers/docs/intro-to-ethereum/)
- [A gentle introduction to Ethereum](https://bitsonblocks.net/2016/10/02/gentle-introduction-ethereum/)
",concept
401090201,polygon,"Polygon, formerly known as the Matic Network, is a protocol that allows anyone to create and exchange value, powered by zero-knowledge technology. Polygon provides multiple solutions including 

- [Polygon zkEVM](https://polygon.technology/polygon-zkevm), a zk powered EVM equivalent L2
- [Polygon PoS](https://polygon.technology/polygon-pos), a proof of stake, EVM compatible side chain
- [Polygon CDK](https://polygon.technology/polygon-cdk), a Chain Development Kit for building customizable zk powered L2s
- [Polygon ID](https://polygon.technology/polygon-id), identity infrastructure and SDKs to facilitate trusted and secure relationships between apps and users

Visit the following resources to learn more:

- [Introduction to Polygon](https://wiki.polygon.technology/)
- [Polygon POL whitepaper](https://polygon.technology/papers/pol-whitepaper)
",concept
401090202,binance smart chain,"Binance Smart Chain (also known as BNB Chain) is a blockchain project initiated by Binance as a central piece of their cryptocurrency exchange, which is the largest exchange in the world in terms of daily trading volume of cryptocurrencies.

Visit the following resources to learn more:

- [Binance whitepaper](https://www.exodus.com/assets/docs/binance-coin-whitepaper.pdf)
- [BNB Chain overview](https://www.binance.com/en/blog/all/bnb-chain-blockchain-for-exchanging-the-world-304219301536473088)
",concept
401090203,gnosis chain,"Gnosis is a blockchain based on Ethereum, which changed the consensus model to PoS to solve major issues on the Ethereum mainnet. While the platform solves problems surrounding transaction fees and speed, it also means that the Gnosis chain is less decentralized, as it is somewhat reliant on the Ethereum chain.

Visit the following resources to learn more:

- [Gnosis whitepaper](https://blockchainlab.com/pdf/gnosis_whitepaper.pdf)
- [Gnosis overview](https://developers.gnosischain.com/#gnosis-chain)
",concept
401090204,huobi eco chain,"Huobi's ECO Chain (also known as HECO) is a public blockchain that provides developers with a low-cost onchain environment for running decentralized apps (dApps) of smart contracts and storing digital assets.

Visit the following resources to learn more:

- [Huobi Eco Chain whitepaper](https://www.hecochain.com/developer.133bd45.pdf)
- [Introduction to HECO Chain](https://docs.hecochain.com/#/)
",concept
401090205,avalanche,"Avalanche describes itself as an “open, programmable smart contracts platform for decentralized applications.” What does that mean? Like many other decentralized protocols, Avalanche has its own token called AVAX, which is used to pay transaction fees and can be staked to secure the network.

Visit the following resources to learn more:

- [Avalanche whitepaper](https://assets.website-files.com/5d80307810123f5ffbb34d6e/6008d7bbf8b10d1eb01e7e16_Avalanche%20Platform%20Whitepaper.pdf)
- [Avalanche official website](https://www.avax.network/)
",concept
401090206,fantom,"Fantom is a decentralized, open-source smart contract platform that supports decentralized applications (dApps) and digital assets. It's one of many blockchain networks built as a faster, more efficient alternative to Ethereum, it uses the proof-of-stake consensus mechanism.

Visit the following resources to learn more:

- [Fantom whitepaper](https://arxiv.org/pdf/1810.10360.pdf)
- [Fantom overview](https://docs.fantom.foundation/)
",concept
401090207,moonbeam moonriver,"Moonbeam is a Polkadot network parachain that promises cross-chain interoperability between the Ethereum and Polkadot . More specifically, Moonbeam is a smart contract platform that enables developers to move dApps between the two networks without having to rewrite code or redeploy infrastructure.

Moonriver is an incentivized testnet. It enables developers to create, test, and adjust their protocols prior to launching on Moonbeam. Moonbeam is the mainnet of the ecosystem.

Visit the following resources to learn more:

- [About Moonbream](https://docs.moonbeam.network/learn/platform/networks/moonbeam/)
- [Moonbeam Vision](https://docs.moonbeam.network/learn/platform/vision/)
",concept
4010903,l2 blockchains,l2 blockchains,topic
401090300,arbitrum,"Arbitrum aims to reduce transaction fees and congestion by moving as much computation and data storage off of Ethereum's main blockchain (layer 1) as it can. Storing data off of Ethereum's blockchain is known as Layer 2 scaling solutions.

Visit the following resources to learn more:

- [Arbitrum whitepaper](https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-kalodner.pdf)
- [Inside Arbitrum](https://developer.offchainlabs.com/docs/Inside_Arbitrum)
",concept
401090301,moonbeam moonriver,"Moonbeam is a Polkadot network parachain that promises cross-chain interoperability between the Ethereum and Polkadot . More specifically, Moonbeam is a smart contract platform that enables developers to move dApps between the two networks without having to rewrite code or redeploy infrastructure.

Moonriver is an incentivized testnet. It enables developers to create, test, and adjust their protocols prior to launching on Moonbeam. Moonbeam is the mainnet of the ecosystem.

Visit the following resources to learn more:

- [About Moonbeam](https://docs.moonbeam.network/learn/platform/networks/moonbeam/)
- [Moonbeam Vision](https://docs.moonbeam.network/learn/platform/vision/)
",concept
402,blockchain oracles,blockchain oracles,topic
40200,hybrid smart contracts,"Hybrid smart contracts combine code running on the blockchain (on-chain) with data and computation from outside the blockchain (off-chain) provided by Decentralized Oracle Networks.

Visit the following resources to learn more:

- [Hybrid Smart Contracts Explained](https://blog.chain.link/hybrid-smart-contracts-explained/)
- [A complete guide to understand hybrid smart contracts](https://www.leewayhertz.com/hybrid-smart-contracts/)
",concept
40201,chainlink,"Chainlink is a decentralized network of oracles that enables smart contracts to securely interact with real-world data and services that exist outside of blockchain networks.

Visit the following resources to learn more:

- [What Is Chainlink? A Beginner’s Guide](https://blog.chain.link/what-is-chainlink/)
- [What Is Chainlink in 5 Minutes](https://www.gemini.com/cryptopedia/what-is-chainlink-and-how-does-it-work)
",concept
40202,oracle networks,"By leveraging many different data sources, and implementing an oracle system that isn’t controlled by a single entity, decentralized oracle networks provide an increased level of security and fairness to smart contracts.

Visit the following resources to learn more:

- [Decentralized Oracle Networks](https://medium.com/coinmonks/decentralized-oracle-networks-9fead28f5fe5)
- [A Beginner’s Guide To The Evolution Of Decentralized Oracle Networks](https://chainlinktoday.com/a-beginners-guide-to-the-evolution-of-decentralized-oracle-networks/)
- [Understanding Oracle Networks](https://coinmetro.com/blog/understanding-oracle-networks/)
",concept
403,smart contracts,smart contracts,topic
40300,programming languages,programming languages,topic
4030000,solidity,"Solidity is an object-oriented programming language created specifically by Ethereum Network team for constructing smart contracts on various blockchain platforms, most notably, Ethereum.

- It's used to create smart contracts that implements business logic and generate a chain of transaction records in the blockchain system.
- It acts as a tool for creating machine-level code and compiling it on the Ethereum Vitural Machine (EVM).

Like any other programming languages, Solidity also has variables, functions, classes, arithmetic operations, string manipulation, and many more.

Visit the following resources to learn more:

- [Solidity Programming Language](https://soliditylang.org/)
- [Solidity Tutorial](https://www.tutorialspoint.com/solidity/index.htm)
- [Solidity Course by FreeCodeCamp](https://www.youtube.com/watch?v=ipwxYa-F1uY)
- [Solidity Course by Dapp University](https://www.youtube.com/watch?v=EhPeHeoKF88)
- [Learn Blockchain, Solidity, and Full Stack Web3 Development](https://youtu.be/gyMwXuJrbJQ)
",concept
4030001,vyper,"Vyper is a contract-oriented, pythonic programming language that targets the Ethereum Virtual Machine (EVM).

Visit the following resources to learn more:

- [Vyper Programming Language](https://vyper.readthedocs.io/en/stable/)
- [Learn Vyper in Y Minutes](https://learnxinyminutes.com/docs/vyper/)
",concept
4030002,rust,"Rust is a multi-paradigm, general-purpose programming language. Rust emphasizes performance, type safety, and concurrency. It is popular on smart contract chains Solana and Polkadot.

Visit the following resources to learn more:

- [Rust Programming Language](https://www.rust-lang.org/)
- [How to write and deploy a smart contract in Rust](https://learn.figment.io/tutorials/write-and-deploy-a-smart-contract-on-near)
",concept
40301,testing,testing,topic
4030100,unit tests,"Unit testing involves testing individual components in a smart contract for correctness. A unit test is simple, quick to run, and provides a clear idea of what went wrong if the test fails.

Visit the following resources to learn more:

- [Smart Contracts Unit Testing](https://ethereum.org/en/developers/docs/smart-contracts/testing/#unit-testing)
- [Tips for Unit Testing Ethereum Smart Contracts in Solidity](https://betterprogramming.pub/a-few-tips-for-unit-testing-ethereum-smart-contract-in-solidity-d804062068fb)
",concept
4030101,integration tests,"Integration tests validate interactions between multiple components. For smart contract testing this can mean interactions between different components of a single contract, or across multiple contracts.

Visit the following resources to learn more:

- [Unit tests vs integration tests | Smart contract testing course](https://youtu.be/GxnX9k8i0zM)
",concept
4030102,code coverage,"Code coverage is a metric that can help you understand how much of your source is tested. It's a very useful metric that can help you assess the quality of your test suite.

Visit the following resources to learn more:

- [Testing Smart Contracts](https://ethereum.org/en/developers/docs/smart-contracts/testing/)
- [Smart Contract Code Coverage In Hardhat](https://medium.com/coinmonks/smart-contract-code-coverage-in-hardhat-d4a5ff6c9ba6)
",concept
40302,deployment,"Unlike other software, smart contracts don’t run on a local computer or a remote server: they live on the blockchain. Thus, interacting with them is different from more traditional applications.

Visit the following resources to learn more:

- [Deploying Smart Contracts](https://ethereum.org/en/developers/docs/smart-contracts/deploying/)
- [Deploying and interacting with smart contracts](https://docs.openzeppelin.com/learn/deploying-and-interacting)
",concept
40303,monitoring,"Monitoring smart contracts allow their authors to view its activity and interactions based on generated transactions and events, allowing verification of the contract's intended purpose and functionality.

Visit the following resources to learn more:

- [Monitoring Smart Contracts](https://consensys.github.io/smart-contract-best-practices/development-recommendations/solidity-specific/event-monitoring/)
",concept
40304,upgrades,"Smart contracts are immutable by default. Once they are created there is no way to alter them, effectively acting as an unbreakable contract among participants. However, for some scenarios, it is desirable to be able to modify them.

Visit the following resources to learn more:

- [Upgrading Ethereum contracts](https://ethereum.org/en/developers/docs/smart-contracts/upgrading/)
- [Upgrading smart contracts](https://docs.openzeppelin.com/learn/upgrading-smart-contracts)
- [What are Upgradable Smart Contracts? Full Guide](https://moralis.io/what-are-upgradable-smart-contracts-full-guide/)
- [Upgrading your Smart Contracts | A Tutorial & Introduction](https://youtu.be/bdXJmWajZRY)
",concept
40305,erc tokens,"An ‘Ethereum Request for Comments’ (ERC) is a document that programmers use to write smart contracts on Ethereum Blockchain. They describe rules in these documents that Ethereum-based tokens must comply with.

While there are several Ethereum standards. These ERC Ethereum standards are the most well-known and popular: ERC-20, ERC-721, ERC-1155, and ERC-777.

Visit the following resources to learn more:

- [What are Ethereum request for comments (ERC) Standards](https://dev.to/envoy_/ks-what-are-ethereum-request-for-comments-erc-standards-5f80)
- [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20/)
- [ERC-721 Token Standard (NFTs)](https://decrypt.co/resources/erc-721-ethereum-nft-token-standard)
- [ERC-1155 Token Standard (Multi-Token)](https://decrypt.co/resources/what-is-erc-1155-ethereums-flexible-token-standard)
",concept
40306,crypto wallets,"A cryptocurrency wallet is a device, physical medium, program, or service which stores the public and/or private keys for cryptocurrency transactions. In addition to this basic function of storing the keys, a cryptocurrency wallet more often also offers the functionality of encrypting and/or signing information.

Visit the following resources to learn more:

- [What is a crypto wallet?](https://www.coinbase.com/learn/crypto-basics/what-is-a-crypto-wallet)
- [What is a Crypto Wallet? A Beginner’s Guide](https://crypto.com/university/crypto-wallets)
",concept
40307,ides,"An integrated development environment is a software application that provides comprehensive facilities to computer programmers for software development. An IDE normally consists of at least a source code editor, build automation tools and a debugger.

Visit the following resources to learn more:

- [Integrated Development Environments](https://ethereum.org/en/developers/docs/ides/)
- [Remix - Ethereum IDE & community](https://remix-project.org/)
",concept
40308,crypto faucets,"A crypto faucet lets users earn small crypto rewards by completing simple tasks. The metaphor is based on how even one drop of water from a leaky faucet could eventually fill up a cup. There are various kinds of crypto faucets, including bitcoin (BTC), Ethereum (ETH), and BNB faucets.

Faucets are common in development environments where developers obtain testnet crypto in order develop and test their application prior to mainnet deployment.

Visit the following resources to learn more:

- [What Is A Crypto Faucet?](https://academy.binance.com/en/articles/what-is-a-crypto-faucet)
- [What are crypto faucets and how do they work?](https://cointelegraph.com/news/what-are-crypto-faucets-and-how-do-they-work)
",concept
40309,decentralized storage,"Decentralized storage is where data is stored on a decentralized network across multiple locations by users or groups who are incentivized to join, store, and keep data accessible. The servers used are hosted by people, rather than a single company. Anyone is free to join, they are kept honest due to smart contracts, and they are incentivized to participate via tokens.

Visit the following resources to learn more:

- [What Is Decentralized Storage?](https://medium.com/@ppio/what-is-decentralized-storage-9c4b761942e2)
- [Decentralized Storage](https://ethereum.org/en/developers/docs/storage/)
",concept
404,smart contract frameworks,smart contract frameworks,topic
40400,hardhat,"Hardhat is an Ethereum development environment. It allows users to compile contracts and run them on a development network. Get Solidity stack traces, console.log and more.

Visit the following resources to learn more:

- [Hardhat Overview](https://hardhat.org/hardhat-runner/docs/getting-started#overview)
- [Build and Deploy Smart Contracts using Hardhat](https://youtu.be/GBc3lBrXEBo)
",concept
40401,brownie,"Brownie is a Python-based development and testing framework for smart contracts targeting the Ethereum Virtual Machine.

Visit the following resources to learn more:

- [Brownie Overview](https://eth-brownie.readthedocs.io/)
- [Python and Blockchain: Deploy Smart Contracts using Brownie](https://youtu.be/QfFO22lwSw4)
",concept
40402,truffle,"A development environment, testing framework, and asset pipeline for blockchains using the Ethereum Virtual Machine (EVM), aiming to make life as a developer easier.

Visit the following resources to learn more:

- [Truffle Overview](https://trufflesuite.com/docs/truffle/)
- [Truffle Tutorial for Beginners | Compile, Test & Deploy Smart contracts to any EVM Blockchain](https://youtu.be/62f757RVEvU)
",concept
40403,foundry,"Foundry is a smart contract development toolchain. Foundry manages your dependencies, compiles your project, runs tests, deploys, and lets you interact with the chain from the command-line and via Solidity scripts.

Visit the following resources to learn more:

- [Foundry Overview](https://book.getfoundry.sh/)
- [Intro to Foundry](https://youtu.be/fNMfMxGxeag)
",concept
405,blockchain security,blockchain security,topic
40500,practices,practices,topic
4050000,fuzz testing and static analysis,"Fuzzing or fuzz testing is an automated software testing technique that involves providing invalid, unexpected, or random data as inputs to a smart contract.

Static analysis is the analysis of smart contracts performed without executing them.

Visit the following resources to learn more:

- [Getting Started with Smart Contract Fuzzing](https://www.immunebytes.com/blog/getting-started-with-smart-contract-fuzzing/)
- [Solidity smart contract Static Code Analysis](https://lightrains.com/blogs/solidity-static-analysis-tools/#static-code-analysis)
- [Smart contract Fuzzing](https://youtu.be/LRyyNzrqgOc)
",concept
4050001,common threat vectors,"Smart contract audits enable developers to provide a thorough analysis of smart contract sets. The main goal of a smart contract audit is to detect and eliminate vulnerabilities, starting with the most common threat vectors.

Visit the following resources to learn more:

- [Smart Contract Attack Vectors](https://github.com/kadenzipfel/smart-contract-attack-vectors)
- [Solidity Security: Comprehensive list of known attack vectors and common anti-patterns](https://blog.sigmaprime.io/solidity-security.html)
- [Blockchain Attack Vectors: Vulnerabilities of the Most Secure Technology](https://www.apriorit.com/dev-blog/578-blockchain-attack-vectors)
",concept
4050002,source of randomness attacks,"The security of cryptographic systems depends on some secret data that is known to authorized persons but unknown and unpredictable to others. To achieve this unpredictability, some randomization is typically employed. Modern cryptographic protocols often require frequent generation of random quantities. Cryptographic attacks that subvert or exploit weaknesses in this process are known as randomness attacks.

Visit the following resources to learn more:

- [Smart Contract Randomness or ReplicatedLogic Attack](https://blog.finxter.com/randomness-or-replicatedlogic-attack-on-smart-contracts/)
",concept
40501,tools,tools,topic
4050100,slither,"Slither is a Solidity static analysis framework written in Python 3. It runs a suite of vulnerability detectors, prints visual information about contract details, and provides an API to easily write custom analyses. Slither enables developers to find vulnerabilities, enhance their code comprehension, and quickly prototype custom analyses.

Visit the following resources to learn more:

- [Slither, the Solidity source analyzer](https://github.com/crytic/slither/blob/master/README.md)
",concept
4050101,manticore,"Manticore is a symbolic execution tool for analysis of smart contracts and binaries.

Visit the following resources to learn more:

- [Manticore Docs](https://manticore.readthedocs.io/)
",concept
4050102,mythx,"MythX is a comprehensive smart contract security analysis tools developed by Consensys. It allows users to detect security vulnerabilities in Ethereum smart contracts throughout the development life cycle as well as analyze Solidity dapps for security holes and known smart contract vulnerabilities.

Visit the following resources to learn more:

- [MythX Official Site](https://mythx.io/)
- [MythX Documentation](https://docs.mythx.io/)
",concept
4050103,echidna,"Echidna is a Haskell program designed for fuzzing/property-based testing of Ethereum smarts contracts. It uses sophisticated grammar-based fuzzing campaigns based on a contract ABI to falsify user-defined predicates or Solidity assertions.

Visit the following resources to learn more:

- [Echidna: A Fast Smart Contract Fuzzer](https://github.com/crytic/echidna/blob/master/README.md)
",concept
406,management platforms,management platforms,topic
40600,open zeppelin,"OpenZeppelin Contracts helps you minimize risk by using battle-tested libraries of smart contracts for Ethereum and other blockchains. It includes the most used implementations of ERC standards.

Visit the following resources to learn more:

- [OpenZeppelin Contracts](https://docs.openzeppelin.com/contracts/)
",concept
407,version control systems,version control systems,topic
40700,git,"[Git](https://git-scm.com/) is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Visit the following resources to learn more:

- [Git & GitHub Crash Course For Beginners](https://www.youtube.com/watch?v=SWYqp7iY_Tc)
- [Learn Git with Tutorials, News and Tips - Atlassian](https://www.atlassian.com/git)
- [Git Cheat Sheet](https://cs.fyi/guide/git-cheatsheet)
",concept
408,repo hosting services,repo hosting services,topic
40800,github,"GitHub is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitHub Website](https://github.com)
- [GitHub Documentation](https://docs.github.com/en/get-started/quickstart)
- [What is GitHub?](https://www.youtube.com/watch?v=w3jLJU7DT5E)
- [Git vs. GitHub: Whats the difference?](https://www.youtube.com/watch?v=wpISo9TNjfU)
- [Git and GitHub for Beginners](https://www.youtube.com/watch?v=RGOj5yH7evk)
- [Git and GitHub - CS50 Beyond 2019](https://www.youtube.com/watch?v=eulnSXkhE7I)
- [How to Use Git in a Professional Dev Team](https://ooloo.io/project/github-flow)
",concept
40801,gitlab,"GitLab is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitLab Website](https://gitlab.com/)
- [GitLab Documentation](https://docs.gitlab.com/)
",concept
40802,bitbucket,"Bitbucket is a Git based hosting and source code repository service that is Atlassian's alternative to other products like GitHub, GitLab etc

Bitbucket offers hosting options via Bitbucket Cloud (Atlassian's servers), Bitbucket Server (customer's on-premise) or Bitbucket Data Centre (number of servers in customers on-premise or cloud environment)

Visit the following resources to learn more:

- [Bitbucket Website](https://bitbucket.org/product)
- [A brief overview of Bitbucket](https://bitbucket.org/product/guides/getting-started/overview#a-brief-overview-of-bitbucket)
- [Getting started with Bitbucket](https://bitbucket.org/product/guides/basics/bitbucket-interface)
- [Using Git with Bitbucket Cloud](https://www.atlassian.com/git/tutorials/learn-git-with-bitbucket-cloud)
- [Bitbucket tutorial | How to use Bitbucket Cloud](https://www.youtube.com/watch?v=M44nEyd_5To)
- [Bitbucket Tutorial | Bitbucket for Beginners](https://www.youtube.com/watch?v=i5T-DB8tb4A)
",concept
409,dapps,dapps,topic
40900,frontend frameworks,frontend frameworks,topic
4090000,react,"React is the most popular front-end JavaScript library for building user interfaces. React can also render on the server using Node and power mobile apps using React Native.

Visit the following resources to learn more:

- [Visit Dedicated React Roadmap](/react)
- [React Website](https://reactjs.org/)
- [Official Getting Started](https://reactjs.org/tutorial/tutorial.html)
- [The Beginners Guide to React](https://egghead.io/courses/the-beginner-s-guide-to-react)
- [React JS Course for Beginners](https://www.youtube.com/watch?v=nTeuhbP7wdE)
- [React Course - Beginners Tutorial for React JavaScript Library [2022]](https://www.youtube.com/watch?v=bMknfKXIFA8)
- [Understanding Reacts UI Rendering Process](https://www.youtube.com/watch?v=i793Qm6kv3U)
",concept
4090001,angular,"Angular is a component based front-end development framework built on TypeScript which includes a collection of well-integrated libraries that include features like routing, forms management, client-server communication, and more.

Visit the following resources to learn more:

- [Visit Dedicated Angular Roadmap](/angular)
- [Official - Getting started with Angular](https://angular.io/start)
",concept
4090002,vue,"Vue.js is an open-source JavaScript framework for building user interfaces and single-page applications. It is mainly focused on front end development.

Visit the following resources to learn more:

- [Visit Dedicated Vue Roadmap](/vue)
- [Vue.js Website](https://vuejs.org/)
- [Official Getting Started](https://vuejs.org/v2/guide/)
- [Vue.js Course for Beginners](https://www.youtube.com/watch?v=FXpIoQ_rT_c)
- [Vue.js Crash Course](https://www.youtube.com/watch?v=qZXt1Aom3Cs)
",concept
40901,testing,"A key to building software that meets requirements without defects is testing. Software testing helps developers know they are building the right software. When tests are run as part of the development process (often with continuous integration tools), they build confidence and prevent regressions in the code.

Like traditional software, testing dApps involves testing the entire stack that makes up the dApp (backend, frontend, db, etc.).

Visit the following resources to learn more:

- [What is Software Testing?](https://www.guru99.com/software-testing-introduction-importance.html)
- [Testing Pyramid](https://www.browserstack.com/guide/testing-pyramid-for-test-automation)
- [How to test dApps (decentralized applications)](https://rhian-is.medium.com/how-to-test-dapps-decentralized-applications-4662cf61db90)
",concept
40902,deployment,"Deploying a dApp involves deployment of all of its layers, generally through a management framework.

Visit the following resources to learn more:

- [Tutorial for building an Ethereum DApp with Integrated Web3 Monitoring](https://www.moesif.com/blog/blockchain/ethereum/Tutorial-for-building-Ethereum-Dapp-with-Integrated-Error-Monitoring/)
- [Build and Deploy a Modern Web 3.0 Blockchain App](https://youtu.be/Wn_Kb3MR_cU)
",concept
40903,maintenance,"dApps can be harder to maintain because the code and data published to the blockchain is harder to modify. It’s hard for developers to make updates to their dapps (or the underlying data stored by a dapp) once they are deployed, even if bugs or security risks are identified in an old version.
",concept
40904,architecture,"Unlike Web2 applications, in Web3 there’s no centralized database that stores the application state or user identity, and there’s no centralized web server where the backend logic resides.

Visit the following resources to learn more:

- [The Architecture of a Web 3.0 application](https://www.preethikasireddy.com/post/the-architecture-of-a-web-3-0-application)
- [Decentralized Applications Architecture: Back End, Security and Design Patterns](https://www.freecodecamp.org/news/how-to-design-a-secure-backend-for-your-decentralized-application-9541b5d8bddb/)
- [Blockchain Development: Dapp Architecture](https://youtu.be/KBSq8-LnUDI?t=286)
",concept
40905,security,"dApps face unique security challenges as they run on immutable blockchains. dApps are harder to maintain, and developers cannot modify or update their codes once deployed. Therefore, special consideration must be taken before putting it on the blockchain.

Visit the following resources to learn more:

- [DAPP Security Standards](https://github.com/Dexaran/DAPP-security-standards/blob/master/README.md)
- [dApp Security Considerations](https://livebook.manning.com/book/building-ethereum-dapps/chapter-14/)
- [dApp Security:All You Need to Know](https://www.immunebytes.com/blog/dapp-security/#Benefits_of_DApps_Security)
",concept
40906,applicability,applicability,topic
4090600,defi,"Decentralized finance offers financial instruments without relying on intermediaries such as brokerages, exchanges, or banks by using smart contracts on a blockchain.

Visit the following resources to learn more:

- [Decentralized Finance (DeFi) Definition](https://www.investopedia.com/decentralized-finance-defi-5113835)
- [What is DeFi?](https://www.coinbase.com/learn/crypto-basics/what-is-defi)
- [What is DeFi? (Decentralized Finance Animated)](https://www.youtube.com/watch?v=17QRFlml4pA)
",concept
4090601,daos,"A decentralized autonomous organization (DAO) is an emerging form of legal structure. With no central governing body, every member within a DAO typically shares a common goal and attempt to act in the best interest of the entity. Popularized through cryptocurrency enthusiasts and blockchain technology, DAOs are used to make decisions in a bottoms-up management approach.

Visit the following resources to learn more:

- [What Is A DAO And How Do They Work?](https://consensys.net/blog/blockchain-explained/what-is-a-dao-and-how-do-they-work/)
- [Decentralized Autonomous Organization (DAO)](https://www.investopedia.com/tech/what-dao/)
",concept
4090602,nfts,"A non-fungible token (NFT) is a financial security consisting of digital data stored in a blockchain, a form of distributed ledger. The ownership of an NFT is recorded in the blockchain, and can be transferred by the owner, allowing NFTs to be sold and traded.

Visit the following resources to learn more:

- [Non-Fungible Token (NFT)](https://www.investopedia.com/non-fungible-tokens-nft-5115211)
- [NFTs, explained](https://www.theverge.com/22310188/nft-explainer-what-is-blockchain-crypto-art-faq)
- [NFT Explained In 5 Minutes | What Is NFT? - Non Fungible Token](https://youtu.be/NNQLJcJEzv0)
",concept
4090603,payments,"Blockchain technology has the ability to eliminate all the tolls exacted by centralized organization when transferring payments.

Visit the following resources to learn more:

- [How does blockchain impact global payments and remittances?](https://consensys.net/blockchain-use-cases/finance/#payments)
- [Smart Contract Use Cases - Payments](https://blog.chain.link/smart-contract-use-cases/#external-payments)
",concept
4090604,insurance,"Blockchain technology has the ability to automate claims functions by verifying real-world data through the use of an oracle. It also automates payments between parties for claims and thus lower administrative costs for insurance companies.

Visit the following resources to learn more:

- [Smart Contract Use Cases - Insurance](https://blog.chain.link/smart-contract-use-cases/#insurance)
- [Top 7 Use Cases of Blockchain in the Insurance Industry](https://imaginovation.net/blog/blockchain-insurance-industry-examples/)
",concept
40907,node as a service,node as a service,topic
4090700,alchemy,"Alchemy is a developer platform that empowers companies to build scalable and reliable decentralized applications without the hassle of managing blockchain infrastructure in-house.

Visit the following resources to learn more:

- [Alchemy official site](https://www.alchemy.com/)
",concept
4090701,infura,"Infura provides the tools and infrastructure that allow developers to easily take their blockchain application from testing to scaled deployment - with simple, reliable access to Ethereum and IPFS.

Visit the following resources to learn more:

- [Infura official site](https://infura.io/)
",concept
4090702,moralis,"Moralis provides a single workflow for building high performance dapps. Fully compatible with your favorite web3 tools and services.

Visit the following resources to learn more:

- [Moralis official site](https://moralis.io/)
",concept
4090703,quicknode,"QuickNode is a Web3 developer platform used to build and scale blockchain applications.

Visit the following resources to learn more:

- [Quicknode official site](https://www.quicknode.com/)
",concept
40908,supporting languages,supporting languages,topic
4090800,javascript,"JavaScript, often abbreviated JS, is a programming language that is one of the core technologies of the World Wide Web, alongside HTML and CSS. It lets us add interactivity to pages e.g. you might have seen sliders, alerts, click interactions, and popups etc on different websites -- all of that is built using JavaScript. Apart from being used in the browser, it is also used in other non-browser environments as well such as Node.js for writing server-side code in JavaScript, Electron for writing desktop applications, React Native for mobile applications and so on.

Visit the following resources to learn more:

- [W3Schools – JavaScript Tutorial](https://www.w3schools.com/js/)
- [The Modern JavaScript Tutorial](https://javascript.info/)
- [Eloquent Javascript - Book](https://eloquentjavascript.net/)
- [You Dont Know JS Yet (book series) ](https://github.com/getify/You-Dont-Know-JS)
- [JavaScript Crash Course for Beginners](https://youtu.be/hdI2bqOjy3c)
- [Node.js Crash Course](https://www.youtube.com/watch?v=fBNz5xF-Kx4)
- [Node.js Tutorial for Beginners](https://www.youtube.com/watch?v=TlB_eWDSMt4)
- [Codecademy - Learn JavaScript](https://www.codecademy.com/learn/introduction-to-javascript)
",concept
4090801,python,"Python is a well known programming language which is both a strongly typed and a dynamically typed language. Being an interpreted language, code is executed as soon as it is written and the Python syntax allows for writing code in functional, procedural or object-oriented programmatic ways.

Visit the following resources to learn more:

- [Visit Dedicated Python Roadmap](/python)
- [Python Website](https://www.python.org/)
- [Python Getting Started](https://www.python.org/about/gettingstarted/)
- [W3Schools - Python Tutorial ](https://www.w3schools.com/python/)
- [Python Crash Course](https://ehmatthes.github.io/pcc/)
- [Automate the Boring Stuff](https://automatetheboringstuff.com/)
- [Codecademy - Learn Python 2](https://www.codecademy.com/learn/learn-python)
",concept
4090802,go,"Go is an open source programming language supported by Google. Go can be used to write cloud services, CLI tools, used for API development, and much more.

Visit the following resources to learn more:

- [Visit Dedicated Go Roadmap](/golang)
- [A Tour of Go – Go Basics](https://go.dev/tour/welcome/1)
- [Go Reference Documentation](https://go.dev/doc/)
- [Learn Go | Boot.dev](https://boot.dev/learn/learn-golang)
- [Go by Example - annotated example programs](https://gobyexample.com/)
- [Learn Go | Codecademy](https://www.codecademy.com/learn/learn-go)
- [W3Schools Go Tutorial ](https://www.w3schools.com/go/)
",concept
40909,client libraries,client libraries,topic
4090900,ethers js,"The ethers.js library aims to be a complete and compact library for interacting with the Ethereum Blockchain and its ecosystem. It was originally designed for use with ethers.io and has since expanded into a more general-purpose library.

Visit the following resources to learn more:

- [Ethers.js Documentation](https://docs.ethers.io/)
",concept
4090901,web3 js,"web3.js is a collection of libraries that allow you to interact with a local or remote ethereum node using HTTP, IPC or WebSocket.

Visit the following resources to learn more:

- [web3.js Documentation](https://web3js.readthedocs.io/)
",concept
4090902,moralis,"A library that gives you access to the powerful Moralis Server backend from your JavaScript app.

Visit the following resources to learn more:

- [Moralis SDK](https://github.com/MoralisWeb3/Moralis-JS-SDK/blob/main/README.md)
",concept
40910,client nodes,client nodes,topic
4091000,geth,"Go Ethereum (Geth) is one of the three original implementations (along with C++ and Python) of the Ethereum protocol. It is written in Go, fully open source and licensed under the GNU LGPL v3.

Visit the following resources to learn more:

- [Geth Documentation](https://geth.ethereum.org/docs/)
",concept
4091001,besu,"Besu is an Apache 2.0 licensed, MainNet compatible, Ethereum client written in Java.

Visit the following resources to learn more:

- [Besu Ethereum Client](https://github.com/hyperledger/besu)
",concept
4091002,nethermind,"Nethermind is a high-performance, highly configurable full Ethereum protocol client built on .NET that runs on Linux, Windows, and macOS, and supports Clique, Aura, Ethash, and Proof-of-Stake consensus algorithms.

Visit the following resources to learn more:

- [Nethermind Documentation](https://docs.nethermind.io/nethermind/)
",concept
4091003,substrate,"Substrate is a Software Development Kit (SDK) specifically designed to provide you with all of the fundamental components s blockchain requires so you can focus on crafting the logic that makes your chain unique and innovative.

Visit the following resources to learn more:

- [Substrate Documentation](https://docs.substrate.io/quick-start/)
",concept
410,building for scale,building for scale,topic
41000,state and payment channels,"State channels refer to the process in which users transact with one another directly outside of the blockchain, or ‘off-chain,’ and greatly minimize their use of ‘on-chain’ operations.

Visit the following resources to learn more:

- [The Basics of State Channels](https://education.district0x.io/general-topics/understanding-ethereum/basics-state-channels/)
- [State Channels: An Introduction to Off-chain Transactions](https://www.talentica.com/blogs/state-channels-an-introduction-to-off-chain-transactions/)
",concept
41001,optimistic rollups and fraud proofs,"‍Optimistic rollups are a layer 2 (L2) construction that improves throughput and latency on Ethereum’s base layer by moving computation and data storage off-chain. An optimistic rollup processes transactions outside of Ethereum Mainnet, reducing congestion on the base layer and improving scalability.

Optimistic rollups allow anyone to publish blocks without providing proofs of validity. However, to ensure the chain remains safe, optimistic rollups specify a time window during which anyone can dispute a state transition.

Visit the following resources to learn more:

- [How Do Optimistic Rollups Work (The Complete Guide)](https://www.alchemy.com/overviews/optimistic-rollups)
",concept
41002,zero knowledge rollups and zero knowledge proof,"Zero-knowledge rollups (ZK-rollups) are layer 2 scaling solutions that increase the throughput of a blockchain by moving computation and state-storage off-chain.

Visit the following resources to learn more:

- [Zero-Knowledge Rollups - Ethereum](https://ethereum.org/en/developers/docs/scaling/zk-rollups)
- [Why and How zk-SNARK Works](https://medium.com/@imolfar/why-and-how-zk-snark-works-1-introduction-the-medium-of-a-proof-d946e931160)
- [Introduction to zk-SNARKs](https://vitalik.ca/general/2021/01/26/snarks.html)
",concept
41003,validium,"Validium is a scaling solution that enforces integrity of transactions using validity proofs like ZK-rollups, but doesn’t store transaction data on the Ethereum Mainnet. While off-chain data availability introduces trade-offs, it can lead to massive improvements in scalability

Visit the following resources to learn more:

- [Validium - Ethereum](https://ethereum.org/en/developers/docs/scaling/validium/)
",concept
41004,plasma,"Plasma is a framework that allows the creation of child blockchains that use the main Ethereum chain as a layer of trust and arbitration. In Plasma, child chains can be designed to meet the requirements of specific use cases, specifically those that are not currently feasible on Ethereum.

Visit the following resources to learn more:

- [Plasma Chains - Ethereum](https://ethereum.org/en/developers/docs/scaling/plasma/)
",concept
41005,sidechains,"A sidechain is a separate blockchain network that connects to another blockchain – called a parent blockchain or mainnet – via a two-way peg.

Visit the following resources to learn more:

- [Sidechains - Ethereum](https://ethereum.org/en/developers/docs/scaling/sidechains/)
- [An Introduction to Sidechains](https://www.coindesk.com/learn/an-introduction-to-sidechains)
",concept
41006,ethereum 2,"Ethereum 2.0 marks a long-anticipated upgrade to the Ethereum public mainnet. Designed to accelerate Ethereum’s usage and adoption by improving its performance, Ethereum 2.0 implements Proof of Stake.

Visit the following resources to learn more:

- [What Is Ethereum 2.0?](https://consensys.net/blog/blockchain-explained/what-is-ethereum-2/)
- [What Is Ethereum 2.0? Understanding The Merge](https://www.forbes.com/advisor/investing/cryptocurrency/ethereum-2/)
",concept
41007,on chain scaling,"On-chain scaling refers to any direct modification made to a blockchain, like data sharding and execution sharding in the incoming version of Ethereum 2.0. Another type of on-chain scaling would be a sidechain with two-way bridge to Ethereum, like Polygon.

Visit the following resources to learn more:

- [Scaling - Ethereum](https://ethereum.org/en/developers/docs/scaling/)
",concept
500,language,language,topic
50000,python,"Python is a multi-paradigm language. Being an interpreted language, code is executed as soon as it is written and the Python syntax allows for writing code in functional, procedural or object-oriented programmatic ways. Python is frequently recommended as the first language new coders should learn, because of its focus on readability, consistency, and ease of use. This comes with some downsides, as the language is not especially performant in most production tasks.

Visit the following resources to learn more:

- [Visit Dedicated Python Roadmap](/python)
- [Python Website](https://www.python.org/)
- [Python Getting Started](https://www.python.org/about/gettingstarted/)
- [Automate the Boring Stuff](https://automatetheboringstuff.com/)
- [W3Schools - Python Tutorial ](https://www.w3schools.com/python/)
- [Python Crash Course](https://ehmatthes.github.io/pcc/)
- [Codecademy - Learn Python 3](https://www.codecademy.com/learn/learn-python-3)
",concept
50001,ruby,"Ruby is a high-level, interpreted programming language that blends Perl, Smalltalk, Eiffel, Ada, and Lisp. Ruby focuses on simplicity and productivity along with a syntax that reads and writes naturally. Ruby supports procedural, object-oriented and functional programming and is dynamically typed.

Visit the following resources to learn more:

- [Ruby Website](https://www.ruby-lang.org/en/)
- [Learn Ruby in 20 minutes](https://www.ruby-lang.org/en/documentation/quickstart/)
- [Learn Ruby | Codecademy](https://www.codecademy.com/learn/learn-ruby)
",concept
50002,javascript,"JavaScript allows you to add interactivity to your pages. Common examples that you may have seen on the websites are sliders, click interactions, popups and so on. Apart from being used on the frontend in browsers, there is Node.js which is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.

Visit the following resources to learn more:

- [Visit Dedicated JavaScript Roadmap](/javascript)
- [W3Schools – JavaScript Tutorial](https://www.w3schools.com/js/)
- [The Modern JavaScript Tutorial](https://javascript.info/)
- [Codecademy - Learn JavaScript](https://www.codecademy.com/learn/introduction-to-javascript)
- [JavaScript Crash Course for Beginners](https://youtu.be/hdI2bqOjy3c)
- [Node.js Crash Course](https://www.youtube.com/watch?v=fBNz5xF-Kx4)
- [Node.js Tutorial for Beginners](https://www.youtube.com/watch?v=TlB_eWDSMt4)
- [W3Schools – Node.js Tutorial](https://www.w3schools.com/nodejs/)
- [What is NPM?](https://www.w3schools.com/nodejs/nodejs_npm.asp)
- [Official Documentation](https://nodejs.dev/en/learn/)
",concept
50003,go,"Go is an open source programming language supported by Google. Go can be used to write cloud services, CLI tools, used for API development, and much more.

Visit the following resources to learn more:

- [Visit Dedicated Go Roadmap](/golang)
- [A Tour of Go – Go Basics](https://go.dev/tour/welcome/1)
- [Go Reference Documentation](https://go.dev/doc/)
- [Learn Go | Boot.dev](https://boot.dev/learn/learn-golang)
- [Go by Example - annotated example programs](https://gobyexample.com/)
- [Learn Go | Codecademy](https://www.codecademy.com/learn/learn-go)
- [W3Schools Go Tutorial ](https://www.w3schools.com/go/)
- [Making a RESTful JSON API in Go](https://thenewstack.io/make-a-restful-json-api-go/)
",concept
50004,rust,"Rust is a modern systems programming language focusing on safety, speed, and concurrency. It accomplishes these goals by being memory safe without using garbage collection.

Visit the following resources to learn more:

- [The Rust Programming Language - online book](https://doc.rust-lang.org/book/)
- [Rust by Example - collection of runnable examples](https://doc.rust-lang.org/stable/rust-by-example/index.html)
- [The Rust Programming Book - Video Version](https://youtube.com/playlist?list=PLai5B987bZ9CoVR-QEIN9foz4QCJ0H2Y8)
- [Comprehensive Rust by Google - Learn Rust in 4 Days](https://google.github.io/comprehensive-rust/)
- [Microsoft Learn Course](https://learn.microsoft.com/en-us/training/paths/rust-first-steps/)
- [Quick Rust Guide](https://sivanaikk.github.io/rust/)
- [Rust Katas - Small, interactive Rust exercises](https://rustlings.cool/)",concept
501,operating systems,operating systems,topic
50103,windows,"Windows is a graphical user interface (GUI) based operating system developed by Microsoft. It is a hybrid kernel-based proprietary operating system. According to a survey, till April 2022, windows is the most popular operating system in the world with a 75% market share.

Visit the following resources to learn more:

- [Windows Official Site](http://microsoft.com/windows)
- [Windows Documentation for Developers](https://learn.microsoft.com/en-us/windows/)
",concept
502,live in terminal,live in terminal,topic
50202,editors,"Editors are tools that allow you to create or edit files on your file system.

## Vim

Vim is a highly configurable text editor built to make creating and changing any kind of text very efficient. It is included as ""vi"" with most UNIX systems and with Apple OS X.

Vim ships with `vimtutor` that is a tutor designed to describe enough of the Vim commands that you will be able to easily use Vim as an all-purpose editor.

Visit the following resources to learn more:

- [Vim](https://www.vim.org)
- [Vim help files](https://vimhelp.org/)
- [Vim Tips Wiki](https://vim.fandom.com/wiki/Vim_Tips_Wiki)
- [Vim Adventures](https://vim-adventures.com/)
- [GNU Nano](https://www.nano-editor.org/)
- [GNU Nano Manual](https://www.nano-editor.org/dist/latest/nano.html)
- [PowerShell Documentation](https://learn.microsoft.com/en-us/powershell/)
- [GNU Emacs](https://www.gnu.org/software/emacs/)
- [GNU Emacs Documentation](https://www.gnu.org/software/emacs/documentation.html)
",concept
50203,process monitoring,"A process is an instance of a computer program that is being executed. Each process is identified by a unique number called a process ID (PID). A process is a running program. The operating system tracks processes through the use of process identifiers. A process identifier (PID) is a unique number that identifies a specific process. A PID is automatically assigned to each process when it is created on the system.

There are several linux commands that can be used to monitor processes. The most common ones are:

- `ps` - report a snapshot of the current processes.
- `top` - display Linux processes.
- `htop` - interactive process viewer.
- `atop` - advanced interactive monitor to view the load on a Linux system.
- `lsof` - list open files.

The `ps` utility displays a header line, followed by lines containing information about all of your processes that have controlling terminals.

- [ps Documentation](https://man7.org/linux/man-pages/man1/ps.1.html)
- [ps Cheat Sheet](https://www.sysadmin.md/ps-cheatsheet.html)
- [Linux Crash Course - The ps Command](https://www.youtube.com/watch?v=wYwGNgsfN3I)

The `top` program periodically displays a sorted list of system processes. The default sorting key is pid, but other keys can be used instead. Various output options are available.

- [top Documentation](https://man7.org/linux/man-pages/man1/top.1.html)
- [top Cheat Sheet](https://gist.github.com/ericandrewlewis/4983670c508b2f6b181703df43438c37)

htop is a cross-platform ncurses-based process. It is similar to top, but allows you to scroll vertically and horizontally, and interact using a pointing device (mouse). You can observe all processes running on the system, along with their command line arguments, as well as view them in a tree format, select multiple processes and act on them all at once.

- [htop Documentation](https://www.man7.org/linux/man-pages/man1/htop.1.html)
- [htop Cheat Sheet](https://www.maketecheasier.com/power-user-guide-htop/)

Lsof lists on its standard output file information about files opened by processes.

- [lsof Cheat Sheet](https://neverendingsecurity.wordpress.com/2015/04/13/lsof-commands-cheatsheet/)
- [lsof Documentation](https://man7.org/linux/man-pages/man8/lsof.8.html)
- [Linux Crash Course - The lsof Command](https://www.youtube.com/watch?v=n9nZ1ellaV0)",concept
50204,performance monitoring,"There are many tools available to monitor the performance of your application. Some of the most popular are:

- `nmon` - A system monitor tool for Linux and AIX systems.
- `iostat` - A tool that reports CPU statistics and input/output statistics for devices, partitions and network filesystems.
- `sar` - A system monitor command used to report on various system loads, including CPU activity, memory/paging, device load, network.
- `vmstat` - A tool that reports virtual memory statistics.

Nmon is a fully interactive performance monitoring command-line utility tool for Linux. It is a benchmark tool that displays performance about the cpu, memory, network, disks, file system, nfs, top processes, resources, and power micro-partition.

- [nmon Documentation](https://www.ibm.com/docs/en/aix/7.2?topic=n-nmon-command)
- [nmon Command Guide](https://www.geeksforgeeks.org/linux-nmon/)

The iostat command in Linux is used for monitoring system input/output statistics for devices and partitions. It monitors system input/output by observing the time the devices are active in relation to their average transfer rates. The iostat produce reports may be used to change the system configuration to raised balance the input/output between the physical disks.

- [iostat Documentation](https://man7.org/linux/man-pages/man1/iostat.1.html)
- [iostat Command Guide](https://www.geeksforgeeks.org/iostat-command-in-linux-with-examples/)

Short for **S**ystem **A**ctivity **R**eport, `sar` is a command line tool for Unix and Unix-like operating systems that shows a report of different information about the usage and activity of resources in the operating system.

- [SAR command in Linux to monitor system performance](https://www.geeksforgeeks.org/sar-command-linux-monitor-system-performance/)
- [SAR Man Page](https://man7.org/linux/man-pages/man1/sar.1.html)
- [SAR Man Page 2](https://linux.die.net/man/1/sar)
- [Sar tutorial for beginners](https://linuxhint.com/sar_linux_tutorial/)

Short for **V**irtual **m**emory **stat**istic reporter, `vmstat` is a command line tool for Unix and Unix-like operating systems that reports various information about the operating system such as memory, paging, processes, I/O, CPU and disk usage.

- [vmstat command in Linux with Examples](https://www.geeksforgeeks.org/vmstat-command-in-linux-with-examples/)
- [Linux commands: exploring virtual memory with vmstat](https://www.redhat.com/sysadmin/linux-commands-vmstat)
- [VMstat Man Page](https://man7.org/linux/man-pages/man8/vmstat.8.html)
- [vmstat tutorial](https://phoenixnap.com/kb/vmstat-command)
",concept
50205,networking tools,"Networking tools are used to troubleshoot network issues. They are also used to monitor network traffic and to test network connectivity. Some of the most common networking tools are:

- `traceroute` - Traces the route taken by packets over an IP network.
- `ping` - sends echo request packets to a host to test the Internet connection.
- `mtr` - Combines the functionality of `traceroute` and `ping` into a single diagnostic tool.
- `nmap` - Scans hosts for open ports.
- `netstat` - Displays network connections, routing tables, interface statistics, masquerade connections, and multicast memberships.
- `ufw` and `firewalld` - Firewall management tools.
- `iptables` and `nftables` - Firewall management tools.
- `tcpdump` - Dumps traffic on a network.
- `dig` - DNS lookup utility.
- `scp` - Secure copy.

`traceroute` command is a command in Linux that prints the route a network packet takes from its source (e.g. your computer) to the destination host (e.g., roadmap.sh). It is quite valuable in investigating slow network connections as it can help us spot the slow leg of the network packet journey through the internet.

- [How to Run Traceroute in Linux](https://linuxhint.com/run_traceroute_linux/)
- [Traceroute command in Linux with examples](https://www.geeksforgeeks.org/traceroute-command-in-linux-with-examples/)

`ping` (**P**acket **In**ternet **G**roper) command is used to check the network connectivity between host and server/host. This command takes as input the IP address or the URL and sends a data packet to the specified address with the message “PING” and get a response from the server/host this time is recorded which is called latency.

- [What is ping command?](https://linuxize.com/post/linux-ping-command/)
- [ping command with examples](https://www.geeksforgeeks.org/ping-command-in-linux-with-examples/)

`mtr` combines the functionality of the traceroute and ping programs in a single network diagnostic tool.

- [Javatpoint: Linux mtr Command](https://www.javatpoint.com/linux-mtr)
- [mtr Linux command](https://www.tutorialspoint.com/unix_commands/mtr.htm)
- [How to traceroute use mtr command in Linux](https://www.devopsroles.com/how-to-traceroute-use-mtr-command-in-linux/)

NMAP stands for Network Mapper and is an open-source tool used to explore and audit the network's security, such as checking firewalls and scanning ports.

- [NMAP Official Manual Book](https://nmap.org/book/man.html)
- [What is Nmap and How to Use it](https://www.freecodecamp.org/news/what-is-nmap-and-how-to-use-it-a-tutorial-for-the-greatest-scanning-tool-of-all-time/)

Netstat is a command line utility to display all the network connections on a system. It displays all the tcp, udp and unix socket connections. Apart from connected sockets it also displays listening sockets that are waiting for incoming connections.

- [netstat command in Linux with Examples](https://www.tutorialspoint.com/unix_commands/netstat.htm)
- [Netstat Tutorial](http://www.c-jump.com/CIS24/Slides/Networking/html_utils/netstat.html)
- [Netstat Commands - Network Administration Tutorial](https://www.youtube.com/watch?v=bxFwpm4IobU)
- [Linux Command Line Tutorial For Beginners - netstat command](https://www.youtube.com/watch?v=zGNcvBaN5wE)

UFW, or _uncomplicated firewall_, is command-line based utility for managing firewall rules in Arch Linux, Debian and Ubuntu. It's aim is to make firewall configuration as simple as possible. It is a frontend for the `iptables` firewalling tool.

- [ufw Documentation](https://manpages.ubuntu.com/manpages/trusty/man8/ufw.8.html)
- [Basic Introduction to UFW](https://www.linux.com/training-tutorials/introduction-uncomplicated-firewall-ufw/)
- [UFW Essentials](https://www.digitalocean.com/community/tutorials/ufw-essentials-common-firewall-rules-and-commands)

IPtables is a command-line firewall utility that uses policy chains to allow or block traffic that will be enforced by the linux kernel’s netfilter framework. Iptables packet filtering mechanism is organized into three different kinds of structures: tables, chains and targets.

- [Iptables tutorial](https://www.hostinger.in/tutorials/iptables-tutorial)
- [Beginners to Advanced Guide Iptables](https://erravindrapawadia.medium.com/iptables-tutorial-beginners-to-advanced-guide-to-linux-firewall-839e10501759)

`tcpdump` is a command line tool used for analysing network traffic passing through your system. It can be used to capture and filter packets and display them in a human-readable format. The captured information can be analysed at a later date as well.

- [tcpdump Documentation](https://www.tcpdump.org/manpages/tcpdump.1.html)
- [Basic Introduction to Tcpdump](https://opensource.com/article/18/10/introduction-tcpdump)
- [50 ways to isolate traffic with Tcpdump](https://danielmiessler.com/study/tcpdump/)
- [Interpreting Tcpdump output and data](https://www.youtube.com/watch?v=7bsQP9sKHrs)

`dig` command stands for **D**omain **I**nformation **G**roper. It is used for retrieving information about DNS name servers. It is mostly used by network administrators for verifying and troubleshooting DNS problems and to perform DNS lookups. It replaces older tools such as `nslookup` and the `host`.

- [What is dig command?](https://www.geeksforgeeks.org/dig-command-in-linux-with-examples/)
- [More on dig](https://linuxize.com/post/how-to-use-dig-command-to-query-dns-in-linux/)
- [What is host command?](https://www.geeksforgeeks.org/host-command-in-linux-with-examples/)
- [What is nslookup command?](https://www.geeksforgeeks.org/nslookup-command-in-linux-with-examples/)
- [What is DNS?](https://www.cloudflare.com/en-gb/learning/dns/what-is-dns/)

`SCP` is an acronym for Secure Copy Protocol.It is a command line utility that allows the user to securely copy files and directories between two locations usually between unix or linux systems.The protocol ensures the transmission of files is encrypted to prevent anyone with suspicious intentions from getting sensitive information.`SCP` uses encryption over an `SSH` (Secure Shell) connection, this ensures that the data being transferred is protected from suspicious attacks.

- [SCP Linux Command](https://www.freecodecamp.org/news/scp-linux-command-example-how-to-ssh-file-transfer-from-remote-to-local/)
- [10 SCP command examples](https://www.tecmint.com/scp-commands-examples/)
- [SCP command explained](https://phoenixnap.com/kb/linux-scp-command)
",concept
50206,text manipulation,"Some of the most common commands you will use in the terminal are text manipulation commands. These commands allow you to search, replace, and manipulate text in files and streams. Here are some of the most common commands you will use:

- `awk` - A programming language designed for text processing and typically used as a data extraction and reporting tool.
- `sed` - A stream editor for filtering and transforming text.
- `grep` - A command-line utility for searching plain-text data sets for lines that match a regular expression.
- `sort` - A command-line utility for sorting lines of text files.
- `cut` - A command-line utility for cutting sections from each line of files.
- `uniq` - A command-line utility for reporting or omitting repeated lines.
- `cat` - A command-line utility for concatenating files and printing on the standard output.
- `echo` - A command-line utility for displaying a line of text.
- `fmt` - A command-line utility for simple optimal text formatting.
- `tr` - A command-line utility for translating or deleting characters.
- `nl` - A command-line utility for numbering lines of files.
- `wc` - A command-line utility for printing newline, word, and byte counts for files.

`awk` is a general-purpose scripting language used for manipulating data or text and generating reports in the Linux world. It is mostly used for pattern scanning and processing. It searches one or more files to see if they contain lines that match the specified patterns and then performs the associated actions.

- [What is AWK? How to use it?](https://www.geeksforgeeks.org/awk-command-unixlinux-examples/)
- [How AWK works?](https://linuxize.com/post/awk-command/)
- [Linux Crash Course - awk](https://www.youtube.com/watch?v=oPEnvuj9QrI)

`sed`(**S**tream **Ed**itor) command in UNIX can perform lots of functions on file like searching, finding and replacing, insertion or deletion. By using SED you can edit files even without opening them in editors like [VI Editor](https://www.redhat.com/sysadmin/introduction-vi-editor).

- [What is SED? with examples](https://www.geeksforgeeks.org/sed-command-in-linux-unix-with-examples/)
- [Detailed Manual](https://www.gnu.org/software/sed/manual/sed.html)
- [Linux Crash Course - The sed Command](https://www.youtube.com/watch?v=nXLnx8ncZyE&t=218s)

The `grep` command (**g**lobal search for **r**egular **e**xpression and **p**rint out) searches file(s) for a particular pattern of characters, and displays all lines that contain that pattern. It can be used with other commands like `ps` making it more useful.

- [What is Grep? with examples](https://www.geeksforgeeks.org/grep-command-in-unixlinux/)
- [Detailed Manual](https://www.gnu.org/software/grep/manual/grep.html)
- [Linux Crash Course - The grep Command](https://www.youtube.com/watch?v=Tc_jntovCM0)

`sort` command is used to sort the contents of a file in a particular order. By default, it sorts a file assuming the contents are in ASCII. But it also can also be used to sort numerically by using appropriate options.

- [Sort command with examples](https://www.geeksforgeeks.org/sort-command-linuxunix-examples/)
- [Options](<https://en.wikipedia.org/wiki/Sort_(Unix)>)
- [Linux Tutorials|sort command GeeksforGeeks](https://www.youtube.com/watch?v=fEx5rnbDKO4)

The cut utility cuts out selected portions of each line (as specified by list) from each file and writes them to the standard output.

- [cut Documentation](https://man7.org/linux/man-pages/man1/cut.1.html)
- [cut Cheat Sheet](https://bencane.com/2012/10/22/cheat-sheet-cutting-text-with-cut/)

The uniq utility reads the specified input_file comparing adjacent lines, and writes a copy of each unique input line to the output_file.

- [uniq Documentation](https://man7.org/linux/man-pages/man1/uniq.1.html)
- [uniq Cheat Sheet](https://www.geeksforgeeks.org/uniq-command-in-linux-with-examples/)

`cat` (concatenate) command is very frequently used in Linux. It reads data from the file and gives its content as output. It helps us to create, view, and concatenate files.

- [Cat Command with examples](https://www.tecmint.com/13-basic-cat-command-examples-in-linux/)
- [Options](<https://en.wikipedia.org/wiki/Cat_(Unix)>)
- [Linux Tutorials|cat command|GeeksforGeeks](https://www.youtube.com/watch?v=exj5WMUJ11g)

`echo` is a built-in command in Linux used to display lines of text/string that are passed as an argument. It is mostly used in shell scripts and batch files to output status text or `ENV` variables to the screen or a file.

- [Echo command with Examples](https://www.tecmint.com/echo-command-in-linux/)
- [Linux Crash Course - The echo Command](https://www.youtube.com/watch?v=S_ySzMHxMjw)

`fmt` command is for formatting and optimizing contents in text files. It will be really useful when it comes to beautify large text files by setting uniform column width and spaces.

- [Fmt command with Examples](https://www.devopsroles.com/fmt-command-in-linux-with-example/)

The tr utility copies the standard input to the standard output with substitution or deletion of selected characters.

- [tr Documentation](https://linuxcommand.org/lc3_man_pages/tr1.html)
- [tr Cheat Sheet](https://linuxopsys.com/topics/tr-command-in-linux)

The nl utility reads lines from the named file or the standard input if the file argument is omitted, applies a configurable line numbering filter operation and writes the result to the standard output.

- [nl Documentation](https://man7.org/linux/man-pages/man1/nl.1.html)
- [nl Cheat Sheet](https://www.geeksforgeeks.org/nl-command-in-linux-with-examples/)

The wc utility displays the number of lines, words, and bytes contained in each input file, or standard input (if no file is specified) to the standard output.

- [wc Documentation](https://linux.die.net/man/1/wc)
- [wc Cheat Sheet](https://onecompiler.com/cheatsheets/wc)
",concept
503,version control systems,version control systems,topic
50300,git,"[Git](https://git-scm.com/) is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Visit the following resources to learn more:

- [Git & GitHub Crash Course For Beginners](https://www.youtube.com/watch?v=SWYqp7iY_Tc)
- [Learn Git with Tutorials, News and Tips - Atlassian](https://www.atlassian.com/git)
- [Git Cheat Sheet](https://cs.fyi/guide/git-cheatsheet)
",concept
504,vcs hosting,vcs hosting,topic
50400,github,"GitHub is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitHub Website](https://github.com)
- [GitHub Documentation](https://docs.github.com/en/get-started/quickstart)
- [How to Use Git in a Professional Dev Team](https://ooloo.io/project/github-flow)
- [What is GitHub?](https://www.youtube.com/watch?v=w3jLJU7DT5E)
- [Git vs. GitHub: Whats the difference?](https://www.youtube.com/watch?v=wpISo9TNjfU)
- [Git and GitHub for Beginners](https://www.youtube.com/watch?v=RGOj5yH7evk)
- [Git and GitHub - CS50 Beyond 2019](https://www.youtube.com/watch?v=eulnSXkhE7I)
",concept
50401,gitlab,"GitLab is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitLab Website](https://gitlab.com/)
- [GitLab Documentation](https://docs.gitlab.com/)
",concept
50402,bitbucket,"Bitbucket is a Git based hosting and source code repository service that is Atlassian's alternative to other products like GitHub, GitLab etc

Bitbucket offers hosting options via Bitbucket Cloud (Atlassian's servers), Bitbucket Server (customer's on-premise) or Bitbucket Data Centre (number of servers in customers on-premise or cloud environment)

Visit the following resources to learn more:

- [Bitbucket Website](https://bitbucket.org/product)
- [A brief overview of Bitbucket](https://bitbucket.org/product/guides/getting-started/overview#a-brief-overview-of-bitbucket)
- [Getting started with Bitbucket](https://bitbucket.org/product/guides/basics/bitbucket-interface)
- [Using Git with Bitbucket Cloud](https://www.atlassian.com/git/tutorials/learn-git-with-bitbucket-cloud)
- [Bitbucket tutorial | How to use Bitbucket Cloud](https://www.youtube.com/watch?v=M44nEyd_5To)
- [Bitbucket Tutorial | Bitbucket for Beginners](https://www.youtube.com/watch?v=i5T-DB8tb4A)
",concept
505,setting up x,setting up x,topic
50500,reverse proxy,"A Reverse Proxy server is a type of proxy server that typically sits behind the firewall in a private network and directs client requests to the appropriate backend server. It provides an additional level of security by hiding the server related details like `IP Address` to clients. It is also known as **server side proxy**.

**Common Uses:**

- Load balancing
- Web acceleration
- Security and anonymity

Visit the following resources to learn more:

- [What is Reverse Proxy?](https://www.cloudflare.com/en-gb/learning/cdn/glossary/reverse-proxy/)
- [NGINX documentation](https://www.nginx.com/resources/glossary/reverse-proxy-server/)
",concept
50501,caching server,"A cache server is a **dedicated network server** or service acting as a server that saves Web pages or other Internet content locally. By placing previously requested information in temporary storage, or cache, a cache server both speeds up access to data and reduces demand on an enterprise's bandwidth.

Visit the following resources to learn more:

- [What is Caching?](https://www.cloudflare.com/en-gb/learning/cdn/what-is-caching/)
- [What is Cache Server?](https://networkencyclopedia.com/cache-server/)
- [Site Cache vs Browser Cache vs Server Cache](https://wp-rocket.me/blog/different-types-of-caching/)
",concept
50502,forward proxy,"Forward Proxy, often called proxy server is a server that sits in front of a group of **client machines**. When those computers make requests to sites and services on the Internet, the proxy server intercepts those requests and then communicates with web servers on behalf of those clients, like a middleman.

**Common Uses:**

- To block access to certain content
- To protect client identity online
- To provide restricted internet to organizations

Visit the following resources to learn more:

- [What is Forward Proxy?](https://www.fortinet.com/resources/cyberglossary/proxy-server)
- [Forward vs Reverse Proxy](https://oxylabs.io/blog/reverse-proxy-vs-forward-proxy)
",concept
50503,load balancer,"Load Balancer acts as the **traffic cop** sitting in front of your servers and routing client requests across all servers capable of fulfilling those requests in a manner that maximizes speed and capacity utilization and ensures that no one server is overworked. If one of the servers goes down, the load balancer redirects traffic to the remaining online servers.

Visit the following resources to learn more:

- [What is Load Balancing?](https://www.nginx.com/resources/glossary/load-balancing/)
- [Load Balancing concepts and algorithms](https://www.cloudflare.com/en-gb/learning/performance/what-is-load-balancing/)
",concept
50504,firewall,"Firewall is a **network security device** that monitors and filters incoming and outgoing network traffic based on an organization’s previously established security policies. It is a barrier that sits between a private internal network and the public Internet. A firewall’s main purpose is to allow non-threatening traffic in and to keep dangerous traffic out.

Visit the following resources to learn more:

- [What is Firewall?](https://www.checkpoint.com/cyber-hub/network-security/what-is-firewall/)
- [Types of Firewall](https://www.cisco.com/c/en_in/products/security/firewalls/what-is-a-firewall.html)
- [ Introduction of Firewall in Computer Network](https://www.geeksforgeeks.org/introduction-of-firewall-in-computer-network/)
- [ What is Firewall in Computer Network?](https://www.geeksforgeeks.org/introduction-of-firewall-in-computer-network/)
- [Why do we need Firewalls?](https://www.tutorialspoint.com/what-is-a-firewall-and-why-do-you-need-one)
- [ Firewalls and Network Security - SimpliLearn](https://www.youtube.com/watch?v=9GZlVOafYTg)
",concept
50505,nginx,"NGINX is a powerful web server and uses a non-threaded, event-driven architecture that enables it to outperform Apache if configured correctly. It can also do other important things, such as load balancing, HTTP caching, or be used as a reverse proxy.

Visit the following resources to learn more:

- [Official Website](https://nginx.org/)
- [NGINX Explained in 100 Seconds](https://www.youtube.com/watch?v=JKxlsvZXG7c)
",concept
50506,apache,"Apache is a free, open-source HTTP server, available on many operating systems, but mainly used on Linux distributions. It is one of the most popular options for web developers, as it accounts for over 30% of all the websites, as estimated by W3Techs.

Visit the following resources to learn more:

- [Apache Server Website](https://httpd.apache.org/)
- [What is Apache Web Server?](https://www.youtube.com/watch?v=kaaenHXO4t4)
",concept
50507,tomcat,"Tomcat is an open source implementation of the Jakarta Servlet, Jakarta Server Pages, Jakarta Expression Language, Jakarta WebSocket, Jakarta Annotations and Jakarta Authentication specifications. These specifications are part of the Jakarta EE platform.

Visit the following resources to learn more:

- [Tomcat Website](https://tomcat.apache.org/)
- [Official Documentation(Tomcat 10.0)](https://tomcat.apache.org/tomcat-10.0-doc/index.html)
- [Apache Tomcat](https://www.youtube.com/c/ApacheTomcatOfficial)
",concept
50508,iis,"Internet Information Services (IIS) for Windows® Server is a flexible, secure and manageable Web server for hosting anything on the Web.

Visit the following resources to learn more:

- [Official Website](https://www.iis.net/)
- [Learn Windows Web Server IIS](https://www.youtube.com/watch?v=1VdxPWwtISA)
",concept
507,cloud providers,cloud providers,topic
50700,aws,"Amazon Web Services has been the market leading cloud computing platform since 2011, ahead of Azure and Google Cloud. AWS offers over 200 services with data centers located all over the globe.

AWS service is an online platform that provides scalable and cost-effective cloud computing solutions. It is broadly adopted cloud platform that offers several on-demand operations like compute power, database storage, content delivery and so on.

Visit the following resources to learn more:

- [AWS Website](https://aws.amazon.com/)
- [AWS Documentation](https://docs.aws.amazon.com/)
- [Sign up for AWS](https://portal.aws.amazon.com/billing/signup)
- [How to learn AWS](https://cs.fyi/guide/how-to-learn-aws/)
- [AWS Ramp Up Guide](https://d1.awsstatic.com/training-and-certification/ramp-up_guides/Ramp-Up_Guide_CloudPractitioner.pdf)
- [Cloud Practitioner Essentials](https://explore.skillbuilder.aws/learn/course/external/view/elearning/134/aws-cloud-practitioner-essentials)
- [AWS Guide by SimpliLearn](https://www.simplilearn.com/tutorials/aws-tutorial/what-is-aws)
- [AWS Tutorial for Beginners](https://www.youtube.com/watch?v=k1RI5locZE4&t=129s)
- [AWS Course for Beginners](https://www.coursera.org/learn/aws-cloud-technical-essentials?specialization=aws-devops)
- [DevOps on AWS Course ](https://www.coursera.org/specializations/aws-devops?#courses)
- [AWS Practitioner ](https://youtu.be/SOTamWNgDKc)",concept
50701,google cloud,"Google Cloud is Google's cloud computing service offering, providing over 150 products/services to choose from. It consists of a set of physical assets, such as computers and hard disk drives, and virtual resources, such as virtual machines(VMs), that are contained in Google's data centers. It runs on the same infrastructure that Google uses internally for its end-user products, such as Search, Gmail, Google Drive, and YouTube.

Visit the following resources to learn more:

- [Google Cloud Website](https://cloud.google.com/)
- [Official Documentation](https://cloud.google.com/docs)
- [Google Cloud Get Started Guide](https://cloud.google.com/docs/get-started/)
- [Coursera Complete Course for Google Cloud ](https://www.coursera.org/professional-certificates/cloud-engineering-gcp#courses)
- [Google Cloud by Edureka on You-Tube](https://www.youtube.com/watch?v=IUU6OR8yHCc)
- [5 Tips to Become a Google Cloud Certified Professional Architect](https://thenewstack.io/5-tips-to-become-a-google-cloud-certified-professional-architect/)
",concept
50702,azure,"Microsoft Azure is a cloud computing service operated by Microsoft. Azure currently provides more than 200 products and cloud services.

Visit the following resources to learn more:

- [Azure Website](https://azure.microsoft.com/en-us/)
- [Official Documentation](https://docs.microsoft.com/en-us/azure/)
- [Azure Get Started Guide](https://azure.microsoft.com/en-ca/get-started/#explore-azure)
- [Get to know Azure](https://azure.microsoft.com/en-us/explore/)
",concept
50703,heroku,"Heroku is a cloud platform as a service subsidiary of Salesforce. Heroku officially supports Node.js, Ruby, Java, PHP, Python, Go, Scala and Clojure, along with any language that runs on Linux via a third-party build pack.

Visit the following resources to learn more:

- [Heroku Website](https://www.heroku.com/)
- [Official Documentation](https://devcenter.heroku.com/)
- [Heroku Get Started Guide](https://devcenter.heroku.com/start)
",concept
50704,albaba cloud,"Alibaba Cloud is a cloud computing service, offering over 100 products and services with data centers in 24 regions and 74 availability zones around the world.

Visit the following resources to learn more:

- [Alibaba Cloud Website](https://www.alibabacloud.com/)
- [Official Documentation](https://www.alibabacloud.com/help/en/)
- [Alibaba Cloud Getting Started Guide](https://www.alibabacloud.com/getting-started)
",concept
50705,digital ocean,"DigitalOcean is a cloud computing service offering products and services in Compute, Storage, Managed Databases, Containers & Images and Networking.

Visit the following resources to learn more:

- [DigitalOcean Website](https://www.digitalocean.com/)
- [Official Documentation](https://docs.digitalocean.com/products/)
- [DigitalOcean Get Started Guide](https://docs.digitalocean.com/products/getting-started/)
",concept
50706,linode,"Linode is a cloud computing service owned by Akamai Technologies. Linode positions itself as an alternative to AWS, GCP and Azure by offering core services without complexity for most workloads.

Visit the following resources to learn more:

- [Linode Website](https://www.linode.com/)
- [Official Documentation](https://www.linode.com/docs/)
- [Linode Getting Started Guide](https://www.linode.com/docs/guides/getting-started/)
",concept
50707,vultr,"Vultr is an infrastructure focussed cloud computing service, available in 25 locations worldwide. Vultur compute offers 100% SSD and high performance Intel vCPUs.

Visit the following resources to learn more:

- [Vultr Website](https://www.vultr.com/)
- [Official Documentation](https://www.vultr.com/docs/)
",concept
508,networking protocols,networking protocols,topic
50800,osi model,"Open Systems Interconnection (OSI) model is a **conceptual** model consists of 7 layers, that was proposed to standardize the communication between devices over the network. It was the first standard model for network communications, adopted by all major computer and telecommunication companies in the early 1980s.

Visit the following resources to learn more:

- [What is OSI Model?](https://www.cloudflare.com/en-gb/learning/ddos/glossary/open-systems-interconnection-model-osi/)
- [OSI Model](https://www.youtube.com/watch?v=dV8mjZd1OtU)
- [What is TCP/IP Model?](https://www.geeksforgeeks.org/tcp-ip-model/)
- [OSI vs TCP/IP Model](https://www.youtube.com/watch?v=F5rni9fr1yE)
",concept
50801,dns,"DNS (**D**omain **N**ame **S**ystem) is the phonebook of the Internet. Humans access information online through domain names, like nytimes.com or espn.com. Web browsers interact through Internet Protocol (IP) addresses. DNS translates domain names to IP addresses so browsers can load Internet resources.

Visit the following resources to learn more:

- [What is DNS?](https://www.cloudflare.com/en-gb/learning/dns/what-is-dns/)
- [HOw DNS works (comic)](https://howdns.works/)
- [DNS and How does it Work?](https://www.youtube.com/watch?v=Wj0od2ag5sk)
- [DNS Records](https://www.youtube.com/watch?v=7lxgpKh_fRY)
",concept
50802,http,"HTTP is the `TCP/IP` based application layer communication protocol which standardizes how the client and server communicate with each other. It defines how the content is requested and transmitted across the internet.

Visit the following resources to learn more:

- [Everything you need to know about HTTP](https://cs.fyi/guide/http-in-depth)
- [What is HTTP?](https://www.cloudflare.com/en-gb/learning/ddos/glossary/hypertext-transfer-protocol-http/)
- [An overview of HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview)
- [HTTP/3 From A To Z: Core Concepts](https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/)
- [HTTP Crash Course & Exploration](https://www.youtube.com/watch?v=iYM2zFP3Zn0)
",concept
50803,https,"HTTPS (**H**ypertext **T**ransfer **P**rotocol **S**ecure) is the secure version of HTTP, which is the primary protocol used to send data between a web browser and a website.

`HTTPS = HTTP + SSL/TLS`

Visit the following resources to learn more:

- [What is HTTPS?](https://www.cloudflare.com/en-gb/learning/ssl/what-is-https/)
- [Why HTTPS Matters](https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https)
- [Enabling HTTPS on Your Servers](https://developers.google.com/web/fundamentals/security/encrypt-in-transit/enable-https)
- [How HTTPS works (comic)](https://howhttps.works/)
",concept
50804,ftp,"File Transfer Protocol(FTP) is `TCP/IP` based application layer communication protocol that helps transferring files between local and remote file systems over the network. To transfer a file, 2 TCP connections(control connection and data connection) are used in parallel.

Visit the following resources to learn more:

- [What is FTP?](https://www.geeksforgeeks.org/file-transfer-protocol-ftp-in-application-layer/)
- [FTP vs SFTP vs FTPS](https://www.fortinet.com/resources/cyberglossary/file-transfer-protocol-ftp-meaning)
",concept
50805,ssl tls,"Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are cryptographic protocols used to provide security in internet communications. These protocols encrypt the data that is transmitted over the web, so anyone who tries to intercept packets will not be able to interpret the data. One difference that is important to know is that SSL is now deprecated due to security flaws, and most modern web browsers no longer support it. But TLS is still secure and widely supported, so preferably use TLS.

Visit the following resources to learn more:

- [Cloudflare - What is SSL?](https://www.cloudflare.com/learning/ssl/what-is-ssl/)
- [Cloudflare - What is TLS?](https://www.cloudflare.com/en-gb/learning/ssl/transport-layer-security-tls/)
- [Wikipedia - SSL/TLS](https://en.wikipedia.org/wiki/Transport_Layer_Security)
- [SSH vs SSL vs TLS](https://www.youtube.com/watch?v=k3rFFLmQCuY)
",concept
50806,ssh,"The SSH (**S**ecure **Sh**ell) is a network communication protocol that enables two computers to communicate over an insecure network. It is a secure alternative to the non-protected login protocols (such as telnet, rlogin) and insecure file transfer methods (such as FTP). It is mostly used for secure Remote Login and File Transfer.

`SFTP = FTP + SSH`

Visit the following resources to learn more:

- [SSH Intro](https://www.baeldung.com/cs/ssh-intro)
- [What is SSH?](https://www.ssh.com/academy/ssh/protocol)
- [SFTP using SSH](https://www.goanywhere.com/blog/how-sftp-works)
",concept
50807,emails,emails,topic
5080700,white grey listing,"White listing is a process of adding an email to an approved sender list, so emails from that sender are never moved to the spam folder. This tells an email server to move messages to the inbox directly.

`Greylisting` is a method of protecting e-mail users against spam. A mail transfer agent (MTA) using greylisting will ""temporarily reject"" any email from a sender it does not recognize. If the mail is legitimate, the originating server will try again after a delay, and the email will be accepted if sufficient time has elapsed.

Visit the following resources to learn more:

- [Basic Introduction to whitelisting](https://www.cblohm.com/blog/education-marketing-trends/what-is-email-whitelisting/)
- [Detailed Introduction to greylisting](<https://en.wikipedia.org/wiki/Greylisting_(email)>)
",concept
5080701,smtp,"Email is emerging as one of the most valuable services on the internet today. Most internet systems use SMTP as a method to transfer mail from one user to another. SMTP is a push protocol and is used to send the mail whereas POP (post office protocol) or IMAP (internet message access protocol) are used to retrieve those emails at the receiver’s side.

SMTP is an application layer protocol. The client who wants to send the mail opens a TCP connection to the SMTP server and then sends the mail across the connection. The SMTP server is an always-on listening mode. As soon as it listens for a TCP connection from any client, the SMTP process initiates a connection through port 25. After successfully establishing a TCP connection the client process sends the mail instantly.

Visit the following resources to learn more:

- [What is Simple Mail Transfer Protocol (SMTP)?](https://www.geeksforgeeks.org/simple-mail-transfer-protocol-smtp/)
",concept
5080702,imaps,"IMAP (port 143) or IMAPS (port 993) allows you to access your email wherever you are, from any device. When you read an email message using IMAP, you aren't actually downloading or storing it on your computer; instead, you're reading it from the email service. As a result, you can check your email from different devices, anywhere in the world: your phone, a computer, a friend's computer.

IMAP only downloads a message when you click on it, and attachments aren't automatically downloaded. This way you're able to check your messages a lot more quickly than POP.

Visit the following resources to learn more:

- [Wikipedia: Internet Message Access Protocol](https://en.wikipedia.org/wiki/Internet_Message_Access_Protocol)
- [What is IMAP and How To Use It | Email Tutorial](https://www.youtube.com/watch?v=cfXabGOA2s8)
",concept
5080703,pop3s,"POP3 (port 110) or POP3s (port 995) stands for The Post Office Protocol. It's an Internet standard protocol used by local email software clients to retrieve emails from a remote mail server over a TCP/IP connection.

Email servers hosted by Internet service providers also use POP3 to receive and hold emails intended for their subscribers. Periodically, these subscribers will use email client software to check their mailbox on the remote server and download any emails addressed to them.

Once the email client has downloaded the emails, they are usually deleted from the server, although some email clients allow users to specify that mails be copied or saved on the server for a period of time.

Visit the following resources to learn more:

- [What is POP3?](https://www.techtarget.com/whatis/definition/POP3-Post-Office-Protocol-3)
",concept
5080704,dmarc,"DMARC stands for Domain-based Message Authentication, Reporting, and Conformance, is an authentication method on the email that is built to protect domain email from invalid email addresses or commonly known as email spoofing, email attacks, phishing, scams, and other threat activities.

Visit the following resources to learn more:

- [DMARC Official Website](https://dmarc.org/)
",concept
5080705,spf,"Sender Policy Framework (SPF) is used to authenticate the sender of an email. With an SPF record in place, Internet Service Providers can verify that a mail server is authorized to send email for a specific domain. An SPF record is a DNS TXT record containing a list of the IP addresses that are allowed to send email on behalf of your domain.

Visit the following resources to learn more:

- [What is a DNS SPF record?](https://www.cloudflare.com/learning/dns/dns-records/dns-spf-record/)
- [SPF Overview](https://www.youtube.com/watch?v=WFPYrAr1boU)
",concept
5080706,domain keys,"DomainKeys Identified Mail (DKIM) is an email authentication method designed to detect forged sender addresses in email (email spoofing), a technique often used in phishing and email spam.

Visit the following resources to learn more:

- [DomainKeys Identified Mail](https://www.brainkart.com/article/DomainKeys-Identified-Mail_8493/)
",concept
509,serverless,serverless,topic
50900,cloudflare,- [Cloudflare Documentation](https://developers.cloudflare.com/),concept
50901,aws lambda,- [AWS Lambda Introduction](https://docs.aws.amazon.com/lambda/latest/operatorguide/intro.html),concept
50902,azure functions,- [Azure Functions Overview](https://learn.microsoft.com/en-us/azure/azure-functions/functions-overview),concept
50903,gcp functions,"Google Cloud Functions is a serverless execution environment for building and connecting cloud services. With Cloud Functions you write simple, single-purpose functions that are attached to events emitted from your cloud infrastructure and services. Your function is triggered when an event being watched is fired. Your code executes in a fully managed environment. There is no need to provision any infrastructure or worry about managing any servers.

You can write Cloud Functions using a number of supported programming languages. You can take your function and run it in any standard runtime environment for one of the supported languages, which makes both portability and local testing a breeze.

Cloud Functions offers two product versions: Cloud Functions (1st gen), the original version, and Cloud Functions (2nd gen), a new version built on Cloud Run and Eventarc to provide an enhanced feature set. See Cloud Functions version comparison for more information.",concept
50904,vercel,"Vercel is a cloud platform that enables developers to deploy and host websites and web applications. It focuses on providing a seamless and efficient experience for developers to deploy their projects with minimal configuration and effort. Vercel supports various frontend frameworks and languages, making it a versatile choice for web development projects.

Key features of Vercel include:

Serverless Functions: Vercel allows you to deploy serverless functions, which are small, single-purpose functions that can be executed in response to events. This enables developers to build serverless applications without managing servers.

Continuous Deployment: Vercel supports automatic deployments from popular version control systems like Git. Whenever you push changes to your repository, Vercel can automatically build and deploy the updated version of your application.

Global CDN (Content Delivery Network): Vercel leverages a global CDN to distribute your application's assets and content to servers located around the world. This helps in reducing latency and improving the overall performance of your web application.

Custom Domains: You can easily configure custom domains for your Vercel deployments, allowing you to use your own domain name for the hosted application.

Environment Variables: Vercel allows you to manage environment variables for your projects, which is useful for storing sensitive information like API keys securely.

Collaboration: Vercel provides collaboration features, allowing multiple team members to work on a project and deploy changes seamlessly.

Integration with Frameworks: Vercel has built-in support for various frontend frameworks such as Next.js, Nuxt.js, and more, making it easy to deploy projects built with these technologies.

Analytics and Monitoring: Vercel provides analytics and monitoring tools to help developers track the performance of their applications and identify areas for improvement.

Overall, Vercel is designed to simplify the deployment and hosting process for developers, making it an attractive option for those who want a quick and efficient way to get their web projects online.",concept
50905,netlify,"Netlify is a cloud computing platform that provides a variety of services for web developers. It is specifically designed to simplify the process of deploying and managing modern web projects. Some key features and offerings of Netlify include:

Continuous Deployment: Netlify supports continuous deployment, allowing developers to connect their projects to a Git repository (such as GitHub or GitLab). Whenever changes are pushed to the repository, Netlify automatically builds and deploys the updated version of the application.

Serverless Functions: Netlify enables the creation and deployment of serverless functions. These functions are small, single-purpose pieces of code that can be executed in response to events, providing a scalable and cost-effective way to add backend functionality to a web application.

Global Content Delivery Network (CDN): Netlify uses a global CDN to distribute your website's assets to servers located around the world. This helps reduce latency and ensures fast loading times for users in different geographical locations.

Custom Domains: Netlify allows developers to easily configure custom domain names for their deployed projects, enabling the use of branded or personalized URLs.

Forms Handling: Netlify includes form handling capabilities, making it easy to collect and process form submissions on your website without the need for a separate backend server.

Prerendering and Asset Optimization: Netlify automatically optimizes and prerenders websites, improving performance and search engine optimization (SEO) by delivering prebuilt static pages.

Identity and Authentication: Netlify provides user authentication services, allowing developers to easily add secure user authentication and authorization to their applications.

Collaboration and Team Features: Netlify offers collaboration features, allowing multiple team members to work on a project concurrently. It supports role-based access control and facilitates collaborative development.

Monitoring and Analytics: Netlify provides insights into website performance, traffic, and other analytics to help developers monitor and optimize their projects.

Integration Ecosystem: Netlify integrates well with popular static site generators (such as Hugo, Jekyll, and Gatsby) and supports various frontend frameworks and languages.

Netlify is known for its developer-friendly approach, ease of use, and the ability to quickly deploy and scale web applications. It is particularly popular among developers working on static or Jamstack (JavaScript, APIs, and Markup) websites",concept
510,infrastructure provisioning,infrastructure provisioning,topic
51000,aws cdk,"The AWS Cloud Development Kit (AWS CDK) is an open-source software development framework used to provision cloud infrastructure resources in a safe, repeatable manner through AWS CloudFormation. AWS CDK offers the flexibility to write infrastructure as code in popular languages like JavaScript, TypeScript, Python, Java, C#, and Go.

Visit the following resources to learn more:

- [AWS CDK Website](https://aws.amazon.com/cdk/)
- [Official Documentation](https://docs.aws.amazon.com/cdk/index.html)
- [What is the AWS CDK?](https://docs.aws.amazon.com/cdk/v2/guide/home.html)
- [AWS SDK Getting Started Guide](https://docs.aws.amazon.com/cdk/v2/guide/getting_started.html)
- [AWS CDK Examples](https://github.com/aws-samples/aws-cdk-examples)
",concept
51001,cloudformation,"CloudFormation is the AWS service that helps to define collections of AWS resources. CloudFormation lets you model, provision, and manage AWS and third-party resources by treating infrastructure as code.

Visit the following resources to learn more:

- [AWS CloudFormation Website](https://aws.amazon.com/cloudformation/)
- [Official Documentation](https://docs.aws.amazon.com/cloudformation/index.html)
- [AWS CloudFormation Getting Started Guide](https://aws.amazon.com/cloudformation/getting-started/)
- [CloudFormation Sample Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-sample-templates.html)
",concept
51002,pulumi,"Pulumi is an open source Infrastructure as Code tool that can be written in TypeScript, JavaScript, Python, Go, .NET, Java, and YAML to model cloud infrastructure.

Visit the following resources to learn more:

- [Pulumi Website](https://www.pulumi.com/)
- [Official Documentation](https://www.pulumi.com/docs/)
- [Pulumi Getting Started Guide](https://www.pulumi.com/docs/get-started/)
",concept
51003,terraform,"Terraform is an extremely popular open source Infrastructure as Code (IaC) tool that can be used with many different cloud and service provider APIs. Terraform focuses on an immutable approach to infrastructure, with a terraform state file center to tracking the status of your real world infrastructure.

Visit the following resources to learn more:

- [Terraform Website](https://www.terraform.io/)
- [Terraform Documentation](https://www.terraform.io/docs)
- [Terraform Tutorials](https://learn.hashicorp.com/terraform)
- [Intro to Terraform Video](https://www.youtube.com/watch?v=h970ZBgKINg&ab_channel=HashiCorp)
- [Terraform CDK Website](https://www.terraform.io/cdktf)
- [What is the CDKTF?](https://www.terraform.io/cdktf/concepts/cdktf-architecture)
- [CDKTF Getting Started Guide](https://learn.hashicorp.com/tutorials/terraform/cdktf-install?in=terraform/cdktf)
- [CDKTF Examples](https://www.terraform.io/cdktf/examples)
- [How to Scale Your Terraform Infrastructure](https://thenewstack.io/how-to-scale-your-terraform-infrastructure/)
",concept
511,configuration management,configuration management,topic
51100,ansible,"Ansible is an open-source configuration management, application deployment and provisioning tool that uses its own declarative language in YAML. Ansible is agentless, meaning you only need remote connections via SSH or Windows Remote Management via Powershell in order to function

Visit the following resources to learn more:

- [Ansible Website](https://www.ansible.com/)
- [Official Documentation](https://docs.ansible.com/)
- [Ansible Getting Started Guide](https://www.ansible.com/resources/get-started)
- [Ansible Full Course for Beginners](https://www.youtube.com/watch?v=9Ua2b06oAr4)
",concept
51101,chef,"Emerging in 2009, [Chef](https://en.wikipedia.org/wiki/Progress_Chef) (now known as Progress Chef) is one of the earliest configuration management tools to gain popularity. Chef ""Recipes"" are written in Ruby, in a primarily [declarative](https://en.wikipedia.org/wiki/Declarative_programming) style.

Chef requires that a client is installed on a server being managed. This client polls a Chef-Server regularly, to determine what its configuration should be. Chef-Solo is also available, a version of Chef that allows provisioning of a single node by running chef locally.

A key tenet of Chef recipe design is the concept of [idempotence](https://en.wikipedia.org/wiki/Idempotence). All Chef recipes should be runnable multiple times and produce the same result - this is especially necessary in cases where the client/server model listed above is in use. This pattern of configuration management is highly influential for future declarative tools like Terraform and Cloud Formation.

Visit the following resources to learn more:

- [Chef Website](https://www.chef.io/products/chef-infra)
- [Chef Tutorial](https://www.tutorialspoint.com/chef/index.htm)
",concept
51102,puppet,"Puppet, an automated administrative engine for your Linux, Unix, and Windows systems, performs administrative tasks (such as adding users, installing packages, and updating server configurations) based on a centralized specification.

Visit the following resources to learn more:

- [Puppet Website](https://puppet.com/)
- [Official Documentation](https://puppet.com/docs)
- [Introduction to Puppet](https://puppet.com/docs/puppet/6/puppet_overview.html)
",concept
512,ci cd,ci cd,topic
51200,gitlab ci,"GitLab offers a CI/CD service that can be used as a SaaS offering or self-managed using your own resources. You can use GitLab CI with any GitLab hosted repository, or any BitBucket Cloud or GitHub repository in the GitLab Premium self-managed, GitLab Premium SaaS and higher tiers.

Visit the following resources to learn more:

- [GitLab Website](https://gitlab.com/)
- [GitLab Documentation](https://docs.gitlab.com/)
- [Get Started with GitLab CI](https://docs.gitlab.com/ee/ci/quick_start/)
- [Learn GitLab Tutorials](https://docs.gitlab.com/ee/tutorials/)
- [GitLab CI/CD Examples](https://docs.gitlab.com/ee/ci/examples/)
",concept
51201,jenkins,"Jenkins is an open-source CI/CD automation server. Jenkins is primarily used for building projects, running tests, static code analysis and deployments.

Visit the following resources to learn more:

- [Jenkins Website](https://www.jenkins.io/)
- [Official Jenkins Handbook](https://www.jenkins.io/doc/book/)
- [Jenkins Getting Started Guide](https://www.jenkins.io/doc/pipeline/tour/getting-started/)
",concept
51202,github actions,"Automate, customize, and execute your software development workflows right in your repository with GitHub Actions. You can discover, create, and share actions to perform any job you'd like, including CI/CD, and combine actions in a completely customized workflow.

Visit the following resources to learn more:

- [GitHub Actions Documentation](https://docs.github.com/en/actions)
- [Learn GitHub Actions](https://docs.github.com/en/actions/learn-github-actions)
- [GitHub Actions - Supercharge your GitHub Flow](https://youtu.be/cP0I9w2coGU)
- [Automate your Workflow with GitHub Actions](https://www.youtube.com/watch?v=nyKZTKQS_EQ)
",concept
51203,travis ci,"Travis CI is a CI/CD service that is primarily used for building and testing projects that are hosted on BitBucket and GitHub. Open source projects can utilize Travis CI for free.

Visit the following resources to learn more:

- [Travis CI Website](https://www.travis-ci.com/)
- [Travis CI Documentation](https://docs.travis-ci.com/)
- [Travis CI Tutorial](https://docs.travis-ci.com/user/tutorial/)
",concept
51205,teamcity,"TeamCity is a CI/CD service provided by JetBrains. TeamCity can be used as a SaaS offering or self-managed using your own resources.

Visit the following resources to learn more:

- [TeamCity Website](https://www.jetbrains.com/teamcity/)
- [Official Documentation](https://www.jetbrains.com/help/teamcity/teamcity-documentation.html)
- [TeamCity Tutorials](https://www.jetbrains.com/teamcity/tutorials/)
- [TeamCity Learning Portal](https://www.jetbrains.com/teamcity/learn/)
",concept
51206,azure devops services,"Azure DevOps is developed by Microsoft as a full scale application lifecycle management and CI/CD service. Azure DevOps provides developer services for allowing teams to plan work, collaborate on code development, and build and deploy applications.

Visit the following resources to learn more:

- [Azure DevOps Website](https://azure.microsoft.com/en-us/services/devops/#overview)
- [Official Documentation](https://docs.microsoft.com/en-us/azure/devops/?view=azure-devops&viewFallbackFrom=vsts)
- [Azure DevOps Getting Started Guide](https://docs.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates?view=azure-devops)
",concept
51207,circle ci,"CircleCI is a CI/CD service that can be integrated with GitHub, BitBucket and GitLab repositories. The service that can be used as a SaaS offering or self-managed using your own resources.

Visit the following resources to learn more:

- [CircleCI Website](https://circleci.com/)
- [CircleCI Documentation](https://circleci.com/docs)
- [Configuration Tutorial](https://circleci.com/docs/config-intro)
",concept
51208,drone,"Drone is a CI/CD service offering by [Harness](https://harness.io/). Each build runs on an isolated Docker container, and Drone integrates with many popular source code management repositories like GitHub, BitBucket and GitLab

Visit the following resources to learn more:

- [Drone Website](https://www.drone.io/)
- [Official Documentation](https://docs.drone.io/)
- [Drone Getting Started Guide](https://docs.drone.io/server/overview/)
",concept
513,secret management,secret management,topic
51300,vault,"Vault is a tool for securely storing and managing secrets, such as passwords, API keys, and other sensitive information. It is developed and maintained by Hashicorp and is available as open-source software.

Vault is designed to be highly scalable and flexible, with a wide range of features for managing secrets, including:

- Encryption: Vault uses encryption algorithms and protocols, such as AES and RSA, to securely store secrets.
- Access controls: Vault supports role-based access controls and multi-factor authentication to ensure that only authorized users or systems can access secrets.
- Secret rotation: Vault supports automatic secret rotation, allowing secrets to be regularly rotated to reduce the risk of unauthorized access.
- Auditing: Vault provides auditing capabilities, allowing administrators to track and monitor access to secrets.

Vault is commonly used in DevOps environments to securely store and manage secrets, and it is often used in conjunction with other tools, such as Kubernetes and Helm, to automate the deployment and management of cloud-native applications.

Visit the following resources to learn more:

- [Vault - Official Website](https://www.vaultproject.io/)
",concept
51301,sops,"SOPS (Secrets OPerationS) is an open-source tool for securely storing and managing secrets, such as passwords, API keys, and other sensitive information. It is developed and maintained by Mozilla and is available as a command-line tool and as a library for integration into other applications.

SOPS is designed to be easy to use and highly secure, with a range of features for managing secrets, including:

- Encryption: SOPS uses encryption algorithms and protocols, such as AES and RSA, to securely store secrets.
- Access controls: SOPS supports role-based access controls and multi-factor authentication to ensure that only authorized users or systems can access secrets.
- Secret rotation: SOPS supports automatic secret rotation, allowing secrets to be regularly rotated to reduce the risk of unauthorized access.
- Auditing: SOPS provides auditing capabilities, allowing administrators to track and monitor access to secrets.

SOPS is commonly used in DevOps environments to securely store and manage secrets, and it is often used in conjunction with other tools, such as Kubernetes and Helm, to automate the deployment and management of cloud-native applications.

Visit the following resources to learn more:

- [Mozilla SOPS - Official Website](https://github.com/mozilla/sops)
",concept
51302,sealed secrets,"Sealed Secrets is a tool for securely storing and managing secrets in a Kubernetes environment. It is developed and maintained by Bitnami and is available as open-source software.

In a Sealed Secrets workflow, secrets are encrypted using a public key and stored as sealed secrets in a Git repository. The sealed secrets can then be deployed to a Kubernetes cluster, where they are decrypted using a private key and made available to the applications and infrastructure that need them.

Sealed Secrets is designed to be highly secure and easy to use, with a range of features for managing secrets, including:

- Encryption: Sealed Secrets uses encryption algorithms and protocols, such as RSA, to securely store secrets.
- Access controls: Sealed Secrets supports role-based access controls and multi-factor authentication to ensure that only authorized users or systems can access secrets.
- Secret rotation: Sealed Secrets supports automatic secret rotation, allowing secrets to be regularly rotated to reduce the risk of unauthorized access.
- Auditing: Sealed Secrets provides auditing capabilities, allowing administrators to track and monitor access to secrets.

Sealed Secrets is commonly used in Kubernetes environments to securely store and manage secrets, and it is often used in conjunction with other tools, such as Helm, to automate the deployment and management of cloud-native applications.

Visit the following resources to learn more:

- [Sealed Secrets - Bitnami](https://github.com/bitnami-labs/sealed-secrets)
",concept
51303,cloud specific tools,"There are several cloud-specific tools for securely storing and managing secrets, such as:

- AWS Secrets Manager: AWS Secrets Manager is a service provided by Amazon Web Services (AWS) for securely storing and managing secrets. It provides features such as automatic secret rotation and integration with other AWS services.
- Google Cloud Secret Manager: Google Cloud Secret Manager is a service provided by Google Cloud for securely storing and managing secrets. It provides features such as automatic secret rotation and integration with other Google Cloud services.
- Azure Key Vault: Azure Key Vault is a service provided by Microsoft Azure for securely storing and managing secrets. It provides features such as automatic secret rotation and integration with other Azure services.

These cloud-specific tools are designed to be used in conjunction with cloud-based applications and infrastructure and are typically integrated with other cloud services, such as container orchestration platforms and continuous delivery pipelines.

Visit the following resources to learn more:

- [AWS Secrets Manager - Amazon Web Services](https://aws.amazon.com/secrets-manager/)
- [Google Cloud Secret Manager - Google Cloud](https://cloud.google.com/secret-manager)
- [Azure Key Vault - Microsoft Azure](https://azure.microsoft.com/en-us/services/key-vault/)
",concept
514,infrastructure monitoring,infrastructure monitoring,topic
51400,prometheus,"Prometheus is a free software application used for event monitoring and alerting. It records real-time metrics in a time series database built using a HTTP pull model, with flexible queries and real-time alerting.

Visit the following resources to learn more:

- [Prometheus Website](https://prometheus.io/)
- [Official Documentation](https://prometheus.io/docs/introduction/overview/)
- [Getting Started with Prometheus](https://prometheus.io/docs/tutorials/getting_started/)
",concept
51401,datadog,"Datadog is a monitoring and analytics platform for large-scale applications. It encompasses infrastructure monitoring, application performance monitoring, log management, and user-experience monitoring. Datadog aggregates data across your entire stack with 400+ integrations for troubleshooting, alerting, and graphing.

Visit the following resources to learn more:

- [Datadog Website](https://www.datadoghq.com/)
- [Official Documentation](https://docs.datadoghq.com/)
",concept
51402,grafana,"Grafana is the open-source platform for monitoring and observability. It allows you to query, visualize, alert on and understand your metrics no matter where they are stored.

Visit the following resources to learn more:

- [Grafana Website](https://grafana.com/)
- [Grafana Official Documentation](https://grafana.com/docs/)
- [Grafana Community](https://community.grafana.com/)
- [Grafana Webinars and Videos](https://grafana.com/videos/)
",concept
51403,zabbix,"Zabbix is an enterprise-class open source monitoring solution for network monitoring and application monitoring of millions of metrics.

Visit the following resources to learn more:

- [Zabbix Website](https://www.zabbix.com/)
- [Official Documentation](https://www.zabbix.com/manuals)
- [Zabbix Roadmap](https://www.zabbix.com/roadmap)
",concept
515,application monitoring,application monitoring,topic
51500,jaeger,"Jaeger is an open source, end-to-end distributed tracing system that enables us to monitor and troubleshoot transactions in complex distributed systems.

Visit the following resources to learn more:

- [Jaeger Website](https://www.jaegertracing.io/)
- [Official Documentation](https://www.jaegertracing.io/docs/1.37/)
",concept
51501,new relic,"New Relic is where dev, ops, security and business teams solve software–performance problems with data.

Visit the following resources to learn more:

- [New Relic Website](https://newrelic.com/)
- [Official Documentation](https://docs.newrelic.com/)
- [New Relic Developer Hub](https://developer.newrelic.com/)
",concept
51502,datadog,"Datadog is a monitoring and analytics platform for large-scale applications. It encompasses infrastructure monitoring, application performance monitoring, log management, and user-experience monitoring. Datadog aggregates data across your entire stack with 400+ integrations for troubleshooting, alerting, and graphing.

Visit the following resources to learn more:

- [Datadog Website](https://www.datadoghq.com/)
- [Official Documentation](https://docs.datadoghq.com/)
",concept
51504,open telemetry,"OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) to help you analyze your software’s performance and behavior.

Visit the following resources to learn more:

- [OpenTelemetry Website](https://opentelemetry.io/)
- [Official Documentation](https://opentelemetry.io/docs/)
",concept
51505,app dynamics,"AppDynamics is a full-stack application performance management (APM) and IT operations analytics (ITOA) company based in San Francisco. The company focuses on managing the performance and availability of applications across cloud computing environments, IT infrastructure, network architecture, digital user experience design, application security threat detection, observability, and data centers.

Visit the following resources to learn more:

- [AppDynamics Website](https://www.appdynamics.com/)
- [Official Resources](https://www.appdynamics.com/resources)
",concept
516,logs management,logs management,topic
51600,elastic stack,"Elastic Stack is a group of open source products comprised of Elasticsearch, Kibana, Beats, and Logstash and more that help store, search, analyze, and visualize data from various source, in different format, in real-time.

- `Elastic Search` - Search and analytics engine
- `Logstash/fluentd` - Data processing pipeline
- `Kibana` - Dashboard to visualize data

Visit the following resources to learn more:

- [Elastic Stack Website](https://www.elastic.co/elastic-stack/)
- [Official Docs](https://www.elastic.co/guide/index.html)
- [Elastic Stack features](https://www.elastic.co/elastic-stack/features)
- [Logstash vs Fluentd](https://logz.io/blog/fluentd-logstash/)
",concept
51601,loki,"Loki is a horizontally scalable, highly available, multi-tenant log aggregation system inspired by Prometheus. It is designed to be very cost-effective and easy to operate. It does not index the contents of the logs, but rather a set of labels for each log stream.

Visit the following resources to learn more:

- [Loki Website](https://grafana.com/oss/loki/)
- [Official Documentation](https://grafana.com/docs/loki/latest/?pg=oss-loki&plcmt=quick-links)
",concept
51602,graylog,"Graylog is a leading centralized log management solution for capturing, storing, and enabling real-time analysis of terabytes of machine data.

Visit the following resources to learn more:

- [Graylog Website](https://www.graylog.org/)
- [Official Documentation](https://docs.graylog.org/)
- [Product Videos](https://www.graylog.org/resources-videos)
",concept
51603,splunk,"The Splunk platform removes the barriers between data and action, empowering observability, IT and security teams to ensure their organizations are secure, resilient and innovative.

Visit the following resources to learn more:

- [Splunk Website](https://www.splunk.com/)
- [Official Documentation](https://docs.splunk.com/Documentation)
- [Splunk Videos](https://www.splunk.com/en_us/resources/videos.html)
",concept
51604,papertrail,"Papertrail is a leading centralized log management solution for capturing, storing, and enabling real-time analysis of terabytes of machine data.

Visit the following resources to learn more:

- [Papertrail Website](https://www.papertrail.com/)
- [Official Guides](https://www.papertrail.com/solution/guides/)
- [Official Blog](https://www.papertrail.com/blog/)
",concept
517,containers,containers,topic
51700,docker swarm,"A Docker Swarm is a group of either physical or virtual machines that are running the Docker application and that have been configured to join together in a cluster. Once a group of machines have been clustered together, you can still run the Docker commands that you're used to, but they will now be carried out by the machines in your cluster. The activities of the cluster are controlled by a swarm manager, and machines that have joined the cluster are referred to as nodes.

Visit the following resources to learn more:

- [Official Website](https://www.docker.com/)
- [Docker Swarm Documentation](https://docs.docker.com/engine/swarm/)
- [Docker Swarm Tutorial for Beginners](https://www.youtube.com/watch?v=Tm0Q5zr3FL4)
- [Tutorial: Manage Docker Swarm with Portainer](https://thenewstack.io/tutorial-manage-docker-swarm-with-portainer/)
- [Tutorial: Create a Docker Swarm with Persistent Storage Using GlusterFS](https://thenewstack.io/tutorial-create-a-docker-swarm-with-persistent-storage-using-glusterfs/)
",concept
51701,gke eks aks,"## GKE - Google Kubernetes Engine

GKE is a managed Kubernetes service that lets you deploy, manage, and scale containerized applications on Google Cloud.

## EKS - Amazon Elastic Kubernetes Service

Amazon Elastic Kubernetes Service (Amazon EKS) is a fully managed Kubernetes service from AWS.

## AKS - Azure Kubernetes Service

Azure Kubernetes Service (AKS) manages your hosted Kubernetes environment, making it quick and easy to deploy and manage containerized applications without container orchestration expertise.

",concept
51702,ecs fargate,"ECS is a container orchestration service that allows you to run Docker containers on a cluster of EC2 instances. ECS is a good choice if you want to run Docker containers on EC2 instances and have full control over the underlying infrastructure.

Fargate is a serverless container orchestration service that allows you to run Docker containers without having to manage servers, clusters, or any other infrastructure. Fargate is a good choice if you want to run Docker containers without having to manage servers or clusters.
",concept
51703,docker,"Docker is a platform for working with containerized applications. Among its features are a daemon and client for managing and interacting with containers, registries for storing images, and a desktop application to package all these features together.

Visit the following resources to learn more:

- [Docker Documentation](https://docs.docker.com/)
- [Docker Tutorial](https://www.youtube.com/watch?v=RqTEHSBrYFw)
- [Docker simplified in 55 seconds](https://youtu.be/vP_4DlOH1G4)
",concept
51704,lxc,"LXC is a well-known Linux container runtime that consists of tools, templates, and library and language bindings. It's pretty low level, very flexible and covers just about every containment feature supported by the upstream kernel.

Visit the following resources to learn more:

- [LXC Website](https://linuxcontainers.org/)
- [LXC Documentation](https://linuxcontainers.org/lxc/documentation/)
- [Getting started with LXC containers](https://www.youtube.com/watch?v=CWmkSj_B-wo)
",concept
518,artifcats,artifcats,topic
51800,artifactory,- [Artifactory Website](https://jfrog.com/artifactory/),concept
51801,nexus,"- [Repository Management Basics](https://learn.sonatype.com/courses/nxrm-admin-100/)
- [Nexus Installation and Configuration](https://learn.sonatype.com/courses/nxrm-config-100/)
- [Nexus Repository Security Essentials](https://learn.sonatype.com/courses/nxrm-sec-100/)
- [Nexus Best Practices](https://help.sonatype.com/repomanager3/nexus-repository-best-practices)",concept
51802,cloud smith,"Cloudsmith is a cloud-native, hosted, package management service with deep focus on providing the best universal support for all native package and container technologies.",concept
519,gitops,gitops,topic
51900,argo cd,"Argo CD is a continuous delivery tool for Kubernetes that is based on the GitOps methodology. It is used to automate the deployment and management of cloud-native applications by continuously synchronizing the desired application state with the actual application state in the production environment.

In an Argo CD workflow, changes to the application are made by committing code or configuration changes to a Git repository. Argo CD monitors the repository and automatically deploys the changes to the production environment using a continuous delivery pipeline. The pipeline is triggered by changes to the Git repository and is responsible for building, testing, and deploying the changes to the production environment.

Argo CD is designed to be a simple and efficient way to manage cloud-native applications, as it allows developers to make changes to the system using familiar tools and processes and it provides a clear and auditable history of all changes to the system. It is often used in conjunction with tools such as Helm to automate the deployment and management of cloud-native applications.

Visit the following resources to learn more:

- [Argo CD - Argo Project](https://argoproj.github.io/docs/argo-cd/)
- [ArgoCD Tutorial for Beginners](https://www.youtube.com/watch?v=MeU5_k9ssrs)
",concept
51901,flux cd,"Flux CD is a continuous delivery tool for Kubernetes that is based on the GitOps methodology. It is used to automate the deployment and management of cloud-native applications by continuously synchronizing the desired application state with the actual application state in the production environment.

In a Flux CD workflow, changes to the application are made by committing code or configuration changes to a Git repository. Flux CD monitors the repository and automatically deploys the changes to the production environment using a continuous delivery pipeline. The pipeline is triggered by changes to the Git repository and is responsible for building, testing, and deploying the changes to the production environment.

Flux CD is designed to be a simple and efficient way to manage cloud-native applications, as it allows developers to make changes to the system using familiar tools and processes and it provides a clear and auditable history of all changes to the system. It is often used in conjunction with tools such as Helm to automate the deployment and management of cloud-native applications.

Visit the following resources to learn more:

- [Flux CD Docs](https://docs.fluxcd.io/)
",concept
520,service mesh,service mesh,topic
52000,istio,"Istio is an open source service mesh platform that provides a way to control how microservices share data with one another. It includes APIs that let Istio integrate into any logging platform, telemetry, or policy system. Istio is designed to run in a variety of environments: on-premise, cloud-hosted, in Kubernetes containers, in services running on virtual machines, and more.

Visit the following resources to learn more:

- [What is Istio?](https://www.redhat.com/en/topics/microservices/what-is-istio)
",concept
52001,consul,"Consul is a service mesh solution providing a full featured control plane with service discovery, configuration, and segmentation functionality. Each of these features can be used individually as needed, or they can be used together to build a full service mesh. Consul requires a data plane and supports both a proxy and native integration model. Consul ships with a simple built-in proxy so that everything works out of the box, but also supports 3rd party proxy integrations such as Envoy.

Visit the following resources to learn more:

- [What is Consul?](https://www.consul.io/docs/intro)
",concept
52002,linkerd,"Linkerd is an open source service mesh designed to be deployed into a variety of container schedulers and frameworks such as Kubernetes. It became the original “service mesh” when its creator Buoyant first coined the term in 2016. Like Twitter’s Finagle, on which it was based, Linkerd was first written in Scala and designed to be deployed on a per-host basis. Linkerd is one of the first products to be associated with the term service mesh and supports platforms such as Docker and Kubernetes.

Visit the following resources to learn more:

- [Linkerd Website](https://linkerd.io/)
- [Linkerd Documentation](https://linkerd.io/2.11/overview/)
- [What is Linkerd?](https://www.techtarget.com/searchitoperations/definition/Linkerd)
",concept
52003,envoy,"Originally created at Lyft, Envoy is a high-performance data plane designed for service mesh architectures. Lyft open sourced it and donated it to the CNCF, where it is now one of the CNCF’s graduated open source projects. Envoy is a self contained process that is designed to run alongside every application server. All of the Envoys form a transparent communication mesh in which each application sends and receives messages to and from localhost and is unaware of the network topology.

Visit the following resources to learn more:

- [Envoy Website](https://www.envoyproxy.io/)
- [Envoy Documentation](https://www.envoyproxy.io/docs/envoy/latest/start/start)
- [What is Envoy?](https://www.envoyproxy.io/docs/envoy/latest/intro/what_is_envoy)
",concept
521,cloud design patterns,cloud design patterns,topic
52100,availability,"Availability is the percentage of time that a system is functional and working as intended, generally referred to as uptime. Availability can be affected by hardware or software errors, infrastructure problems, malicious attacks, and system load. Many cloud providers typically offer their users a service level agreement (SLA) that specifies the exact percentages of promised uptime/downtime. Availability is related to reliability in this sense. For example, a company might promise 99.99% uptime for their services.

To achieve high levels of uptime, it is important to eliminate single points of failure so that a single device failure does not disrupt the entire service. High availability in the cloud is often achieved by creating clusters. Clusters are groups of devices (such as servers) that all have access to the same shared storage and function as one single server to provide uninterrupted availability. This way, if one server goes down, the others are able to pick up the load until it comes back online. Clusters can range from two servers to even multiple buildings of servers.

Visit the following resources to learn more:

- [How High Availability Works in the Cloud](https://codster.io/en/blog/high-availability-in-the-cloud/)
- [Techniques for Achieving High Availability](https://www.sqlservercentral.com/articles/cloud-computing-basics-achieving-high-availability-2)
",concept
52101,data management,"Data management is the key element of cloud applications, and influences most of the quality attributes. Data is typically hosted in different locations and across multiple servers for reasons such as performance, scalability or availability, and this can present a range of challenges. For example, data consistency must be maintained, and data will typically need to be synchronized across different locations.

Additionally data should be protected at rest, in transit, and via authorized access mechanisms to maintain security assurances of confidentiality, integrity, and availability. Refer to the Azure Security Benchmark Data Protection Control for more information.

Visit the following resources to learn more:

- [Data management patterns](https://docs.microsoft.com/en-us/azure/architecture/patterns/category/data-management)
",concept
52102,design and implementation,"Good design encompasses factors such as consistency and coherence in component design and deployment, maintainability to simplify administration and development, and reusability to allow components and subsystems to be used in other applications and in other scenarios. Decisions made during the design and implementation phase have a huge impact on the quality and the total cost of ownership of cloud hosted applications and services.

Visit the following resources to learn more:

- [Design and implementation patterns](https://docs.microsoft.com/en-us/azure/architecture/patterns/category/design-implementation)
",concept
52103,management and monitoring,"DevOps management and monitoring entails overseeing the entire development process from planning, development, integration and testing, deployment, and operations. It involves a complete and real-time view of the status of applications, services, and infrastructure in the production environment. Features such as real-time streaming, historical replay, and visualizations are critical components of application and service monitoring.

Visit the following resources to learn more:

- [Management and Monitoring Get Started Guide](https://www.atlassian.com/devops/devops-tools/devops-monitoring)
",concept
600,internet,internet,topic
60000,how does the internet work,"The Internet is a global network of computers connected to each other which communicate through a standardized set of protocols.

Visit the following resources to learn more:

- [How does the Internet Work?](https://cs.fyi/guide/how-does-internet-work)
- [How Does the Internet Work? MDN Docs](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/How_does_the_Internet_work)
- [Introduction to Internet](/guides/what-is-internet)
- [How does the Internet work?](https://www.youtube.com/watch?v=TNQsmPf24go)
- [How the Internet Works in 5 Minutes](https://www.youtube.com/watch?v=7_LPdttKXPc)
",concept
60001,what is http,"HTTP is the `TCP/IP` based application layer communication protocol which standardizes how the client and server communicate with each other. HTTP follows a classical ""Client-Server model"" with a client opening a connection request, then waiting until it receives a response. HTTP is a stateless protocol, that means that the server does not keep any data (state) between two requests.

Visit the following resources to learn more:

- [Everything you need to know about HTTP](https://cs.fyi/guide/http-in-depth)
- [What is HTTP?](https://www.cloudflare.com/en-gb/learning/ddos/glossary/hypertext-transfer-protocol-http/)
- [How HTTPS Works ...in a comic!](https://howhttps.works)
- [An overview of HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview)
- [HTTP/3 From A To Z: Core Concepts](https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/)
- [HTTP/3 Is Now a Standard: Why Use It and How to Get Started](https://thenewstack.io/http-3-is-now-a-standard-why-use-it-and-how-to-get-started/)
- [HTTP Crash Course & Exploration](https://www.youtube.com/watch?v=iYM2zFP3Zn0)
",concept
60002,browsers and how they work,"A web browser is a software application that enables a user to access and display web pages or other online content through its graphical user interface.

Visit the following resources to learn more:

- [How Browsers Work](https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/)
- [Role of Rendering Engine in Browsers](https://www.browserstack.com/guide/browser-rendering-engine)
- [Populating the Page: How Browsers Work](https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work)
- [How Do Web Browsers Work?](https://www.youtube.com/watch?v=WjDrMKZWCt0)
",concept
60003,dns and how it works,"The Domain Name System (DNS) is the phonebook of the Internet. Humans access information online through domain names, like nytimes.com or espn.com. Web browsers interact through Internet Protocol (IP) addresses. DNS translates domain names to IP addresses so browsers can load Internet resources.

Visit the following resources to learn more:

- [What is DNS?](https://www.cloudflare.com/en-gb/learning/dns/what-is-dns/)
- [Mess with DNS - DNS Playground](https://messwithdns.net/)
- [How DNS works (comic)](https://howdns.works/)
- [DNS and How does it Work?](https://www.youtube.com/watch?v=Wj0od2ag5sk)
- [DNS Records](https://www.youtube.com/watch?v=7lxgpKh_fRY)
- [When to add glue records to DNS settings](https://www.youtube.com/watch?v=e48AyJOA9W8)
- [DNS Records for Newbies - How To Manage Website Records](https://www.youtube.com/watch?v=YV5tkQYcvfg)
",concept
60004,what is domain name,"A domain name is a unique, easy-to-remember address used to access websites, such as ‘google.com’, and ‘facebook.com’. Users can connect to websites using domain names thanks to the Domain Name System (DNS).

Visit the following resources to learn more:

- [What is a Domain Name?](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_domain_name)
- [What is a Domain Name? | Domain name vs. URL](https://www.cloudflare.com/en-gb/learning/dns/glossary/what-is-a-domain-name/)
- [A Beginners Guide to How Domain Names Work](https://www.youtube.com/watch?v=Y4cRx19nhJk)
",concept
60005,what is hosting,"Web hosting is an online service that allows you to publish your website files onto the internet. So, anyone who has access to the internet has access to your website.

Visit the following resources to learn more:

- [What Is Web Hosting? Explained](https://www.youtube.com/watch?v=htbY9-yggB0)
- [Different Types of Web Hosting Explained](https://www.youtube.com/watch?v=AXVZYzw8geg)
- [Where to Host a Fullstack Project on a Budget](https://www.youtube.com/watch?v=Kx_1NYYJS7Q)
",concept
601,html,html,topic
60100,learn the basics,"HTML stands for HyperText Markup Language. It is used on the frontend and gives the structure to the webpage which you can style using CSS and make interactive using JavaScript.

Visit the following resources to learn more:

- [W3Schools: Learn HTML](https://www.w3schools.com/html/html_intro.asp)
- [MDN Docs: Getting Started with HTML ](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started)
- [web.dev: Learn HTML](https://web.dev/learn/html)
- [HTML Full Course - Build a Website Tutorial](https://www.youtube.com/watch?v=pQN-pnXPaVg)
- [HTML Tutorial for Beginners: HTML Crash Course](https://www.youtube.com/watch?v=qz0aGYrrlhU)
- [HTML Cheatsheet](https://htmlcheatsheet.com)
- [Scaler: HTML](https://www.scaler.com/topics/html)
",concept
60101,writing semantic html,"Semantic element clearly describes its meaning to both the browser and the developer. In HTML, semantic element are the type of elements that can be used to define different parts of a web page such as `<form>`, `<table>`, `<article>`, `<header>`, `<footer>`, etc.

Visit the following resources to learn more:

- [Guide to Writing Semantic HTML](https://cs.fyi/guide/writing-semantic-html)
- [W3Schools: Semantic HTML](https://www.w3schools.com/html/html5_semantic_elements.asp)
- [How To Write Semantic HTML](https://hackernoon.com/how-to-write-semantic-html-dkq3ulo)
- [HTML Best Practices – How to Build a Better HTML-Based Website](https://www.freecodecamp.org/news/html-best-practices/)
- [Semantic HTML: What It Is and How It Improves Your Site](https://blog.hubspot.com/website/semantic-html)
- [Semantic Markup](https://html.com/semantic-markup)
- [Semantic HTML - web.dev](https://web.dev/learn/html/semantic-html/)",concept
60102,forms and validations,"Before submitting data to the server, it is important to ensure all required form controls are filled out, in the correct format. This is called client-side form validation, and helps ensure data submitted matches the requirements set forth in the various form controls.

Visit the following resources to learn more:

- [MDN Web Docs: Client-side form validation](https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation)
- [Learn Forms by web.dev](https://web.dev/learn/forms/)
- [W3Schools: JavaScript Form Validation](https://www.w3schools.com/js/js_validation.asp)
",concept
60103,conventions and best practices,"Learn to follow the best practices for writing maintainable and scalable HTML documents.

Visit the following resources to learn more:

- [HTML Best Practices](https://github.com/hail2u/html-best-practices)
",concept
60104,accessibility,"Web accessibility means that websites, tools, and technologies are designed and developed in such a way that people with disabilities can use them easily.

Visit the following resources to learn more:

- [Developing for Web Accessibility by W3C WAI](https://www.w3.org/WAI/tips/developing/)
- [Accessibility Tutorial](https://www.w3schools.com/accessibility/index.php)
- [A Complete Guide To Accessible Front-End Components](https://www.smashingmagazine.com/2021/03/complete-guide-accessible-front-end-components/)
- [Complete Playlist on Accessibility](https://youtube.com/playlist?list=PLNYkxOF6rcICWx0C9LVWWVqvHlYJyqw7g)
- [MDN Accessibility](https://developer.mozilla.org/en-US/docs/Web/Accessibility)
- [Accessibility for Developers by Google](https://web.dev/accessibility)
- [Web Accessibility by Udacity](https://www.udacity.com/course/web-accessibility--ud891)
- [Accessibility as an Essential Part of the Inclusive Developer Experience](https://thenewstack.io/accessibility-as-an-essential-part-of-the-inclusive-developer-experience/)
",concept
60105,seo basics,"SEO or Search Engine Optimization is the technique used to optimize your website for better rankings on search engines such as Google, Bing etc.

Visit the following resources to learn more:

- [Google Search Central — SEO Docs](https://developers.google.com/search/docs)
- [SEO Guide](https://github.com/seo/guide)
- [8 Must-Know SEO Best Practices For Developers](https://neilpatel.com/blog/seo-developers/)
- [SEO for Developers](https://medium.com/welldone-software/seo-for-developers-a-quick-overview-5b5b7ce34679)
- [Complete SEO Course for Beginners](https://www.youtube.com/watch?v=xsVTqzratPs)
- [SEO Expert Course](https://www.youtube.com/watch?v=SnxeXZpZkI0)
- [Learning SEO](https://learningseo.io/)",concept
602,css,css,topic
60200,learn the basics,"CSS or Cascading Style Sheets is the language used to style the frontend of any website. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.

Visit the following resources to learn more:

- [W3Schools — Learn CSS](https://www.w3schools.com/css/)
- [web.dev — Learn CSS](https://web.dev/learn/css/)
- [freeCodeCamp — Responsive Web Design](https://www.freecodecamp.org/learn/responsive-web-design/)
- [Learn to Code HTML & CSS](https://learn.shayhowe.com/html-css/building-your-first-web-page/)
- [CSS Crash Course For Absolute Beginners](https://www.youtube.com/watch?v=yfoY53QXEnI)
- [HTML and CSS Tutorial](https://www.youtube.com/watch?v=D-h8L5hgW-w)
- [CSS Masterclass - Tutorial & Course for Beginners](https://www.youtube.com/watch?v=FqmB-Zj2-PA)
",concept
60201,making layouts,"Float, grid, flexbox, positioning, display and box model are some of the key topics that are used for making layouts. Use the resources below to learn about these topics:

Visit the following resources to learn more:

- [Learn and Practice Flexbox](https://flexboxfroggy.com/)
- [Game for learning CSS Grid](https://cssgridgarden.com/)
- [All about Floats](https://css-tricks.com/all-about-floats/)
- [Positioning Types: How Do They Differ?](https://css-tricks.com/absolute-relative-fixed-positioining-how-do-they-differ/)
- [The Box Model](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model)
- [The CSS Display Property](https://www.freecodecamp.org/news/the-css-display-property-display-none-display-table-inline-block-and-more/)
- [A Complete Guide to Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox)
- [A Complete Guide to Grid](https://css-tricks.com/snippets/css/complete-guide-grid)
- [Learn CSS Grid - Course](https://cssgrid.io/)
- [Learn CSS Grid for free](https://scrimba.com/learn/cssgrid)
- [Get on the Grid at Last with the CSS Grid Layout Module](https://thenewstack.io/get-grid-last-css-grid-template-markup/)
",concept
60202,responsive design and media queries,"Responsive Web Designing is the technique to make your webpages look good on all screen sizes. There are certain techniques used to achieve that e.g. CSS media queries, percentage widths, min or max widths heights etc.

Visit the following resources to learn more:

- [Responsive Web Design](https://www.w3schools.com/css/css_rwd_intro.asp)
- [Learn Responsive Design](https://web.dev/learn/design/)
- [The Beginner’s Guide to Responsive Web Design](https://kinsta.com/blog/responsive-web-design/)
- [The guide to responsive web design in 2022](https://webflow.com/blog/responsive-web-design)
- [5 simple tips to making responsive layouts the easy way](https://www.youtube.com/watch?v=VQraviuwbzU)
- [Introduction To Responsive Web Design](https://www.youtube.com/watch?v=srvUrASNj0s)",concept
603,javascript,javascript,topic
60300,syntax and basic constructs,"JavaScript allows you to add interactivity to your pages. Common examples that you may have seen on the websites are sliders, click interactions, popups and so on.

Visit the following resources to learn more:

- [W3Schools – JavaScript Tutorial](https://www.w3schools.com/js/)
- [The Modern JavaScript Tutorial](https://javascript.info/)
- [JavaScript Crash Course for Beginners](https://youtu.be/hdI2bqOjy3c?t=2)
- [Build a Netflix Landing Page Clone with HTML, CSS & JS](https://youtu.be/P7t13SGytRk?t=22)
",concept
60301,learn dom manipulation,"The Document Object Model (DOM) is a programming interface built for HTML and XML documents. It represents the page that allows programs and scripts to dynamically update the document structure, content, and style. With DOM, we can easily access and manipulate tags, IDs, classes, attributes, etc.

Visit the following resources to learn more:

- [DOM Tree](https://javascript.info/dom-nodes)
- [GeeksForGeeks - DOM (Document Object Model)](https://www.geeksforgeeks.org/dom-document-object-model/)
- [What is the DOM?](https://www.freecodecamp.org/news/what-is-the-dom-document-object-model-meaning-in-javascript/)
- [Eloquent JavaScript, 3rd Edition: The Document Object Model](https://eloquentjavascript.net/14_dom.html)
- [JavaScript HTML DOM](https://www.w3schools.com/js/js_htmldom.asp)
- [JavaScript DOM](https://www.javascripttutorial.net/javascript-dom/)
- [Learn the HTML DOM with Exercises - CodeGuage](https://www.codeguage.com/courses/js/html-dom-introduction)
- [What is DOM, Shadow DOM and Virtual DOM?](https://www.youtube.com/watch?v=7Tok22qxPzQ)
- [JavaScript DOM Crash Course](https://www.youtube.com/watch?v=0ik6X4DJKCc)
",concept
60302,learn fetch api ajax xhr,"Ajax is the technique that lets us send and receive the data asynchronously from the servers e.g. updating the user profile or asynchronously fetching the list of searched products without reloading the page.

Visit the following resources to learn more:

- [Fetch API MDN Docs](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)
- [A Simple Guide to JavaScript Fetch API](https://www.javascripttutorial.net/javascript-fetch-api/)
- [Introduction to Fetch](https://web.dev/introduction-to-fetch/)
- [JavaScript Fetch API](https://www.youtube.com/watch?v=-ZI0ea5O2oA)
",concept
60303,es6 and modular javascript,"ECMAScript 2015 or ES2015 is a significant update to the JavaScript programming language. It is the first major update to the language since ES5 which was standardized in 2009. You should look at the features introduced with ES6 and onwards.

Visit the following resources to learn more:

- [ES6 Tutorial](https://www.javascripttutorial.net/es6/)
- [W3Schools: Javascript ES6](https://www.w3schools.com/js/js_es6.asp)
- [Learn Modern JavaScript in 1 Hour](https://www.youtube.com/watch?v=NCwa_xi0Uuc)
- [JavaScript ES6, ES7, ES8](https://www.youtube.com/watch?v=nZ1DMMsyVyI)
- [Build 15 JavaScript Projects - Vanilla JavaScript](https://www.youtube.com/watch?v=3PHXvlpOkf4)
- [Modern JavaScript ES6, ES7 & ES8](https://codeloop.org/learn-modern-javascript-es6-es7-es8)
- [Easy ES6 Goodies for Busy JavaScript Developers](https://thenewstack.io/fat-arrow-points-way-easy-es6-goodies-busy-js-devs/)
",concept
60304,concepts,"Learn and understand the concepts such as Hoisting, Event Bubbling, Scope, Prototype, Shadow DOM and strict.

Visit the following resources to learn more:

- [JavaScript Hoisting](https://developer.mozilla.org/en-US/docs/Glossary/Hoisting)
- [Event Bubbling and Capturing](https://javascript.info/bubbling-and-capturing)
- [Scope in JavaScript](https://developer.mozilla.org/en-US/docs/Glossary/Scope)
- [Var, Let and Const — Whats the difference?](https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/)
- [Inheritance and Prototype Chain](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain)
- [JavaScript Strict Mode](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)
- [JavaScript Visualized (7 Part Series)](https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif)
- [DOM vs Shadow DOM vs Virtual DOM](https://www.youtube.com/watch?v=7Tok22qxPzQ)
- [Demystifying JavaScript Promises](https://blog.greenroots.info/series/javascript-promises)
",concept
604,version control systems,version control systems,topic
60400,basic usage of git,"[Git](https://git-scm.com/) is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Visit the following resources to learn more:

- [Git & GitHub Crash Course For Beginners](https://www.youtube.com/watch?v=SWYqp7iY_Tc)
- [Learn Git with Tutorials, News and Tips - Atlassian](https://www.atlassian.com/git)
- [Git Cheat Sheet](https://cs.fyi/guide/git-cheatsheet)
- [Tutorial: Git for Absolutely Everyone](https://thenewstack.io/tutorial-git-for-absolutely-everyone/)
",concept
605,repo hosting services,repo hosting services,topic
60500,github,"[GitHub](https://github.com) is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitHub: Quickstart](https://docs.github.com/en/get-started/quickstart/hello-world)
- [Learn GitHub by doing](https://skills.github.com/)
- [What is GitHub?](https://www.youtube.com/watch?v=w3jLJU7DT5E)
- [Git vs. GitHub: Whats the difference?](https://www.youtube.com/watch?v=wpISo9TNjfU)
- [Git and GitHub for Beginners](https://www.youtube.com/watch?v=RGOj5yH7evk)
- [Git and GitHub - CS50 Beyond 2019](https://www.youtube.com/watch?v=eulnSXkhE7I)
",concept
60501,gitlab,"[GitLab](https://gitlab.com) is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitLab Documentation](https://docs.gitlab.com/)
- [GitLab Website](https://gitlab.com/)
- [Development: Connect git to GitLab for Small Projects](https://thenewstack.io/development-connect-git-to-gitlab-for-small-projects/)
",concept
60502,bitbucket,"[BitBucket](https://bitbucket.com) is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [How to use BitBucket?](https://bitbucket.org/product/guides)
- [BitBucket Website](https://bitbucket.com/)
",concept
606,web security knowledge,web security knowledge,topic
60600,https,"HTTPS is a secure way to send data between a web server and a browser.

Hypertext transfer protocol secure (HTTPS) is the secure version of HTTP, which is the primary protocol used to send data between a web browser and a website. HTTPS is encrypted in order to increase security of data transfer. This is particularly important when users transmit sensitive data, such as by logging into a bank account, email service, or health insurance provider

Visit the following resources to learn more:

- [What is HTTPS?](https://www.cloudflare.com/en-gb/learning/ssl/what-is-https/)
- [Why HTTPS Matters](https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https)
- [Enabling HTTPS on Your Servers](https://web.dev/enable-https/)
- [How HTTPS works (comic)](https://howhttps.works/)
- [SSL, TLS, HTTP, HTTPS Explained](https://www.youtube.com/watch?v=hExRDVZHhig)
- [HTTPS — Stories from the field](https://www.youtube.com/watch?v=GoXgl9r0Kjk)
",concept
60601,content security policy,"Content Security Policy is a computer security standard introduced to prevent cross-site scripting, clickjacking and other code injection attacks resulting from execution of malicious content in the trusted web page context.

Visit the following resources to learn more:

- [MDN Content Security Policy (CSP)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP)
- [Google Devs Content Security Policy (CSP)](https://developers.google.com/web/fundamentals/security/csp)
- [Web.dev - Content Security Policy (CSP)](https://web.dev/csp/)",concept
60602,cors,"Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any origins (domain, scheme, or port) other than its own from which a browser should permit loading resources.

Visit the following resources to learn more:

- [Cross-Origin Resource Sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
- [CORS in 100 Seconds](https://www.youtube.com/watch?v=4KHiSt0oLJ0)
- [CORS in 6 minutes](https://www.youtube.com/watch?v=PNtFSVU-YTI)
- [Understanding CORS](https://rbika.com/blog/understanding-cors)
",concept
60603,owasp security risks,"OWASP or Open Web Application Security Project is an online community that produces freely-available articles, methodologies, documentation, tools, and technologies in the field of web application security.

Visit the following resources to learn more:

- [Wikipedia - OWASP](https://en.wikipedia.org/wiki/OWASP)
- [OWASP Web Application Security Testing Checklist](https://github.com/0xRadi/OWASP-Web-Checklist)
- [OWASP Top 10 Security Risks](https://sucuri.net/guides/owasp-top-10-security-vulnerabilities-2021/)
- [OWASP Cheatsheets](https://cheatsheetseries.owasp.org/cheatsheets/AJAX_Security_Cheat_Sheet.html)
- [OWASP Top 10: A Guide to the Worst Software Vulnerabilities](https://thenewstack.io/owasp-top-10-a-guide-to-the-worst-software-vulnerabilities/)
",concept
607,package managers,package managers,topic
60700,npm,"npm is a package manager for the JavaScript programming language maintained by npm, Inc. npm is the default package manager for the JavaScript runtime environment Node.js.

Visit the following resources to learn more:

- [Modern JavaScript for Dinosaurs](https://peterxjang.com/blog/modern-javascript-explained-for-dinosaurs.html)
- [An Absolute Beginners Guide to Using npm](https://nodesource.com/blog/an-absolute-beginners-guide-to-using-npm/)
- [How to NPM](https://github.com/workshopper/how-to-npm)
- [NPM tutorial for Beginners](https://www.youtube.com/watch?v=2V1UUhBJ62Y)
- [NPM Crash Course](https://www.youtube.com/watch?v=jHDhaSSKmB0)
",concept
60701,yarn,"Yarn is a software packaging system developed in 2016 by Facebook for Node.js JavaScript runtime environment that provides speed, consistency, stability, and security as an alternative to npm (package manager).

Visit the following resources to learn more:

- [Modern JavaScript for Dinosaurs](https://peterxjang.com/blog/modern-javascript-explained-for-dinosaurs.html)
- [Yarn - Getting Started](https://yarnpkg.com/en/docs/getting-started)
- [Yarn Crash Course](https://www.youtube.com/watch?v=g9_6KmiBISk)
",concept
60702,pnpm,"PNPM is an alternative package manager for Node. js which stands for “Performant NPM”. The main purpose of PNPM is to hold all the packages at a global (centralized) store and use them if needed by other projects too by creating hard links to it.

Visit the following resources to learn more:

- [Official Website](https://pnpm.io)
- [Meet PNPM: The Faster, More Performant NPM](https://blog.bitsrc.io/pnpm-javascript-package-manager-4b5abd59dc9)
",concept
608,css architecture,css architecture,topic
60800,bem,"The Block, Element, Modifier methodology (commonly referred to as BEM) is a popular naming convention for classes in HTML and CSS. Developed by the team at Yandex, its goal is to help developers better understand the relationship between the HTML and CSS in a given project.

Visit the following resources to learn more:

- [BEM Official Website](https://en.bem.info)
- [BEM Documentation](https://en.bem.info/methodology/quick-start)
- [BEM 101](https://css-tricks.com/bem-101)
- [BEM Tutorials](https://en.bem.info/tutorials/)
",concept
60801,oocss,"As with any object-based coding method, the purpose of OOCSS or Object Oriented CSS is to encourage code reuse and, ultimately, faster and more efficient stylesheets that are easier to add to and maintain.

Visit the following resources to learn more:

- [OOCSS Official Website](http://oocss.org/)
- [Introduction to Object Oriented CSS](https://www.smashingmagazine.com/2011/12/an-introduction-to-object-oriented-css-oocss/)
",concept
60802,smacss,"SMACSS (pronounced “smacks”) is more style guide than rigid framework. SMACSS is a way to examine your design process and as a way to fit those rigid frameworks into a flexible thought process. It is an attempt to document a consistent approach to site development when using CSS.

Visit the following resources to learn more:

- [SMACSS Official Website](http://smacss.com/)
",concept
609,css preprocessors,css preprocessors,topic
60900,sass,"Sass is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets. It lets you write maintainable CSS and provides features like variable, nesting, mixins, extension, functions, loops, conditionals and so on.

Visit the following resources to learn more:

- [Sass Website](https://sass-lang.com/)
- [Official Documentation](https://sass-lang.com/documentation)
- [ Sass Tutorial for Beginners](https://www.youtube.com/watch?v=_a5j7KoflTs)
- [ Sass, BEM, & Responsive Design](https://www.youtube.com/watch?v=jfMHA8SqUL4)
",concept
60901,postcss,"PostCSS is a tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more.

Visit the following resources to learn more:

- [Official Website](https://postcss.org/)
",concept
60902,less,"Less extends CSS with dynamic behavior such as variables, mixins, operations and functions. Less runs on both the server-side (with Node.js and Rhino) or client-side (modern browsers only).

Visit the following resources to learn more:

- [Official Website](https://lesscss.org/)
- [Official Documentation](https://lesscss.org/usage/)
- [ Less CSS Pre-Processor Tutorial](https://www.youtube.com/watch?v=YD91G8DdUsw)
",concept
610,build tools,build tools,topic
61000,task runners,task runners,topic
6100000,npm scripts,"npm scripts are the entries in the scripts field of the package.json file. The scripts field holds an object where you can specify various commands and scripts that you want to expose.

Visit the following resources to learn more:

- [Introduction to npm scripts](https://www.geeksforgeeks.org/introduction-to-npm-scripts/)
- [Codevolution: npm scripts](https://www.youtube.com/watch?v=hHt3oVk3XVk)
",concept
61001,module bundlers,module bundlers,topic
6100100,webpack,"Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.

Visit the following resources to learn more:

- [Webpack Official Website](https://webpack.js.org/)
- [Webpack Documentation](https://webpack.js.org/concepts/)
- [A Complete Guide to Webpack 5](https://www.valentinog.com/blog/webpack)
",concept
6100101,esbuild,"Our current build tools for the web are 10-100x slower than they could be. The main goal of the esbuild bundler project is to bring about a new era of build tool performance, and create an easy-to-use modern bundler along the way.

Visit the following resources to learn more:

- [Esbuild Official Website](https://esbuild.github.io/)
- [Esbuild Documentation](https://esbuild.github.io/api/)
- [Why are People Obsessed with esbuild?](https://www.youtube.com/watch?v=9XS_RA6zyyU)
- [What Is ESBuild?](https://www.youtube.com/watch?v=zy8vu8cbwf0)",concept
6100102,rollup,"Rollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application.

Visit the following resources to learn more:

- [Official Website and Docs](https://rollupjs.org/)
- [How to Set Up JavaScript Bundling Using Rollup](https://www.youtube.com/watch?v=ICYLOZuFMz8)
",concept
6100103,parcel,"Parcel is a web application bundler, differentiated by its developer experience. It offers blazing-fast performance utilizing multicore processing and requires zero configuration.

Visit the following resources to learn more:

- [Official Website and Docs](https://parceljs.org/plugin-system/bundler/)
- [Using Parcel Bundler with React](https://www.youtube.com/watch?v=hCxvp3_o0gM)
",concept
6100104,vite,"Vite is a build tool that aims to provide a faster and leaner development experience for modern web projects.

Visit the following resources to learn more:

- [Vite Website](https://vitejs.dev)
- [Vite Documentation](https://vitejs.dev/guide)
- [Vite Crash Course](https://youtu.be/LQQ3CR2JTX8)
- [Vite Tutorial Video](https://www.youtube.com/watch?v=VAeRhmpcWEQ)",concept
61002,linters formatters,linters formatters,topic
6100200,prettier,"Prettier is an opinionated code formatter with support for JavaScript, HTML, CSS, YAML, Markdown, GraphQL Schemas. By far the biggest reason for adopting Prettier is to stop all the on-going debates over styles.

Visit the following resources to learn more:

- [Prettier Website](https://prettier.io)
- [Why Prettier](https://prettier.io/docs/en/why-prettier.html)
",concept
6100201,eslint,"With ESLint you can impose the coding standard using a certain set of standalone rules.

Visit the following resources to learn more:

- [ESLint Official Website](https://eslint.org/)
- [Introduction to ESLint](https://dev.to/shivambmgupta/eslint-what-why-when-how-5f1d)
- [ESLint Quickstart - find errors automatically](https://www.youtube.com/watch?v=qhuFviJn-es)
",concept
6100202,standardjs,"Standardjs is a Style guide, with linter & automatic code fixer. It is a way to enforce consistent style in your project. It automatically formats code.
Standard JS is a tool in the Code Review category of a tech stack.

Visit the following resources to learn more:

- [Official Website](https://standardjs.com/)
",concept
611,pick a framework,pick a framework,topic
61100,react js,react js,topic
6110000,redux,"Redux is a predictable state container for JavaScript apps. It helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test. On top of that, it provides a great developer experience, such as [live code editing combined with a time traveling debugger](https://github.com/reduxjs/redux-devtools).

Visit the following resources to learn more:

- [Official Website](https://redux.js.org/)
- [Official Getting Started to Redux](https://redux.js.org/introduction/getting-started)
- [Official Tutorial to Learn Redux](https://redux.js.org/tutorials/essentials/part-1-overview-concepts)
- [Fundamentals of Redux Course from Dan Abramov](https://egghead.io/courses/fundamentals-of-redux-course-from-dan-abramov-bd5cc867)
",concept
6110001,mobx,"MobX is an open source state management tool. MobX, a simple, scalable, and standalone state management library, follows functional reactive programming (FRP) implementation and prevents inconsistent state by ensuring that all derivations are performed automatically.

Visit the following resources to learn more:

- [MobX Official Website](https://mobx.js.org/)
- [Intro to MobX Tutorial](https://www.youtube.com/watch?v=WQQq1QbYlAw)
",concept
6110002,recoil,"Recoil is a new state management library built by the Facebook team that simplifies global state management.

Visit the following resources to learn more:

- [Recoil Official Website](https://recoiljs.org/)
- [Official Documentation](https://recoiljs.org/docs/introduction/getting-started)
- [Learn the basics of Recoil.js](https://www.youtube.com/watch?v=BchtCWxs7sA)
",concept
61101,angular,angular,topic
6110100,rxjs,"RxJS (Reactive Extensions for JavaScript) is a library for reactive programming using observables that makes it easier to compose asynchronous or callback-based code.

Visit the following resources to learn more:

- [RxJS Official Website](https://rxjs.dev/guide/overview)
- [RxJS Angular Docs](https://angular.io/guide/rx-library)
- [RxJS Crash Course](https://www.youtube.com/watch?v=PhggNGsSQyg)
- [RxJS Quick Start](https://www.youtube.com/watch?v=2LCo926NFLI)
",concept
6110101,ngrx,"NgRx is an open source library that provides reactive state management for your Angular applications

Visit the following resources to learn more:

- [Official Documentation](https://ngrx.io/docs)
- [Angular NgRx Redux Quick Start Tutorial](https://www.youtube.com/watch?v=2LCo926NFLI)
- [NgRx Course](https://www.youtube.com/watch?v=nuHBHD32iw8)
",concept
61102,vue js,vue js,topic
6110200,pinia,"Pinia is a store library for Vue.js, and can be used in Vue 2 and Vue 3, with the same API, except in SSR and its installation. It allows state sharing between pages and components around the application. As the documentation says, it is extensible, intuitive (by organization), has devtools support (in Vue.js devtools), inferred typed state even in javascript and more. In Pinia you can access, mutate, replace, use getters that works like computed, use actions, etc. The library is recommended by the official Vue.js documentation.

Visit the following resources to learn more:

- [Official Documentation](https://pinia.vuejs.org/)
",concept
61103,svelte,"Svelte is a javascript framework that unlike Vue and React does not use vertical DOM diffing but instead knows exactly what and where to update when the state changes. It's mainly focused on frontend and building user interfaces.

Visit the following resources to learn more:

- [Svelte Website](https://svelte.dev/)
- [Svelte Documentation](https://svelte.dev/docs)
- [Svelte Course Playlist for beginners](https://www.youtube.com/playlist?list=PL4cUxeGkcC9hlbrVO_2QFVqVPhlZmz7tO)
- [All About Svelte, the Much-Loved, State-Driven Web Framework](https://thenewstack.io/all-about-svelte-the-much-loved-state-driven-web-framework/)
- [Svelte and the Future of Frontend Development](https://thenewstack.io/svelte-and-the-future-of-front-end-development/)
",concept
61104,solid js,"Solid is a reactive JavaScript toolkit for building user interfaces without a virtual DOM. To ensure that only the relevant code is executed when a state update occurs, it compiles templates down to real DOM nodes once and wraps modifications into fine-grained reactions.

Visit the following resources to learn more:

- [Official Website - SolidJS](https://www.solidjs.com/)
- [SolidJS Tutorial](https://www.solidjs.com/tutorial/introduction_basics)
",concept
61105,qwik,"Qwik is a new kind of web framework that can deliver instant loading web applications at any size or complexity. Your sites and apps can boot with about 1kb of JS (regardless of application complexity), and achieve consistent performance at scale.

Read more about Qwik [on the official website](https://qwik.builder.io/).",concept
612,modern css,modern css,topic
61200,styled components,"Styled-components is a CSS-in-JS library that enables you to write regular CSS and attach it to JavaScript components. With styled-components, you can use the CSS you’re already familiar with instead of having to learn a new styling structure.

Visit the following resources to learn more:

- [Official Website](https://styled-components.com/)
- [Official Docs](https://styled-components.com/docs)
- [Styled Components Crash Course & Project](https://www.youtube.com/watch?v=02zO0hZmwnw)
",concept
61201,css modules,"CSS files in which all class names and animation names are scoped locally by default.

Visit the following resources to learn more:

- [Project GitHub Repository](https://github.com/css-modules/css-modules)
- [Using CSS Modules In React App](https://medium.com/@ralph1786/using-css-modules-in-react-app-c2079eadbb87)
- [CSS Modules: Why are they great?](https://www.youtube.com/watch?v=pKMWU9OrA2s)
",concept
61202,styled jsx,"Styled JSX is a CSS-in-JS library that allows you to write encapsulated and scoped CSS to style your components. The styles you introduce for one component won't affect other components, allowing you to add, change and delete styles without worrying about unintended side effects.

Visit the following resources to learn more:

- [Getting started](https://github.com/vercel/styled-jsx)
- [Styled JSX in Next.js: Master Next.js](https://www.youtube.com/watch?v=SM5uVbfgfdo)
",concept
61203,emotion,"Emotion is a library designed for writing css styles with JavaScript. It provides powerful and predictable style composition in addition to a great developer experience with features such as source maps, labels, and testing utilities. Both string and object styles are supported.

Visit the following resources to learn more:

- [Official Website and Docs](https://emotion.sh/docs/introduction)
- [Styled components using emotion in React](https://www.youtube.com/watch?v=yO3JU2bMLGA)
",concept
613,web components,web components,topic
61300,html templates,"The `<template>` HTML element is a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript. Think of a template as a content fragment that is being stored for subsequent use in the document.

Visit the following resources to learn more:

- [Using templates and slots | MDN web docs](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots)
",concept
61301,custom elements,"One of the key features of the Web Components standard is the ability to create custom elements that encapsulate your functionality on an HTML page, rather than having to make do with a long, nested batch of elements that together provide a custom page feature.

Visit the following resources to learn more:

- [Using custom elements | MDN web docs](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements)
",concept
61302,shadow dom,"An important aspect of web components is encapsulation — being able to keep the markup structure, style, and behavior hidden and separate from other code on the page so that different parts do not clash, and the code can be kept nice and clean. The Shadow DOM API is a key part of this, providing a way to attach a hidden separated DOM to an element.

Visit the following resources to learn more:

- [Using shadow DOM | MDN web docs](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)
",concept
614,css frameworks,css frameworks,topic
61400,css first,css first,topic
6140000,bootstrap,"Quickly design and customize responsive mobile-first sites with Bootstrap, the world’s most popular front-end open source toolkit, featuring Sass variables and mixins, responsive grid system, extensive prebuilt components, and powerful JavaScript plugins.

Visit the following resources to learn more:

- [Bootstrap Website](https://getbootstrap.com)
- [Bootstrap Official Blog](https://blog.getbootstrap.com/2022/07/19/bootstrap-5-2-0/)
- [Bootstrap CSS Framework - Full Course for Beginners](https://www.youtube.com/watch?v=-qfEOE4vtxE)
",concept
6140001,bulma,"Bulma is a free, open source framework that provides ready-to-use frontend components that you can easily combine to build responsive web interfaces.

Visit the following resources to learn more:

- [Bulma Website](https://bulma.io/)
- [Learn Bulma CSS](https://scrimba.com/learn/bulma)
- [How To Build A ? Responsive Blog Design With Bulma CSS](https://www.freecodecamp.org/news/how-to-build-a-responsive-blog-design-with-bulma-css-c2257a17c16b)
- [Bulma CSS Tutorial](https://youtube.com/playlist?list=PL4cUxeGkcC9iXItWKbaQxcyDT1u6E7a8a)
",concept
61401,js first,js first,topic
6140100,tailwind css,"CSS Framework that provides atomic CSS classes to help you style components e.g. `flex`, `pt-4`, `text-center` and `rotate-90` that can be composed to build any design, directly in your markup.

Visit the following resources to learn more:

- [Tailwind Website](https://tailwindcss.com)
- [Tailwind CSS Full Course for Beginners](https://www.youtube.com/watch?v=lCxcTsOHrjo)
- [Tailwind CSS Crash Course](https://www.youtube.com/watch?v=UBOj6rqRUME)
- [Should You Use Tailwind CSS?](https://www.youtube.com/watch?v=hdGsFpZ0J2E)
- [Official Screencasts](https://www.youtube.com/c/TailwindLabs/videos)
",concept
6140101,chakra ui,"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.

Visit the following resources to learn more:

- [Chakra UI Website](https://chakra-ui.com/)
- [Chakra UI Official Getting Started](https://chakra-ui.com/docs/getting-started)
- [Why You Should Start Using Chakra UI](https://www.freecodecamp.org/news/why-should-you-start-using-chakraui/)
- [Build a Modern User Interface with Chakra UI](https://egghead.io/courses/build-a-modern-user-interface-with-chakra-ui-fac68106)
- [Official Getting Started Video](https://youtu.be/wI2vqXsjsIo)
- [Chakra UI Crash Course](https://youtu.be/s-bIsz-NR3c)
",concept
6140102,material ui,"Material-UI is an open-source framework that features React components that implement Google’s Material Design.

Visit the following resources to learn more:

- [Official Website](https://mui.com/)
- [Official Documentation](https://mui.com/getting-started/installation/)
- [Material UI React Tutorial](https://www.youtube.com/watch?v=vyJU9efvUtQ)
",concept
6140103,radix ui,"An open-source UI component library for building high-quality, accessible design systems and web apps.

Visit the following resources to learn more:

- [Official Website](https://www.radix-ui.com/)
- [Official Documentation](https://www.radix-ui.com/docs/primitives/overview/introduction)
",concept
6140104,shadcn ui,"Shadcn UI are beautifully designed components that you can copy and paste into your apps. Accessible. Customizable. Open Source. They are built with Tailwind CSS and Radix UI.

- [Official Website](https://ui.shadcn.com/)
- [Official GitHub Repository](https://github.com/shadcn-ui/ui)",concept
6140105,mantine,"Mantine is a React components library with more than 100 customizable components and 40 hooks to cover you in any situation.

Visit the following resources to learn more:

- [Mantine Website](https://mantine.dev/)
- [Usage with Create React App](https://mantine.dev/guides/cra/)
- [5 Mantine Hooks for UI management](https://blog.logrocket.com/5-mantine-hooks-simplifying-ui-management-react/)
",concept
6140106,daisy ui,"Component library around Tailwind CSS that comes with several built-in components.

Visit the following resources to learn more:

- [DaisyUI Website](https://daisyui.com/)
- [DaisyUI Documentation](https://daisyui.com/docs/install/)
",concept
615,testing your apps,testing your apps,topic
61500,jest,"Jest is a delightful JavaScript Testing Framework with a focus on simplicity.
It works with projects using: Babel, TypeScript, Node, React, Angular, Vue and more!

Visit the following resources to learn more:

- [Jest Website](https://jestjs.io/)
",concept
61501,vitest,"Vitest is a fast Vite-native unit test framework with out-of-box ESM, TypeScript and JSX support.
Works on React, Vue, Svelte and more projects created with Vite

Visit the following resources to learn more:

- [Vitest Website](https://vitest.dev/)
",concept
61502,cypress,"Cypress framework is a JavaScript-based end-to-end testing framework built on top of Mocha – a feature-rich JavaScript test framework running on and in the browser, making asynchronous testing simple and convenient. It also uses a BDD/TDD assertion library and a browser to pair with any JavaScript testing framework.

Visit the following resources to learn more:

- [Official Website](https://www.cypress.io/)
- [Official Documentation](https://docs.cypress.io/guides/overview/why-cypress#Other)
- [Cypress End-to-End Testing](https://www.youtube.com/watch?v=7N63cMKosIE)
",concept
61503,playwright,"Playwright is an open-source test automation library initially developed by Microsoft contributors. It supports programming languages such as Java, Python, C#, and NodeJS. Playwright comes with Apache 2.0 License and is most popular with NodeJS with Javascript/Typescript.

Visit the following resources to learn more:

- [Playwright Website](https://playwright.dev/)
- [Playwright Tutorial: Learn Basics and Setup](https://www.browserstack.com/guide/playwright-tutorial)
- [Playwright, a Time-Saving End-to-End Testing Framework](https://thenewstack.io/playwright-a-time-saving-end-to-end-testing-framework/)
",concept
61504,jasmine,"Jasmine is a behavior-driven development framework for testing JavaScript code. It does not depend on any other JavaScript frameworks. It does not require a DOM. And it has a clean, obvious syntax so that you can easily write tests. It provides utilities that can be used to run automated tests for both synchronous and asynchronous code.

Visit the following resources to learn more:

- [Official Website](https://jasmine.github.io/)
- [Official Docs](https://jasmine.github.io/pages/docs_home.html)
- [Official Repository](https://github.com/jasmine/jasmine)
- [Javascript Unit Testing with Jasmine](https://www.youtube.com/watch?v=rw4KlxKEENQ)
",concept
61505,mocha,"Mocha is a feature-rich JavaScript test framework running on Node.js and in the browser, making asynchronous testing simple and fun. Mocha tests run serially, allowing for flexible and accurate reporting, while mapping uncaught exceptions to the correct test cases.

Visit the following resources to learn more:

- [Official Website and Docs](https://mochajs.org/)
- [Testing Node.js with Mocha](https://www.youtube.com/watch?v=Bs68k6xfR3E)
",concept
61506,chai,"Chai is a BDD / TDD assertion library for node and the browser that can be delightfully paired with any javascript testing framework.

Visit the following resources to learn more:

- [Official Website and Docs](https://www.chaijs.com/)
- [Official Docs](https://www.chaijs.com/guide/)
- [Intro To JavaScript Unit Testing With Mocha JS & Chai](https://www.youtube.com/watch?v=MLTRHc5dk6s)
",concept
61507,ava,"Ava is a JavaScript test runner. It utilizes the async I/O nature of Node and runs concurrent tests, thereby vastly decreasing your test times.

Visit the following resources to learn more:

- [Official Repository](https://github.com/avajs/ava)
- [Testing your Node.js applications with Ava.js](https://www.freecodecamp.org/news/testing-your-nodejs-applications-with-ava-js-99e806a226a7/)
- [AVA Tutorial](https://www.youtube.com/watch?v=RxLW6-3dk5A)
",concept
616,auth strategies,"Authentication strategies are methods or techniques used to verify the identity of a user or system in order to grant access to a protected resource. There are several different authentication strategies that can be used, including:

- Basic Authentication
- Session Based Authentication
- Token Based Authentication
- JWT Authentication
- OAuth
- SSO

You don't necessarily need to learn all of these, how to implement and the ins and outs from the get go. But it's important to know what they are and how they work. This will help you make better decisions when choosing an authentication strategy for your application.

Visit the following resources to learn more:

- [Basic Authentication](https://roadmap.sh/guides/basic-authentication)
- [Session Based Authentication](https://roadmap.sh/guides/session-authentication)
- [Token Based Authentication](https://roadmap.sh/guides/token-authentication)
- [JWT Authentication](https://roadmap.sh/guides/jwt-authentication)
- [OAuth](https://roadmap.sh/guides/oauth)
- [SSO - Single Sign On](https://roadmap.sh/guides/sso)
",concept
617,type checkers,type checkers,topic
61700,typescript,"TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale.

Visit the following resources to learn more:

- [Official Website](https://www.typescriptlang.org/)
- [Official Docs for Deep Dives](https://www.typescriptlang.org/docs/)
- [The TypeScript Handbook](https://www.typescriptlang.org/docs/handbook/intro.html)
- [TypeScript Tutorial](https://www.tutorialspoint.com/typescript/index.htm)
- [Scrimba — TypeScript Basics](https://scrimba.com/learn/typescript)
- [TypeScript for Beginners](https://www.youtube.com/watch?v=BwuLxPH8IDs)
- [What Is TypeScript?](https://thenewstack.io/what-is-typescript/)
- [TypeScript Tutorial: Go beyond ‘Hello, World!’](https://thenewstack.io/typescript-tutorial-go-beyond-hello-world/)
- [TypeScript Tutorial: A Guide to Using the Programming Language](https://thenewstack.io/typescript-tutorial-a-guide-to-using-the-programming-language/)
",concept
61701,flow,"Flow is a static type checker, designed to find type errors in JavaScript programs.

Visit the following resources to learn more:

- [Official Website](https://flow.org/)
- [Official Documentation](https://flow.org/en/docs/)
- [Flow for Beginners](https://www.youtube.com/watch?v=0HlqX4lQZas)
",concept
618,progressive web apps,progressive web apps,topic
61800,storage,"The Web Storage API provides mechanisms for storing key-value pairs in a web browser. It includes two storage objects: localStorage and sessionStorage, which allow you to save data on the client side and persist it across multiple browser sessions, respectively.

The Web Storage API is designed to be simple and easy to use, and it is widely supported across modern web browsers. It is often used as an alternative to cookies, as it allows for larger amounts of data to be stored and is more efficient in terms of performance.

Visit the following resources to learn more:

- [Web Storage API - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API)
",concept
61801,web sockets,"Web Sockets is a technology that allows for full-duplex communication over a single TCP connection. It enables real-time, bi-directional communication between a client and a server, and is typically used in applications that require high-speed, low-latency communication, such as online gaming and real-time data streaming.

Web Sockets utilizes a persistent connection between a client and a server, allowing for continuous data exchange without the need for the client to send additional requests to the server. This makes it more efficient and faster than other technologies, such as HTTP, which require a new request to be sent for each piece of data.

Web Sockets is supported by most modern web browsers and can be used with a variety of programming languages and frameworks.

Visit the following resources to learn more:

- [Web Sockets - MDN](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API)
",concept
61802,server sent events,"Server-Sent Events (SSE) is a technology that allows a web server to push data to a client in real-time. It uses an HTTP connection to send a stream of data from the server to the client, and the client can listen for these events and take action when they are received.

SSE is useful for applications that require real-time updates, such as chat systems, stock tickers, and social media feeds. It is a simple and efficient way to establish a long-lived connection between a client and a server, and it is supported by most modern web browsers.

To use SSE, the client must create an EventSource object and specify the URL of the server-side script that will send the events. The server can then send events by writing them to the response stream with the proper formatting.

Visit the following resources to learn more:

- [Server-Sent Events - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events)
",concept
61803,service workers,"Service Workers are a type of web worker that acts as a proxy between a web page and the network, allowing web developers to build offline-first and reliable applications. Service Workers can intercept network requests, access the cache, and make decisions on how to respond to a request based on the available resources.

Service Workers are written in JavaScript and are registered by a web page. Once registered, they can control the page and all its requests, even when the page is not open in a browser. This allows Service Workers to enable features such as push notifications, background synchronization, and offline support.

Service Workers are supported by most modern web browsers, and they are an essential component of progressive web applications (PWAs).

Visit the following resources to learn more:

- [Service Workers - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API)
",concept
61804,location,"The Geolocation API is a web API that provides access to the device's location data, such as latitude and longitude. It allows web developers to build location-based applications, such as mapping and location sharing, by using the device's GPS, Wi-Fi, and other sensors to determine the user's location.

To use the Geolocation API, a web page must first request permission from the user to access their location. If permission is granted, the page can then use the `navigator.geolocation` object to access the device's location data. The API provides several methods for getting the user's current location, watching for location changes, and calculating distances between two locations.

Visit the following resources to learn more:

- [Geolocation API - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API)
",concept
61805,notifications,"The Notifications API is a web API that allows web pages to display system-level notifications to the user. These notifications can be used to alert the user of important events, such as new messages or updates, even when the web page is not open in the browser.

To use the Notifications API, a web page must first request permission from the user to display notifications. If permission is granted, the page can then use the `Notification` constructor to create a new notification and display it to the user. The notification can include a title, body text, and an icon, and it can be customized with options such as a timeout and a click action.

Visit the following resources to learn more:

- [Notifications API - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API)
- [Create React Notifications With the Web Notifications API](https://www.youtube.com/watch?v=mfrppinfmz0)",concept
61806,device orientation,"The Device Orientation API is a web API that provides access to the device's orientation and motion data, such as its pitch, roll, and yaw. It allows web developers to build applications that can respond to the device's orientation and motion, such as augmented reality and motion-controlled games.

To use the Device Orientation API, a web page must first request permission from the user to access the device's orientation data. If permission is granted, the page can then use the DeviceOrientationEvent object to access the device's orientation data and respond to changes in orientation. The API provides several properties for accessing the device's orientation and motion data, as well as events for detecting changes in orientation.

The Device Orientation API is supported by most modern web browsers and is often used in conjunction with other APIs, such as the Geolocation API, to build location-based applications.

Visit the following resources to learn more:

- [Device Orientation API - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Device_orientation_events)
",concept
61807,payments,"The Payment Request API is a web API that allows web developers to build checkout flows within their web applications. It provides a standardized, browser-based interface for collecting payment and shipping information from the user, and it supports a wide range of payment methods, including credit cards, debit cards, and digital wallets.

To use the Payment Request API, a web page must first create a `PaymentRequest` object and specify the payment and shipping options that are available to the user. The page can then invoke the Payment Request UI by calling the `show()` method on the `PaymentRequest` object. The user can then select their preferred payment and shipping options and confirm the payment, at which point the Payment Request API will return a payment response object that can be used to complete the transaction.

The Payment Request API is supported by most modern web browsers and is designed to be simple and efficient for both the developer and the user.

Visit the following resources to learn more:

- [Payment Request API - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API)
",concept
61808,credentials,"The Credential Management API is a web API that allows web developers to integrate password-based and federated login flows into their applications. It provides a standardized, browser-based interface for storing and retrieving user credentials, such as username and password combinations and OAuth tokens.

To use the Credential Management API, a web page must first create a Credential object and specify the credentials that the user wishes to store. The page can then use the navigator.credentials object to store and retrieve the user's credentials. The API provides several methods for storing and retrieving credentials, as well as for prompting the user to sign in or sign up.

The Credential Management API is supported by most modern web browsers and is designed to improve the security and usability of login flows by allowing the user to store and reuse their credentials across multiple sites and devices.

Visit the following resources to learn more:

- [Credential Management API - MDN](https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API)
",concept
61809,prpl pattern,"The PRPL pattern is a performance optimization pattern for web applications that focuses on minimizing the time it takes for the initial rendering of a web page. It stands for Push, Render, Pre-cache, and Lazy-load, and it involves the following steps:

- Push: Prioritize the delivery of critical resources, such as HTML, CSS, and JavaScript, to the client as early as possible.
- Render: Start rendering the web page as soon as the critical resources are received, even if some non-critical resources are still being downloaded.
- Pre-cache: Pre-cache non-critical resources in the background so that they are available when needed.
- Lazy-load: Defer the loading of non-critical resources until they are needed, such as when the user scrolls to them or interacts with them.

The PRPL pattern is designed to improve the perceived performance of a web page by reducing the time it takes for the page to become interactive. It is particularly useful for applications that are served over slow or unreliable networks, as it allows the page to render as quickly as possible and then gradually load the remaining resources.

Visit the following resources to learn more:

- [PRPL Pattern - Google Developers](https://developers.google.com/web/fundamentals/performance/prpl-pattern)
",concept
61810,rail model,"The RAIL model is a performance optimization model for web applications that focuses on improving the perceived performance of a web page. It stands for Response, Animation, Idle, and Load, and it involves the following four performance goals:

- Response: The time it takes for the web page to respond to user input should be under 100 milliseconds.
- Animation: The time it takes for an animation to run should be under 10 milliseconds.
- Idle: The web page should take advantage of idle time to perform non-critical tasks.
- Load: The time it takes for the web page to fully load should be under 1 second.

The RAIL model is designed to provide a framework for optimizing the performance of a web page by focusing on the four key areas that impact the user's perception of performance. It is particularly useful for applications that require high levels of interactivity, such as games and social media applications.

Visit the following resources to learn more:

- [RAIL Model - Google Developers](https://developers.google.com/web/fundamentals/performance/rail)
",concept
61811,performance metrics,"Web performance metrics are quantitative measures of the performance of a web page or application. They are used to assess the speed and efficiency of a web page, and they can help identify areas for improvement. Some common web performance metrics include:

- Load time: The time it takes for a web page to fully load and become interactive.
- First contentful paint (FCP): The time it takes for the first content to appear on the page.
- Time to interactive (TTI): The time it takes for the page to become fully interactive.
- First input delay (FID): The time it takes for the page to respond to the first user input.
- Total blocking time (TBT): The time it takes for the page to become fully interactive, taking into account the time spent blocking the main thread.

There are many tools and techniques available for measuring web performance metrics, including browser dev tools, performance monitoring tools, and web performance APIs. By tracking these metrics and analyzing the results, web developers can identify areas for improvement and optimize the performance of their web pages.

Visit the following resources to learn more:

- [Web Performance Metrics - Google Developers](https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics)
- [Measuring performance and user experience - Google Developers](https://web.dev/metrics/)
- [Measuring performance and user experience - MDN](https://developer.mozilla.org/en-US/docs/Web/Guide/Performance)
",concept
61812,lighthouse,"Lighthouse is an open-source tool developed by Google that is used to audit the performance, accessibility, and SEO of web pages. It is available as a browser extension and as a command-line tool, and it can be run on any web page to generate a report with recommendations for improvement.

Lighthouse works by simulating the load and interaction of a web page and measuring various performance metrics, such as load time, time to first paint, and time to interactive. It also checks for common issues such as incorrect image sizes, missing alt text, and broken links.

Lighthouse provides a comprehensive and easy-to-use tool for identifying and fixing performance and accessibility issues on web pages. It is widely used by web developers and is integrated into many popular development tools.

Visit the following resources to learn more:

- [Lighthouse - Google Developers](https://developers.google.com/web/tools/lighthouse)
- [Improving Load Performance - Chrome DevTools 101](https://www.youtube.com/watch?v=5flw5q5odie)",concept
61813,browser devtools,"Most of the browsers have built-in developer tools that help you perform web development specific tasks on a webpage. My personal recommendation would be to use Chrome DevTools as it is the most advanced and has the most features. However, if you are using a different browser, you can still use the DevTools to debug your web application.

Chrome DevTools is a set of web development tools built into the Google Chrome browser. It allows web developers to debug and optimize web pages by providing a range of features for inspecting and manipulating the page's HTML, CSS, and JavaScript.

Some of the features provided by Chrome DevTools include:

- **Elements panel**: Inspect and modify the page's HTML and CSS.
- **Console panel**: View and debug JavaScript errors and log messages.
- **Network panel**: Monitor network requests and responses, and analyze performance issues.
- **Performance panel**: Analyze the performance of the page and identify bottlenecks.
- **Application panel**: Inspect the page's resources, such as cookies and local storage.

Chrome DevTools is a powerful and essential tool for web developers, and it is widely used to debug and optimize web pages. It is constantly updated with new features and improvements, and it is available on all modern web browsers.

Visit the following resources to learn more:

- [Chrome DevTools - Google Developers](https://developers.google.com/web/tools/chrome-devtools)
",concept
619,server side rendering,server side rendering,topic
61900,react js,react js,topic
6190000,next js,"Next.js is an open-source development framework built on top of Node.js enabling React based web applications functionalities such as server-side rendering and generating static websites.

Visit the following resources to learn more:

- [Official Website](https://nextjs.org/)
- [Official Docs for Getting Started](https://nextjs.org/docs/getting-started)
- [Mastering Next.js](https://masteringnextjs.com/)
- [The Next.js Handbook — freeCodeCamp](https://www.freecodecamp.org/news/the-next-js-handbook/)
- [Next.js for Beginners - freeCodeCamp](https://youtu.be/1WmNXEVia8I)
",concept
6190001,after js,"After.js is an open-source JavaScript framework for developing SSR (Server Side Rendering) based applications. It is similar to the Next.js framework for server-rendered React apps but uses React Router instead of a folder structure based router like Next.js

Visit the following resources to learn more:

- [Official GitHub repository](https://github.com/jaredpalmer/after.js)
- [Documentation](https://www.npmjs.com/package/@jaredpalmer/after)
",concept
6190002,remix,"Remix is a full stack web framework that lets you focus on the user interface and work back through web standards to deliver a fast, slick, and resilient user experience. People are gonna love using your stuff.

Visit the following resources to learn more:

- [Official Website](https://remix.run/)
- [Official Docs for Getting Started](https://remix.run/docs/en/v1#getting-started)
",concept
61901,angular,angular,topic
6190100,universal,"The Angular Universal project is a community driven project to expand on the core APIs from Angular (platform-server) to enable developers to do the server side rendering of Angular applications. It mainly uses express to render pages on pages on node.js server.

Visit the following resources to learn more:

- [Server-side rendering (SSR) with Angular Universal](https://angular.io/guide/universal)
",concept
61902,vue js,vue js,topic
6190200,nuxt js,"Nuxt.js is a free and open source JavaScript library based on Vue.js, Node.js, Webpack and Babel.js. Nuxt is inspired by Next.js, which is a framework of similar purpose, based on React.js.

Visit the following resources to learn more:

- [Nuxt Website](https://nuxtjs.org/)
- [Nuxt Docs](https://nuxtjs.org/docs/get-started/installation)
- [Nuxt Tutorials](https://nuxtjs.org/tutorials)
- [Get Started with Nuxt](https://explorers.netlify.com/learn/get-started-with-nuxt)
- [Nuxt.js Fundamentals](https://vueschool.io/courses/nuxtjs-fundamentals)
",concept
61903,svelte,svelte,topic
6190300,svelte kit,"Svelte Kit is a framework for building web applications with the Svelte JavaScript framework. It is designed to be a complete solution for building web applications, with support for server-side rendering, automatic code splitting, and optimized performance.

Visit the following resources to learn more:

- [Svelte Kit Official Website](https://kit.svelte.dev/)
- [Official Svelte Kit Docs](https://kit.svelte.dev/docs/introduction)
",concept
620,graphql,graphql,topic
62000,apollo,"Apollo is a platform for building a unified graph, a communication layer that helps you manage the flow of data between your application clients (such as web and native apps) and your back-end services.

Visit the following resources to learn more:

- [Apollo Website](https://www.apollographql.com)
- [Official Docs](https://www.apollographql.com/docs/)
- [Official YouTube Channel](https://www.youtube.com/c/ApolloGraphQL/)
- [GraphQL With React Tutorial - Apollo Client](https://www.youtube.com/watch?v=YyUWW04HwKY)
",concept
62001,relay modern,"Relay is a JavaScript client used in the browser to fetch GraphQL data. It's a JavaScript framework developed by Facebook for managing and fetching data in React applications. It is built with scalability in mind in order to power complex applications like Facebook. The ultimate goal of GraphQL and Relay is to deliver instant UI-response interactions.

Visit the following resources to learn more:

- [Official Website](https://relay.dev/)
- [Introduction to Relay modern](https://relay.dev/docs/)
",concept
621,static site generators,static site generators,topic
62100,next js,"Next.js is an open-source development framework built on top of Node.js
enabling React based web applications functionalities such as server-side
rendering and generating static websites.

Visit the following resources to learn more:

- [Official Website](https://nextjs.org/)
- [Official Docs for Getting Started](https://nextjs.org/docs/getting-started)
- [The Next.js Handbook — FreeCodeCamp](https://www.freecodecamp.org/news/the-next-js-handbook/)
- [Mastering Next.js](https://masteringnextjs.com/)
- [Next.js for Beginners - Full Course at freeCodeCamp YouTube Channel](https://youtu.be/1WmNXEVia8I)
",concept
62101,gatsbyjs,"Gatsby is a React-based open source framework with performance, scalability and security built-in.

Visit the following resources to learn more:

- [Gatsby Website](https://www.gatsbyjs.com/)
- [Gatsby Docs](https://www.gatsbyjs.com/docs)
- [Gatsby Tutorial](https://youtube.com/playlist?list=PL4cUxeGkcC9hw1g77I35ZivVLe8k2nvjB)
- [Getting Started with Gatsby, the Cloud Native Static Site Generator](https://thenewstack.io/getting-started-with-gatsby-the-cloud-native-static-site-generator/)
- [Static Site Revolution: Top Websites Built with Gatsby](https://thenewstack.io/static-site-revolution-top-websites-built-with-gatsby/)
",concept
62102,nuxt js,"Nuxt.js is an open-source development framework built on top of Node.js
enabling Vue based web applications functionalities such as server-side
rendering and generating static websites.

Visit the following resources to learn more:

- [Official Website](https://nuxtjs.org/)
- [Official Docs for Getting Started](https://nuxtjs.org/docs/get-started)
- [Mastering Nuxt.js](https://masteringnuxt.com/)
- [Vue.js for Beginners - Full Course at freeCodeCamp YouTube Channel](https://www.youtube.com/watch?v=FXpIoQ_rT_c)
",concept
62103,vuepress,"VuePress is composed of two parts: a minimalistic static site generator (opens new window)with a Vue-powered theming system and Plugin API, and a default theme optimized for writing technical documentation. It was created to support the documentation needs of Vue’s own sub projects.

Visit the following resources to learn more:

- [Official Website](https://vuepress.vuejs.org/)
- [Official Docs for Getting Started](https://vuepress.vuejs.org/guide/getting-started.html)
- [Introduction to VuePress](https://www.youtube.com/watch?v=lIv1ItUzktc)
",concept
62104,jekyll,"Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site’s look and feel, URLs, the data displayed on the page, and more.

Visit the following resources to learn more:

- [Jekyll Website](https://jekyllrb.com/)
- [Jekyll Docs](https://jekyllrb.com/docs/)
",concept
62105,hugo,"Hugo is the world’s fastest static website engine. It’s written in Go (aka Golang) and developed by bep, spf13 and friends.

Visit the following resources to learn more:

- [Official Website](https://gohugo.io/)
- [Official Docs for Getting Started](https://gohugo.io/documentation/)
- [Introduction to Hugo - Static Site Generator ](https://www.youtube.com/watch?v=qtIqKaDlqXo&list=PLLAZ4kZ9dFpOnyRlyS-liKL5ReHDcj4G3)
- [Tutorial: Use Hugo to Generate a Static Website](https://thenewstack.io/tutorial-use-hugo-to-generate-a-static-website/)
",concept
62106,astro,"Astro is an all-in-one web framework for building fast, content-focused websites. Astro combines the power of a modern component-based framework with the performance and flexibility of a static site generator.

- Component Islands: A new web architecture for building faster websites.
- Server-first API design: Move expensive hydration off of your users’ devices.
- Zero JS, by default: No JavaScript runtime overhead to slow you down.
- Edge-ready: Deploy anywhere, even a global edge runtime like Deno or Cloudflare.
- Customizable: Tailwind, MDX, and 100+ other integrations to choose from.
- UI-agnostic: Supports React, Preact, Svelte, Vue, Solid, Lit and more.

Visit the following resources to learn more:

- [Official Astro Website](https://astro.build/)
- [Official Astro Docs](https://docs.astro.build/)
",concept
62107,gridsome,"Gridsome is a Vue.js powered Jamstack framework for building static generated websites & apps that are fast by default.

Visit the following resources to learn more:

- [Gridsome Website](https://gridsome.org/)
- [Gridsome Documentation](https://gridsome.org/docs/)
",concept
62108,eleventy,"Eleventy (11ty) is a simple to use, easy to customize, highly performant and powerful static site generator with a helpful set of plugins (e.g. navigation, build-time image transformations, cache assets). Pages can be built and written with a variety of template languages (HTML, Markdown, JavaScript, Liquid, Nunjucks, Handlebars, Mustache, EJS, Haml, Pug or JS template literals). But it also offers the possibility to dynamically create pages from local data or external sources that are compiled at build time. It has zero client-side JavaScript dependencies.

Visit the following resources to learn more:

- [Official Website](https://www.11ty.dev/)
- [A collection of 11ty starters, projects, plugins, and resources](https://11ty.rocks/)
- [Introduction to Eleventy](https://www.youtube.com/watch?v=-dM6AmNmMFA)
",concept
62109,remix,"Remix is a full stack web framework that lets you focus on the user interface and work back through web standards to deliver a fast, slick, and resilient user experience. People are gonna love using your stuff.

Visit the following resources to learn more:

- [Official Website](https://remix.run/)
- [Official Docs for Getting Started](https://remix.run/docs/en/v1#getting-started)
",concept
622,mobile applications,mobile applications,topic
62200,react native,"React Native is a popular JavaScript-based mobile app framework that allows you to build natively-rendered mobile apps for iOS and Android. The framework lets you create an application for various platforms by using the same codebase.

Visit the following resources to learn more:

- [Official Website](https://reactnative.dev/)
- [Official Getting Started to React Native](https://reactnative.dev/docs/getting-started)
- [Build a React Native App by Mosh](https://www.youtube.com/watch?v=0-S5a0eXPoc)
- [Learn React Native by CodeAcademy](https://www.codecademy.com/learn/learn-react-native)
",concept
62201,nativescript,"NativeScript is an open source framework for creating native iOS and Android apps in Angular, TypeScript, or JavaScript.

Visit the following resources to learn more:

- [Official Website](https://nativescript.org/)
- [Official Getting Started to NativeScript](https://docs.nativescript.org/)
- [NativeScript Tutorial for Beginners](https://www.youtube.com/watch?v=DcCSq2Y9bow)
",concept
62202,flutter,"Flutter is a free and open-source mobile UI framework created by Google and released in May 2017. In a few words, it allows you to create a native mobile application with only one codebase. This means that you can use one programming language and one codebase to create two different apps (for iOS and Android).

Flutter consists of two important parts:

- An SDK (Software Development Kit): A collection of tools that are going to help you develop your applications. This includes tools to compile your code into native machine code (code for iOS and Android).
- A Framework (UI Library based on widgets): A collection of reusable UI elements (buttons, text inputs, sliders, and so on) that you can personalize for your own needs.
  To develop with Flutter, you will use a programming language called Dart. The language was created by Google in October 2011, but it has improved a lot over these past years.

Dart focuses on front-end development, and you can use it to create mobile and web applications.

If you know a bit of programming, Dart is a typed object programming language. You can compare Dart's syntax to JavaScript.

Visit the following resources to learn more:

- [Visit Dedicated Flutter Roadmap](/flutter)
- [Flutter Website](https://flutter.dev)
- [Flutter Tutorial](https://www.w3adda.com/flutter-tutorial)
- [Flutter Tutorial for Beginners](https://www.youtube.com/watch?v=1ukSR1GRtMU&list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ)
- [Flutter Tutorial](https://www.w3adda.com/flutter-tutorial)
- [Learn Dart Programming](https://www.tutorialspoint.com/dart_programming/index.htm)
- [12 Ways Flutter Streamlines App Development](https://thenewstack.io/12-ways-flutter-streamlines-app-development/)
",concept
62203,ionic,"Ionic framework is an open-source UI toolkit for building performant, high-quality mobile apps, desktop apps, and progressive web apps using web technologies such as HTML, CSS, and JavaScript.

Visit the following resources to learn more:

- [Official Website](https://ionicframework.com/)
- [Official Getting Started to Ionic framework](https://ionicframework.com/docs/)
- [Ionic Framework 4 - Full Tutorial](https://www.youtube.com/watch?v=AvbuIRg8_Jg)
",concept
623,desktop applications,desktop applications,topic
62300,electron,"Electron allows you to build cross-platform desktop applications with HTML, CSS, and Javascript/Typescript. It uses Chromium and Node.js, so essentially it is a ""Browser"" like application that is compatible with Mac, Windows, and Linux.

Visit the following resources to learn more:

- [Electron Website](https://www.electronjs.org/)
- [Electron Docs](https://www.electronjs.org/docs/latest/)
- [Create a Desktop App With JavaScript & Electron](https://www.youtube.com/watch?v=ML743nrkMHw)
",concept
62301,tauri,"Tauri is a toolkit that helps developers make applications for the major desktop platforms - using virtually any frontend framework in existence. The core is built with Rust, and the CLI leverages Node.js making Tauri a genuinely polyglot approach to creating and maintaining great apps.

Visit the following resources to learn more:

- [Tauri Website](https://tauri.app/)
- [Tauri Docs](https://tauri.app/v1/guides/)
- [How Tauri Turns Web Designs into Compact Native Apps](https://thenewstack.io/how-tauri-turns-web-designs-into-compact-native-apps/)
",concept
62302,flutter,"Flutter is a free and open-source multi-platform UI framework created by Google and released in May 2017. In a few words, it allows you to create a native mobile application with only one codebase. This means that you can use one programming language and one codebase to create three different apps (for iOS, Android and Desktop).

Visit the following resources to learn more:

- [Visit Dedicated Flutter Roadmap](/flutter)
- [Flutter Website](https://flutter.dev)
- [Flutter for Desktop](https://flutter.dev/multi-platform/desktop)
- [Flutter Tutorial](https://www.w3adda.com/flutter-tutorial)
- [Flutter Tutorial for Beginners](https://www.youtube.com/watch?v=1ukSR1GRtMU&list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ)
- [Flutter Tutorial](https://www.w3adda.com/flutter-tutorial)
- [Learn Dart Programming](https://www.tutorialspoint.com/dart_programming/index.htm)
- [12 Ways Flutter Streamlines App Development](https://thenewstack.io/12-ways-flutter-streamlines-app-development/)
",concept
62303,carlo,"Carlo is a headful Node app framework for building desktop applications.

Visit the following resources to learn more:

- [Github Repository](https://github.com/GoogleChromeLabs/carlo)
- [Carlo development on a web server](https://blog.agney.dev/carlo-on-web-server/)
",concept
624,bonus content,"It is not required to complete the bonus content, it just expands on the topics covered in the roadmap and has the items which were missed in the roadmap. Go through them if you want.

- **UI / UX Knowledge** - Gaining UI/UX knowledge is not a must for a Frontend Developer but having an eye for design and a good understanding of UI/UX will help you in your career.
- **[Design Systems](/design-system)** - Learn how to create and work with design systems.
- **Visual Programming** — it is entirely possible to be a successful, competent frontend developer without it, but for many frontend developers this path represents a serious chunk of their workload, and represents a very in-demand option for frontend development – especially for developers who have a visual aptitude.
  - **For Animations**: [GSAP](https://greensock.com/gsap/), [Lottie](https://airbnb.design/lottie/), [Framer Motion](https://github.com/framer/motion) or [MoJs](https://mojs.github.io/)
  - **Web Graphics Library (WebGL)**: [WebGL MDN](https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial), [WebGL Fundamentals](https://webglfundamentals.org/webgl/lessons/webgl-fundamentals.html)
  - **2D Graphics**: [Canvas](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API), [PixiJS](https://pixijs.com/), [PhaserJS](https://phaser.io/)
  - **3D Graphics**: [ThreeJS](https://threejs.org/), [BabylonJS](https://www.babylonjs.com/)
- Have a look at [Qwik](https://qwik.builder.io/) and **[Partytown](https://partytown.builder.io/)**.
- [Houdini](https://developer.mozilla.org/en-US/docs/Web/Guide/Houdini) — Here is a good [introductory article to houdini](https://www.smashingmagazine.com/2020/03/practical-overview-css-houdini/).
- **[WebRTC](https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API)** - WebRTC is a free, open project that provides browsers and mobile applications with Real-Time Communications (RTC) capabilities via simple APIs. The WebRTC components have been optimized to best serve this purpose.
- **[IDLs](https://developer.mozilla.org/en-US/docs/Glossary/IDL)** - Not every developer will have a need for understanding [IDLs](https://developer.mozilla.org/en-US/docs/Glossary/IDL) but there's a good argument for having more JavaScript developers aware of their existence and hopefully the ability for making use of them as well.
- **[WebAssembly](https://developer.mozilla.org/en-US/docs/WebAssembly)** - WebAssembly is a comparatively new technology that allows you to run code written in languages other than JavaScript on the web. It's a low-level assembly-like language with a compact binary format that runs with near-native performance and provides languages such as C/C++ and Rust with a compilation target so that they can run on the web.
",concept
700,html,"HTML stands for HyperText Markup Language. It is used on the frontend and gives the structure to the webpage which you can style using CSS and make interactive using JavaScript.

Visit the following resources to learn more:

- [W3Schools: Learn HTML](https://www.w3schools.com/html/html_intro.asp)
- [Codecademy - Learn HTML](https://www.codecademy.com/learn/learn-html)
- [Interactive HTML Course](https://github.com/denysdovhan/learnyouhtml)
- [HTML Full Course - Build a Website Tutorial](https://www.youtube.com/watch?v=pQN-pnXPaVg)
- [HTML Tutorial for Beginners: HTML Crash Course](https://www.youtube.com/watch?v=qz0aGYrrlhU)
- [HTML and CSS Full Course - Beginner To Pro](https://youtu.be/a_iQb1lnAEQ)
",concept
701,css,"CSS or Cascading Style Sheets is the language used to style the frontend of any website. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.

Visit the following resources to learn more:

- [W3Schools — Learn CSS](https://www.w3schools.com/css/)
- [freeCodeCamp — Responsive Web Design](https://www.freecodecamp.org/learn/2022/responsive-web-design)
- [Learn to Code HTML & CSS](https://learn.shayhowe.com/html-css/building-your-first-web-page/)
- [What The Flexbox!](https://flexbox.io/)
- [Learn CSS | Codecademy](https://www.codecademy.com/learn/learn-css)
- [Learn Intermediate CSS | Codecademy](https://www.codecademy.com/learn/learn-intermediate-css)
- [CSS Crash Course For Absolute Beginners](https://www.youtube.com/watch?v=yfoY53QXEnI)
- [HTML and CSS Tutorial](https://www.youtube.com/watch?v=D-h8L5hgW-w)
- [CSS Masterclass - Tutorial & Course for Beginners](https://www.youtube.com/watch?v=FqmB-Zj2-PA)
",concept
702,checkpoint static websites,"Now that you have learnt HTML and CSS, you should be able to build static webpages. I recommend you to build as many test projects at each yellow step of the roadmap as possible to solidify what you learn. 

The practice that I used to follow when I was learning was this:

- While you are watching a course or reading a book, make sure to code along with the instructor/author — pause the video at regular intervals and code what you are being taught.
- Search on YouTube and watch a few project based tutorials on the topic that you are learning. Apart from coding along with the instructor:
  - Try to build the same project at least 2 to 3 times on your own without looking at the video. If you get stuck, refer to the section of the video where the instructor builds that part of the project.
  - Build something else that is similar to the project that you just built. For example, if you just built a todo app, try to build a notes app or a reminder app.

## Project Ideas

Now that you have learnt HTML and CSS, here are a few ideas for you to build:

- Try to copy the design of a website that you like. 
  - Here is a [simple blog design in figma](https://www.figma.com/file/nh0V05z3NB87ue9v5PcO3R/writings.dev?type=design&node-id=0%3A1&t=2iQplaIojU3ydAfW-1) that you can try to copy.
  - Or try to rebuild the [webpages of this website](https://cs.fyi/).
- Take some inspiration from [personal portfolios of others](https://astro.build/showcase/) and build your own personal portfolio
",concept
703,javascript,"JavaScript allows you to add interactivity to your pages. Common examples that you may have seen on the websites are sliders, click interactions, popups and so on.

Visit the following resources to learn more:

- [W3Schools – JavaScript Tutorial](https://www.w3schools.com/js/)
- [The Modern JavaScript Tutorial](https://javascript.info/)
- [Exploring JS: JavaScript books for programmers](https://exploringjs.com/)
- [JavaScript Crash Course for Beginners](https://youtu.be/hdI2bqOjy3c?t=2)
- [Build a Netflix Landing Page Clone with HTML, CSS & JS](https://youtu.be/P7t13SGytRk)

We also have this [JavaScript roadmap](/javascript). You don't need to follow it right now, just learn from some courses and revisit the roadmap later in your journey.
",concept
704,checkpoint interactivity,"At this point you should be able to add interactivity to your web pages using JavaScript. You should make sure that you have learnt the following:

- Know about variables, loops, data types, conditionals, functions.
- Know about arrays and objects and different ways to access their data.
- Know how to select DOM elements.
- Add event listeners to DOM elements (e.g. click, focus, form submission).
- Use JavaScript to add and remove DOM elements
- Add and remove classes from DOM elements
- Use JavaScript to make HTTP requests to external APIs (i.e. `fetch`)
- Use JavaScript to store data in the browser's local storage

Here are few ideas to practice your skills:

- Create a simple to-do list app that allows users to search, add, edit, and delete items. Use local storage to store the data. 
- Create a simple webpage where user can put in anyone's GitHub username and see their profile information. You can use GitHub's API to fetch the data. For example, here is the [sample URL to fetch my data](https://api.github.com/users/kamranahmedse). Make sure to add validation and error handling.
- Create a basic calculator app that allows users to perform basic arithmetic operations.
",concept
705,npm,"npm is a package manager for the JavaScript programming language maintained by npm, Inc. npm is the default package manager for the JavaScript runtime environment Node.js.

Visit the following resources to learn more:

- [Modern JavaScript for Dinosaurs](https://peterxjang.com/blog/modern-javascript-explained-for-dinosaurs.html)
- [An Absolute Beginners Guide to Using npm](https://nodesource.com/blog/an-absolute-beginners-guide-to-using-npm/)
- [How to NPM](https://github.com/workshopper/how-to-npm)
- [NPM tutorial for Beginners](https://www.youtube.com/watch?v=2V1UUhBJ62Y)
- [NPM Crash Course](https://www.youtube.com/watch?v=jHDhaSSKmB0)
",concept
706,external packages,"At this point, you should be able to install and use external packages using `npm`. You probably know about [npmjs.com](https://npmjs.com/) where you can search for packages and read their documentation. You should also be familiar with the `package.json` file and how to use it to manage your project dependencies.

You don't need to get into the module bundlers and build tools just yet. Just make sure that you are able to use the dependencies installed in the `node_modules` folder using simple link and script tags in your HTML.

Regarding projects, here are a few ideas that you can try:

- Create a simple webpage that shows the current time of user. You can use use [dayjs](https://day.js.org/) to get the current time and display it on the page. Here is the [sample design for homepage](https://i.imgur.com/yGIMGkr.png). 
- Install the [micromodal](https://micromodal.vercel.app/#introduction) library. Create a button on the page clicking which should open a modal and let the user select a timezone from a dropdown. Once the user selects a timezone, the modal should close and the time on the page should be updated to show the time in the selected timezone. Here is the [sample design for the modal](https://imgur.com/a/vFY6Sdl).
",concept
707,git,"[Git](https://git-scm.com/) is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Visit the following resources to learn more:

- [Git & GitHub Crash Course For Beginners](https://www.youtube.com/watch?v=SWYqp7iY_Tc)
- [Learn Git with Tutorials, News and Tips - Atlassian](https://www.atlassian.com/git)
- [Git Cheat Sheet](https://cs.fyi/guide/git-cheatsheet)
- [Git Tutorial For Dummies](https://www.youtube.com/watch?v=mJ-qvsxPHpY)
",concept
708,github,"GitHub is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitHub Website](https://github.com)
- [GitHub Documentation](https://docs.github.com/en/get-started/quickstart)
- [How to Use Git in a Professional Dev Team](https://ooloo.io/project/github-flow)
- [What is GitHub?](https://www.youtube.com/watch?v=w3jLJU7DT5E)
- [Git vs. GitHub: Whats the difference?](https://www.youtube.com/watch?v=wpISo9TNjfU)
- [Git and GitHub for Beginners](https://www.youtube.com/watch?v=RGOj5yH7evk)
- [Git and GitHub - CS50 Beyond 2019](https://www.youtube.com/watch?v=eulnSXkhE7I)
",concept
709,collaborative work,"Now that you have learnt git and GitHub you should be ready to work with others. You should now setup your GitHub profile and push all the projects that you have built so far to your GitHub profile. Here are some of my recommendations for your GitHub profile:

- Keep the repository names lowercase and use hyphens to separate words e.g. `todo-app` instead of `TodoApp` or `Todo-App`.
- Add a `README.md` file to each repository that you create. This file should contain a description of the project. Put some effort into the readme and make sure it clearly details what the project is about and how anyone can run it locally.
- Add snapshots of your project to the readme file so that anyone can see what the project looks like without having to run it locally.
- Add a `LICENSE` file to each repository that you create. This file should contain the license that you want to use for the project. You can use [choosealicense.com](https://choosealicense.com/) to help you choose a license.

You can have a look at [my GitHub profile](https://github.com/kamranahmedse) and see how I have structured my repositories and how [some of my readme files look like](https://github.com/kamranahmedse/aws-cost-cli).
",concept
710,tailwind,"CSS Framework that provides atomic CSS classes to help you style components e.g. `flex`, `pt-4`, `text-center` and `rotate-90` that can be composed to build any design, directly in your markup.

Visit the following resources to learn more:

- [Tailwind Website](https://tailwindcss.com)
- [Tailwind CSS Full Course for Beginners](https://www.youtube.com/watch?v=lCxcTsOHrjo)
- [Tailwind CSS Crash Course](https://www.youtube.com/watch?v=UBOj6rqRUME)
- [Should You Use Tailwind CSS?](https://www.youtube.com/watch?v=hdGsFpZ0J2E)
- [Official Screencasts](https://www.youtube.com/c/TailwindLabs/videos)
",concept
711,react,"React is the most popular front-end JavaScript library for building user interfaces. React can also render on the server using Node and power mobile apps using React Native.

Visit the following resources to learn more:

- [Visit Dedicated React Roadmap](/react)
- [React Website](https://reactjs.org/)
- [Official Getting Started](https://reactjs.org/tutorial/tutorial.html)
- [The Beginners Guide to React](https://egghead.io/courses/the-beginner-s-guide-to-react)
- [React JS Course for Beginners](https://www.youtube.com/watch?v=nTeuhbP7wdE)
- [React Course - Beginners Tutorial for React](https://www.youtube.com/watch?v=bMknfKXIFA8)
- [Understanding Reacts UI Rendering Process](https://www.youtube.com/watch?v=i793Qm6kv3U)
",concept
712,frontend apps,"At this point you should be able to build a complete frontend application including:

- Structuring your webpages with HTML
- Styling your webpages with CSS
- Adding interactivity to your webpages with JavaScript
- Using the DOM API to manipulate your webpages
- Using the Fetch API to make HTTP requests
- Understand promises and use `async`/`await` syntax to write asynchronous code
- Installing and using external libraries with npm
- Version controlling your code with Git
- Pushing your code to GitHub

If you decided to skip React and Tailwind for now, that is fine also but you should be able to build a complete frontend application using vanilla HTML, CSS, and JavaScript. However, keep in mind that the modern frontend applications are mostly built with frameworks like React, Vue, and Angular. So, you should learn at least one of them at any point of time.

This marks the end of frontend basics that you needed, we will now be moving to the backend development. While you continue with the backend development, know that there is more to frontend development and remember to checkout the [frontend roadmap](/frontend) later in your journey.
",concept
713,nodejs,"Node.js is an open-source and cross-platform JavaScript runtime environment. It is a popular tool for almost any kind of project! Node.js runs the V8 JavaScript engine, Google Chrome's core, outside the browser. This allows Node.js to be very performant. A Node.js app runs in a single process, without creating a new thread for every request. Node.js provides a set of asynchronous I/O primitives in its standard library that prevent JavaScript code from blocking and generally, libraries in Node.js are written using non-blocking paradigms, making blocking behavior the exception rather than the norm.

Visit the following resources to learn more:

- [Official Website](https://nodejs.org/en/about/)
- [Learn Node.js Official Website](https://nodejs.dev/en/learn/)
- [Node.JS Introduction](https://www.w3schools.com/nodejs/nodejs_intro.asp)
- [Node.js and Express.js Full Course](https://www.youtube.com/watch?v=Oe421EPjeBE)",concept
714,cli apps,"At this point you should be able to build CLI applications using Node.js or whatever backend programming language you picked.

You should be able to build a CLI application that can:

- Read and write files
- Parse command line arguments
- Make HTTP requests
- Parse JSON
- Use a third-party library (e.g. a library for parsing CSV files)
- Use a third-party API

Here are some ideas for CLI applications you can build: 

- Create a CLI application that takes a URL and a CSS selector arguments and prints the text content of the element that matches the selector. **Hint** you can use [cheerio](https://github.com/cheeriojs/cheerio)
- An application that takes optionally takes two dates and prints the most starred GitHub projects in that date range. **Hint** you can use [GitHub's search API](https://developer.github.com/v3/search/#search-repositories)
- Bulk rename files in a directory. **Hint** you can use [fs](https://nodejs.org/api/fs.html) and [path](https://nodejs.org/api/path.html)
- Write a CLI application that takes a path as input and compresses all the images in that directory. It should accept an option for output path; if the output path is not given it should compress images in place otherwise write the compressed images to the output path. **Hint** you can use [sharp](https://github.com/lovell/sharp).
",concept
715,postgresql,"PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance.

Visit the following resources to learn more:

- [Visit Dedicated PostgreSQL DBA Roadmap](/postgresql-dba)
- [Official Website](https://www.postgresql.org/)
- [Learn PostgreSQL - Full Tutorial for Beginners](https://www.postgresqltutorial.com/)
- [Learn PostgreSQL Tutorial - Full Course for Beginners](https://www.youtube.com/watch?v=qw--VYLpxG4)
- [Postgres tutorial for Beginners](https://www.youtube.com/watch?v=eMIxuk0nOkU)
",concept
716,crud,"**CRUD** stands for **Create, Read, Update, and Delete**. These are the four basic operations you can perform on any data when working with web applications, databases, and APIs.

Now that you know about programming language and the databases, you should be able to build a simple CLI application that interacts with database. We haven't talked about the APIs yet but you don't need an API to practice CRUD operations. Here are some of the CLI applications you can build to practice CRUD operations:

- A simple todo list application for the CLI with the following options:
  - `--new` to add a new todo item
  - `--list [all|pending|done]` to list the todo items
  - `--done [id]` to update a todo item
  - `--delete [id]` to delete a todo item
  - `--help` to list all the available options
  - `--version` to print the version of the application
",concept
717,restful apis,"REST, or REpresentational State Transfer, is an architectural style for providing standards between computer systems on the web, making it easier for systems to communicate with each other.

Visit the following resources to learn more:

- [What is REST?](https://www.codecademy.com/article/what-is-rest)
- [What is a REST API?](https://www.redhat.com/en/topics/api/what-is-a-rest-api)
- [Roy Fieldings dissertation chapter, Representational State Transfer (REST)](https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm)
- [Learn REST: A RESTful Tutorial](https://restapitutorial.com/)
",concept
718,jwt auth,"JWT stands for JSON Web Token is a token-based encryption open standard/methodology that is used to transfer information securely as a JSON object. Clients and Servers use JWT to securely share information, with the JWT containing encoded JSON objects and claims. JWT tokens are designed to be compact, safe to use within URLs, and ideal for SSO contexts.

Visit the following resources to learn more:

- [jwt.io Website](https://jwt.io/)
- [Introduction to JSON Web Tokens](https://jwt.io/introduction)
- [What is JWT?](https://www.akana.com/blog/what-is-jwt)
- [What Is JWT and Why Should You Use JWT](https://www.youtube.com/watch?v=7Q17ubqLfaM)
- [What is JWT? JSON Web Token Explained](https://www.youtube.com/watch?v=926mknSW9Lo)
- [JWT Authentication Tutorial - Node.js](https://www.youtube.com/watch?v=mbsmsi7l3r4)
",concept
719,redis,"Redis is an open source (BSD licensed), in-memory **data structure store** used as a database, cache, message broker, and streaming engine. Redis provides data structures such as [strings](https://redis.io/topics/data-types-intro#strings), [hashes](https://redis.io/topics/data-types-intro#hashes), [lists](https://redis.io/topics/data-types-intro#lists), [sets](https://redis.io/topics/data-types-intro#sets), [sorted sets](https://redis.io/topics/data-types-intro#sorted-sets) with range queries, [bitmaps](https://redis.io/topics/data-types-intro#bitmaps), [hyperloglogs](https://redis.io/topics/data-types-intro#hyperloglogs), [geospatial indexes](https://redis.io/commands/geoadd), and [streams](https://redis.io/topics/streams-intro). Redis has built-in [replication](https://redis.io/topics/replication), [Lua scripting](https://redis.io/commands/eval), [LRU eviction](https://redis.io/topics/lru-cache), [transactions](https://redis.io/topics/transactions), and different levels of [on-disk persistence](https://redis.io/topics/persistence), and provides high availability via [Redis Sentinel](https://redis.io/topics/sentinel) and automatic partitioning with [Redis Cluster](https://redis.io/topics/cluster-tutorial).

Visit the following resources to learn more:

- [Redis Website](https://redis.io/)
- [Redis in 100 Seconds](https://www.youtube.com/watch?v=G1rOthIU-uo)
- [Redis Caching in Node.js](https://www.youtube.com/watch?v=oaJq1mQ3dFI)
",concept
720,complete app,"At this point, you should have everything that you need to build a complete application that:

- Has a responsive frontend that users can interact with
- Has a backend API that is secured with JWT authentication
- Has a database that stores data

At this point you should practice building as much as you can on your own to solidify your knowledge. If you need inspiration, here are some ideas:

- Build a simple blogging application where users can register, login, setup their blog and write posts.
- A single page site builder where users can pick a template, modify it and publish it. **Hint** you will need filesystem to store the design templates. Template files will have placeholders that you will need to replace with user data.
- Build a simple e-commerce application which will have two types of users i.e. **Sellers** who can: Register as Seller, Login, Setup their store, Add products, Edit products, Delete products, View Received Orders, Update Order Status (Pending, Shipped, Delivered), **Buyers** who can register, Login, Browse products by all sellers, Add products to cart, Checkout, View order history, View order status, Cancel order, View seller profile, View seller products

These are just some ideas to get you started. You can build anything you want. The goal is to practice building a complete application from scratch.
",concept
721,linux basics,"Knowledge of UNIX is a must for almost all kind of development as most of the codes that you write is most likely going to be finally deployed on a UNIX/Linux machine. Linux has been the backbone of the free and open source software movement, providing a simple and elegant operating system for almost all your needs.

Visit the following resources to learn more:

- [Linux Operating System - Crash Course](https://www.youtube.com/watch?v=ROjZy1WbCIA)
- [Coursera - Unix Courses](https://www.coursera.org/courses?query=unix)
- [Linux Basics](https://dev.to/rudrakshi99/linux-basics-2onj)
- [Unix / Linux Tutorial](https://www.tutorialspoint.com/unix/index.htm)
",concept
722,basic aws services,basic aws services,topic
72200,ec2,"Amazon Elastic Compute Cloud (EC2) is a web service that provides resizable compute capacity in the form of virtual servers, known as instances. With EC2, you can quickly scale your infrastructure up or down as your computing requirements change. This service effectively reduces the time required to obtain and boot new server instances, allowing you to easily adjust capacity according to the needs of your application.

- [Deploy Node App on AWS EC2](https://youtu.be/oHAQ3TzUTro)
- [Up and Running with AWS EC2](https://cs.fyi/guide/up-and-running-with-aws-ec2)
- [EC2 Essentials](https://cloudcasts.io/course/ec2-essentials)
",concept
72201,vpc,"VPC stands for **Virtual Private Cloud** and is an essential service provided by AWS that allows you to create a private, isolated section within the AWS cloud, where you can define your own virtual network. It offers a more secure and controlled environment, enabling you to easily launch and manage your resources within your personal network.

- [AWS VPC & Subnets For Beginners](https://youtu.be/TUTqYEZZUdc)
- [Up and Running with AWS VPC](https://cs.fyi/guide/up-and-running-with-aws-vpc)
- [VPC Basics](https://cloudcasts.io/course/vpc-basics)
",concept
72203,route53,"[Route53](https://aws.amazon.com/route53/) is AWS's Domain Name System (DNS) service that plays a critical role in connecting user requests to your web application or other resources within your infrastructure. With Route53, you can easily manage domains, redirect traffic, and configure domain-related settings. It has several advantages, including high availability, low latency, and integration with other AWS resources.

- [Amazon Route 53](https://www.youtube.com/watch?v=RGWgfhZByAI)
- [AWS Route 53 Domain Name](https://www.youtube.com/watch?v=jDz4j_kkyLA)
- [DNS with AWS Route 53](https://www.youtube.com/watch?v=yRIY7BJohfo&t=2s)
",concept
72204,ses,"Amazon SES (Simple Email Service) is a scalable, flexible, and cost-effective cloud-based email service that is specifically designed for developers, marketers, and businesses to send and receive marketing, transactional, and notification emails. SES is useful, especially when you need to send a large volume of emails, as it offers high deliverability, reliability, and ease of use.

- [Contact Form Submission With AWS SES](https://www.youtube.com/watch?v=HiHflLTqiwU)
",concept
72205,s3,"S3 is a service that allows you to store files in the cloud. It's a simple service that you can use to store files and serve them to your users.

- [Upload Images to S3 from Node Back End](https://www.youtube.com/watch?v=NZElg91l_ms)
- [S3 Bucket Hosting a Static Website](https://www.youtube.com/watch?v=RoY3ekCCxKc&list=PL0X6fGhFFNTcU-_MCPe9dkH6sqmgfhy_M)
",concept
723,deployment,"Now that you know the basics of AWS, you should be able to deploy your application to AWS. You don't need to use all the AWS services, here is what you can probably get started with:

- Setup an EC2 instance using any AMI (e.g. latest version of Ubuntu)
- SSH into the EC2 instance using the key pair you created
- Install Node.js on the EC2 instance
- Install Git on the EC2 instance
- Clone your application from GitHub
- Install and configure database on the EC2 instance (e.g. PostgreSQL)
- Make sure that the security group of the EC2 instance allows HTTP and HTTPS traffic
- Try to access your application using the public IP address of the EC2 instance
- Purchase or setup a domain name using Route53 (or any other domain name provider) and point it to the public IP address of the EC2 instance
- Setup HTTPs using [certbot](https://roadmap.sh/guides/setup-and-auto-renew-ssl-certificates)
- And voilla! You have deployed your application to AWS!

If you get stuck, here is a video that shows how to deploy a Node.js application to AWS EC2: 

- [Deploy Node App on AWS EC2](https://youtu.be/oHAQ3TzUTro)
",concept
724,monit,"When it comes to monitoring the health of your applications, there are several different options available. My favorite monitoring stack is Prometheus and Grafana, but it can be a bit overwhelming to set up and configure. If you're looking for a simpler solution, **Monit** is a great alternative that can be utilized to monitor and manage system resources such as services, processes, files, directories, devices, and network connections, making your application more reliable and resilient to issues like crashes, unresponsiveness, or resource exhaustion.

Some of the key features of Monit are:

- **Automatic Recovery:** Monit can automatically restart a service or process if it fails, making your application more resistant to unexpected issues.
- **Alert Notifications:** Monit can send email notifications when a problem is detected or when a certain condition is met, keeping you informed about the health of your application.
- **Event Logging:** All events detected by Monit are stored in a log for easy troubleshooting and analysis.
- **Resource Limit Monitoring:** Monit can monitor the resource utilization (CPU, memory, network, etc.) of a process or service and take action if a specific limit is exceeded.
- **Flexible Configuration:** Monit uses a simple, human-readable configuration syntax that allows you to tailor its behavior to your needs.
- **Web Interface:** Monit provides a built-in web interface for remotely monitoring your application's status and manage services.

Have a look at the following resources to learn more about Monit:

- [Monit - Opensource Self Healing Server Monitoring](https://www.youtube.com/watch?v=3cA5lNje1Ow)
- [Monit documentation](https://mmonit.com/monit/documentation/)
",concept
725,monitoring,"You should now implement monitoring and autorestarts for your application using monit. Regarding autorestarts, you can also use [pm2](https://pm2.keymetrics.io/).

Here are some of the monitors you should implement for the application.

- CPU Usage
- Memory Usage
- Disk Usage
- Network Usage
- Service Availability
- Process Availability

Monit comes with existing configurations for many services. You can find them in `/etc/monit/conf-available`. You can copy them (and modify if required) to `/etc/monit/conf-enabled` to enable them.
",concept
726,github actions,"GitHub Actions is a workflow automation tool provided by GitHub that can be used to automate various tasks in the app development process.

- [Github Actions](https://github.com/features/actions)
- [Github Actions Documentation](https://docs.github.com/en/actions)
- [5 Ways to DevOps-ify your App](https://www.youtube.com/watch?v=eB0nUzAI7M8)
- [DevOps CI/CD Explained in 100 Seconds](https://www.youtube.com/watch?v=scEDHsr3APg)
",concept
727,ci cd,"Now that you have the infrastructure setup, it's time to automate the deployment process. This is where CI / CD comes in. If you don't know what CI/CD are, you should watch [DevOps CI/CD Explained in 100 Seconds](https://www.youtube.com/watch?v=scEDHsr3APg).

The next step at this point is to implement CI/CD for your application using GitHub actions. Setup a GitHub action that, whenever you push to master, will automatically:

- Run your tests (ignore this step if you haven't learnt it yet) 
- Deploy your application to AWS

Regarding the deployment to AWS you can use `rsync` to copy the files to the server. Here's a [sample GitHub workflow](https://gist.github.com/kamranahmedse/1e94b412006040f38e24b9443b2da41a) using `rsync`.
",concept
728,ansible,"Ansible is an open-source configuration management, application deployment and provisioning tool that uses its own declarative language in YAML. Ansible is agentless, meaning you only need remote connections via SSH or Windows Remote Management via Powershell in order to function

Visit the following resources to learn more:

- [Ansible Website](https://www.ansible.com/)
- [Official Documentation](https://docs.ansible.com/)
- [Ansible Getting Started Guide](https://www.ansible.com/resources/get-started)
- [Ansible Full Course for Beginners](https://www.youtube.com/watch?v=9Ua2b06oAr4)
",concept
729,automation,"Now that you have learnt ansible, you can use it to automate the deployment of your application. 

A task for you at this point would be to automate the steps that you manually performed earlier when setting up the EC2 instance i.e. SSH into the server, install Node.js, Git, PostgreSQL, Running the application etc. Write an ansible playbook that automates these and see if you can spin up a new EC2 instance without SSHing into it and manually installing all the dependencies.
",concept
730,terraform,"Terraform is an extremely popular open source Infrastructure as Code (IaC) tool that can be used with many different cloud and service provider APIs. Terraform focuses on an immutable approach to infrastructure, with a terraform state file center to tracking the status of your real world infrastructure.

Visit the following resources to learn more:

- [Terraform Website](https://www.terraform.io/)
- [Terraform Documentation](https://www.terraform.io/docs)
- [Terraform Tutorials](https://learn.hashicorp.com/terraform)
- [Intro to Terraform Video](https://www.youtube.com/watch?v=h970ZBgKINg&ab_channel=HashiCorp)
- [Terraform CDK Website](https://www.terraform.io/cdktf)
- [What is the CDKTF?](https://www.terraform.io/cdktf/concepts/cdktf-architecture)
- [CDKTF Getting Started Guide](https://learn.hashicorp.com/tutorials/terraform/cdktf-install?in=terraform/cdktf)
- [CDKTF Examples](https://www.terraform.io/cdktf/examples)
- [How to Scale Your Terraform Infrastructure](https://thenewstack.io/how-to-scale-your-terraform-infrastructure/)
",concept
731,infrastructure,"If you remember, earlier in the roadmap, you manually logged into the AWS console and had to setup the services. Now that you know terraform, go ahead and automate the process of creating the infrastructure for your application using terraform and with that your deployments will be fully automated i.e., you should have:

- Infrastructure setup using terraform
- Provisioning using Ansible
- CI/CD using GitHub Actions
- Monitoring using Monit

And that is it! You have successfully completed the roadmap and are now a full-stack developer. Congratulations! 🎉

## What's next?

Go ahead and build something cool! Share your learnings with the community and help others learn as well. If you have any questions, feel free to join our [discord server](https://discord.gg/cJpEt5Qbwa) and ask away!
",concept
800,game mathematics,game mathematics,topic
80000,linear algebra,"Linear Algebra is a vital field in Mathematics that is extensively used in game development. It revolves around vector spaces and the mathematical structures used therein, including matrices, determinants, vectors, eigenvalues, and eigenvectors, among others. In the context of game development, linear algebra is used mainly for computer graphics, physics, AI, and many more. It allows developers to work with spatial transformations, helping them manipulate and critically interact with the 3D space of the game. On a broader context, it is important in computer programming for algorithms, parallax shifting, polygonal modeling, collision detection, etc. From object movements, positional calculations, game physics, to creating dynamism in games, linear algebra is key.",concept
80001,vector,"`Vector` in game development is a mathematical concept and an integral part of game physics. It represents a quantity that has both magnitude and direction. A vector can be used to represent different elements in a game like positions, velocities, accelerations, or directions. In 3D games, it's commonly used to define 3D coordinates (x, y, z). For example, if you have a character in a game and you want to move it up, you'd apply a vector that points upward. Hence, understanding how to manipulate vectors is a fundamental skill in game development.",concept
80002,matrix,"In game development, a **matrix** is a fundamental part of game mathematics. It's a grid of numbers arranged into rows and columns that's particularly important in 3D game development. These matrices are typically 4x4, meaning they contain 16 floating point numbers, and they're used extensively for transformations. They allow for the scaling, rotation, and translation (moving) of 3D vertices in space. With matrices, these transformations can be combined, and transformed vertices can be used to draw the replicas of 3D models into 2D screen space for rendering.",concept
80003,geometry,"Geometry in game development refers to the mathematical study used to define the spatial elements within a game. This is vital in determining how objects interact within a game's environment. Particularly, geometry is employed in various aspects like object rendering, collision detection, character movement, and the calculation of angles and distance. It allows developers to create the spatial parameters for a game, including object dimensions and orientations. Understanding the basics such as 2D vs 3D, polygons, vertices, meshes and more advanced topics such as vectors, matrices, quaternions etc. is crucial to this field.",concept
80004,linear transformation,"`Linear transformations` or `linear maps` are an important concept in mathematics, particularly in the fields of linear algebra and functional analysis. A linear transformation can be thought of as a transformation that preserves the operations of addition and scalar multiplication. In other words, a transformation T is linear if for every pair of vectors `x` and `y`, the equation T(x + y) = T(x) + T(y) holds true. Similarly, for any scalar `c` and any vector `x`, the equation T(cx)=cT(x) should also hold true. This property makes them very useful when dealing with systems of linear equations, matrices, and in many areas of computer graphics, including game development.",concept
80005,affine space,"In the context of game mathematics, an **Affine Space** is a fundamental concept you should understand. It is a geometric structure with properties related to both geometry and algebra. The significant aspect of an affine space is that it allows you to work more comfortably with points and vectors. While a vector space on its own focuses on vectors which have both magnitude and direction, it does not involve points. An affine space makes it easy to add vectors to points or subtract points from each other to get vectors. This concept proves extremely useful in the field of game development, particularly when dealing with graphical models, animations, and motion control.",concept
80006,affine transformation,"An **affine transformation**, in the context of game mathematics, is a function between affine spaces which preserves points, straight lines and planes. Also, sets of parallel lines remain parallel after an affine transformation. In video games, it's typically used for manipulating an object's position in 3D space. This operation allows game developers to perform multiple transformations such as translation (moving an object from one place to another), scaling (changing the size of an object), and rotation (spinning the object around a point). An important feature of affine transformation is that it preserves points uniqueness; if two points are distinct to start with, they remain distinct after transformation. It's important to note that these transformations are applied relative to an object's own coordinate system, not the world coordinate system.",concept
80007,curve,curve,topic
8000700,spline,"`Spline` is a mathematical function widely used in computer graphics for generating curves and surfaces. It connects two or more points through a smooth curve, often used in games for defining pathways, movement paths, object shapes, and flow control. Splines are not confined to two dimensions and can be extended to 3D or higher dimensions. Types of splines include `Linear`, `Cubic`, and `Bezier` splines. While linear splines generate straight lines between points, cubic and bezier splines provide more control and complexity with the addition of control points and handles. Developing a good understanding of splines and their usage can vastly improve the fluidity and visual aesthetics of a game.",concept
8000701,hermite,"Hermite refers to Hermite interpolation, a fundamental technique in game development for executing smooth transitions. Essentially, Hermite interpolation is an application of polynomial mathematics, with two points applied as start/end (they're usually 3D positional vectors), and the tangents at these points controlling the curve's shape. The technique's name is derived from its inventor, Charles Hermite, a French mathematician. Hermite interpolation can be useful in different aspects of game development, such as creating smooth animations, camera paths, or motion patterns. Note, however, that while Hermite interpolation offers control over the start and end points of a sequence, it might not precisely predict the curve's full behavior.",concept
8000702,bezier,"`Bezier curves` are named after Pierre Bezier, a French engineer working at Renault, who used them in the 1960s for designing car bodies. A Bezier curve is defined by a set of control points with a minimum of two but no upper limit. The curve is calculated between the first and the last control point and does not pass through the controlling points, which only influence the direction of the curve. There are linear, quadratic, and cubic Bezier curves, but curves with more control points are also possible. They are widely used in computer graphics, animations, and are extensively used in vector images and tools to create shapes, texts, and objects.",concept
8000703,catmull rom,"The **Catmull-Rom** spline is a form of interpolation used in 2D and 3D graphics. Named after Edwin Catmull and Raphael Rom, it offers a simple way to smoothly move objects along a set of points or, in terms of graphics, to smoothly draw a curve connecting several points. It's a cubic interpolating spline, meaning it uses the cubic polynomial to compute coordinates. This makes Catmull-Rom ideal for creating smooth and natural curves in graphics and animation. It also has a feature called C1 continuity, ensuring the curve doesn't have any abrupt changes in direction. However, if not managed properly, it can create loops between points.",concept
80008,orientation,orientation,topic
8000800,quaternion,"The **quaternion** is a complex number system that extends the concept of rotations in three dimensions. It involves four components: one real and three imaginary parts. Quaternions are used in game development for efficient and accurate calculations of rotations and orientation. They are particularly useful over other methods, such as Euler angles, due to their resistance to problems like Gimbal lock. Despite their complex nature, understanding and implementing quaternions can greatly enhance a game's 3D rotational mechanics and accuracy.",concept
8000801,euler angle,"The **Euler angle** is a concept in mathematics and physics used to describe the orientation of a rigid body or a coordinate system in 3D space. It uses three angles, typically named as alpha (α), beta (β), and gamma (γ), and represents three sequential rotations around the axes of the original coordinate system. Euler angles can represent any rotation as a sequence of three elementary rotations. Keep in mind, however, that Euler angles are not unique, and different sequences of rotations can represent identical total effects. It's also noteworthy that Euler angles are prone to a problem known as gimbal lock, where the first and third axis align, causing a loss of a degree of freedom, and unpredictable behavior in particular orientations.",concept
80009,projection,projection,topic
8000900,perspective,"In game development, **Perspective** plays a significant role in creating a three-dimensional world on a two-dimensional space. It mimics the way our eyes perceive distance and depth, with objects appearing smaller as they go farther away. Essentially, this is achieved by projecting 3D co-ordinates on a virtual screen. Perspective projection is done in two types - one-point where only one axis displays a change in size with depth and two-point where both axis display a change. It creates more realistic views, enhancing game visualization and immersion. An important aspect is the player's viewpoint, which is the vanishing point where parallel lines converge in the distance.",concept
8000901,orthogonal,"Orthogonal projection, or orthographic projection, is a type of parallelogram projection in game development where the lines of projection are perpendicular to the projection plane. This creates a view that is straight-on, essentially removing any form of perspective. Unlike perspective projection where objects further from the viewer appear smaller, objects in orthogonal projection remain the same size regardless of distance. The lack of perspective in orthogonal projection can be useful for specific types of games like platformers or strategy games. It is commonly used in CAD (Computer-Aided Design) and technical drawings as well.",concept
801,game physics,game physics,topic
80100,dynamics,dynamics,topic
8010000,center of mass,"The **center of mass** is a position defined relative to an object or system of objects. Typically denoted by the symbol \(COM\), it refers to the average position of all the parts of the system, weighted according to their masses. For instance, if you have a uniformly dense object, the center of mass would be in the geometric center of that object. In gaming, the center of mass of an object can have a significant impact on how the object behaves when forces are applied to it. This includes how the object moves in response to these forces, and can affect the realism of the physics simulations in a game.",concept
8010001,acceleration,"**Acceleration** refers to the rate of change in velocity per unit time. This physical concept is translated into game dynamics where it impacts the movement and speed of game characters or objects. For example, when a character starts moving, there is usually a slight delay before they reach their top speed, which then continues as long as the move button is held down. This is caused by acceleration. Conversely, when the button is released, the character doesn't stop instantly but slows down gradually - this is due to deceleration, which is negative acceleration. By mastering acceleration and deceleration, game developers can create more realistic and interesting movements for their characters.",concept
8010002,force,"**Force** is a vital concept in game development, especially when crafting physics in games. In the context of game physics, 'Force' is an influence that causes an object to undergo a certain change, either concerning its movement, direction, or geometrical construction. It's typically implemented in game engines, with part of the physics simulation that computes forces like gravity, friction, or custom forces defined by the developer. Incorporating forces gives a realistic feel to the game, allowing objects to interact naturally following the laws of physics. This is central in genres like racing games, sports games, and any game featuring physical interactions between objects. Remember that `F = ma`, the acceleration of an object is directly proportional to the force applied and inversely proportional to its mass. The balance and manipulation of these forces are integral to dynamic, immersive gameplay.",concept
8010003,angular velocity,"Angular velocity, denoted by the symbol 'ω', is a measure of the rate of change of an angle per unit of time. In simpler terms, it corresponds to how quickly an object moves around a circle or rotates around a central point. Angular velocity is typically measured in radians per second (rad/s). If you think of an object moving in a circular path, the angular velocity would be the speed at which the angle changes as the object travels along the circumference of the object. Angular velocity is a vector quantity, implying it has both magnitude and direction. The direction of the angular velocity vector is perpendicular to the plane of rotation, following the right-hand rule. It plays a crucial role in game development, especially in physics simulation and character control.",concept
8010004,linear velocity,"**Linear Velocity** is a fundamental concept in physics that is extensively used in game development. It refers to the rate of change of an object's position with respect to a frame of reference. It's calculated by dividing the change in position by the change in time, often represented with the vector 'v'. In game development, an object's linear velocity can be manipulated to control its speed and direction. This is especially important in the development of physics simulations or movement-dependent gameplay elements. For instance, it can be used to make a character run or drive, or to throw an object at different speeds and directions.",concept
8010005,moment of inertia,"The **moment of inertia**, also known as rotational inertia, is a measure of an object's resistance to changes to its rotation. In simpler terms, it's essentially how difficult it is to start or stop an object from spinning. It is determined by both the mass of an object and its distribution of mass around the axis of rotation. In the context of game development, the moment of inertia is crucial for creating realistic movements of characters, objects or vehicles within the game. This is particularly relevant in scenarios where the motion involves spinning or revolving entities. Calculating and applying these physics ensures a more immersive and believable gaming experience.",concept
8010006,joints,"Joints in game development primarily refer to the connections between two objects, often used in the context of physics simulations and character animations. These might simulate the physics of real-world joints like hinges or springs. Developers can control various characteristics of joints such as their constraints, forces, and reactions. The different types come with various properties suitable for specific needs. For example, Fixed joints keep objects together, Hinge joints allow rotation around an axis, and Spring joints apply a force to keep objects apart.",concept
8010007,restitution,"In game development, **Restitution** is a property closely related to the physics of objects. Essentially, restitution represents the ""bounciness"" of an object or, in more scientific terms, the ratio of the final relative velocity to the initial relative velocity of two objects after a collision. In the context of game physics, when objects collide, restitution is used to calculate how much each object should bounce back or recoil. Restitution values typically fall between 0 and 1 where a value of 0 means an object will not bounce at all and a value of 1 refers to a perfectly elastic collision with no energy lost. Therefore, the higher the restitution value, the higher the bounce back of the object after a collision.",concept
8010008,buoyancy,"**Buoyancy** refers to a specific interaction in physics where an object submerged in fluid (such as a game character in water) experiences an upward force that counteracts the force of gravity. This makes the object either float or appear lighter. In game development, implementing buoyancy can enhance realism particularly in games that involve water-based activities or environments. Buoyancy can be manipulated through adjustments in density and volume to create various effects - from making heavy objects float to sinking light ones. Calculating it typically requires approximating the object to a sphere or another simple geometric shape, and using this in Archimedes' Principle. This principle states that buoyant force equals the weight of the fluid that the object displaces. In the realm of video games, programming buoyancy can involve complex physics equations and careful testing to achieve a balance between realism and playability.",concept
8010009,friction,"`Friction` is a crucial concept in game dynamics. In the context of games, it's typically used to slow down or impede movement, providing a realistic feel to characters or objects movement. For example, when a player's character runs on a smooth surface as compared to a rough one, friction influences the speed and control of that character. It can be seen in how cars skid on icy surfaces, how walking speed changes depending on the terrain, or how a ball rolls and eventually slows. The equation to compute friction is usually `f = μN`, where `f` is the force of friction, `μ` is the coefficient of friction (which depends on the two surfaces interacting), and `N` is the normal force (which is generally the weight of the object). You can adjust the coefficient of friction in a game to have different effects depending upon the desired outcome.",concept
80101,collision detection,collision detection,topic
8010100,ccd,"**CCD (Continuous Collision Detection)** is a sophisticated technique used in detecting collisions within games, more advanced than the traditional discrete collision. Rather than checking for collisions at designated time frames, CCD checks for any possible collisions that may happen during the entire time period or motion path of the moving object. This can prevent instances of ""tunneling"", where an object moves so fast that it passes through walls or obstacles undetected by discrete collision detection due to being at different points in one frame to another. Although more computationally heavy than discrete detection, CCD offers an increased accuracy in collision detection, making it vital in games where precise movements are needed.",concept
8010101,narrow phase,narrow phase,topic
801010100,intersection,intersection,topic
80101010000,sat,"`Sat`, or separating axis theorem, is frequently used in collision detection in game development. Its primary benefit is for simple and fast detection of whether two convex polygons intersect. The theorem is somewhat complex—it works by projecting all points of both polygons onto numerous axes around the shapes, then checking for overlaps. However, it can be relatively time-consuming when dealing with more complex models or numerous objects as it has to calculate the projections, so often it is used in a broad-phase detection system. A deep explanation of how `sat` works might involve some mathematical concepts or visual aids, but this is the foundation of its use in game development.",concept
80101010001,gjk,"The **GJK algorithm** (Gilbert–Johnson–Keerthi) is a computational geometry algorithm that is widely used to detect collisions between convex objects in video games and simulations. The primary role of this algorithm is to assess the intersection between two convex shapes. What makes it unique and widely used is its efficiency and accuracy even when dealing with complex three-dimensional shapes. It uses the concept of ""Minkowski Difference"" to simplify its calculations and determine if two shapes are intersecting.

The algorithm works iteratively, beginning with a single point (the origin) and progressing by adding vertices from the Minkowski Difference, each time refining a simple 'guess' about the direction of the nearest point to the origin until it either concludes that the shapes intersect (the origin is inside the Minkowski difference), or until it can't progress further, in which case the shapes are confirmed not to intersect. This makes it an incredibly powerful and useful tool for game developers.",concept
80101010002,epa,"The **EPA**, also known as the *Environmental Protection Agency*, is not typically related to game development or the concept of intersection within this context. However, in game development, EPA might refer to an 'Event-driven Process chain Architecture' or some other game-specific acronym. In this domain, different terminologies and acronyms are often used to express complex architectures, designs, or functionalities. If you have encountered EPA in a game development context, it might be best to refer to the specific documentation or guide where it was described for a better understanding. Understanding the context is key to untangle the meaning of such abbreviations.
",concept
801010101,convexity,convexity,topic
80101010100,convex,convex,topic
8010101010000,convex hull,"The **Convex Hull** is a foundational concept used in various areas of game development, particularly in the creation of physics engines and collision detection. Essentially, it is the smallest convex polygon that can enclose a set of points in a two-dimensional space, or the smallest convex polyhedron for a set of points in a three-dimensional space. It can be thought of as the shape that a rubber band would take if it was stretched around the points and then released. In computational geometry, various algorithms like Graham's Scan and QuickHull have been developed to compute Convex Hulls rapidly. Using Convex Hulls in game engines can drastically improve the performance of collision detection routines as fewer points need to be checked for overlap, which in turn helps in creating smoother gameplay.",concept
80101010101,concave,concave,topic
8010101010100,convex decomposition,"`Convex Decomposition` represents a process within game development that involves breaking down complex, concave shapes into simpler, convex shapes. This technique considerably simplifies the computation involved in collision detection, a critical aspect of any game development project that involves physical simulations. In concrete terms, a concave shape has one or more parts that 'cave in' or have recesses, while a convex shape has no such depressions - in simplistic terms, it 'bulges out' with no interior angles exceeding 180 degrees. So, Convex decomposition is essentially a process of breaking down a shape with 'caves' or 'recesses' into simpler shapes that only 'bulge out'.",concept
8010102,broad phase,broad phase,topic
801010200,bounding volume,bounding volume,topic
80101020000,aabb,"`AABB`, short for Axis-Aligned Bounding Box, is a commonly used form of bounding volume in game development. It is a box that directly aligns with the axes of the coordinate system and encapsulates a game object. The sides of an AABB are aligned with the axes, which is helpful when carrying out certain calculations, as non-axis-aligned boxes would require more complex math. AABBs are primarily used for broad-phase collision detection, which means checking whether two objects might be in the process of colliding. Although AABBs are relatively conservative and can have more bounding volume than oriented bounding boxes (OBBs), they are simpler and faster to use in collision detection.",concept
80101020001,obb,"`Oriented Bounding Box (OBB)` is a type of bounding volume used in computer graphics and computational geometry. It is often used to simplify complex geometric objects by correlating them as a box much closer in size and orientation to the actual object. Unlike the `Axis-Aligned Bounding Box (AABB)`, the `OBB` is not constrained to align with the axis, so the box can be rotated. This orientation is usually chosen based on the object's local coordinate system, so the `OBB` maintains its rotation. Properties of an `OBB` include its center, dimensions, and orientation. However, it is worth noting that `OBBs` can be more computationally intensive than `AABBs` due to mathematical complexity.",concept
801010201,spatial partitioning,spatial partitioning,topic
80101020100,sort and sweep,"**Sort and Sweep** is an algorithm used in collision detection in game development which optimizes the process of identifying potential intersecting objects. Here's how it works: first, all objects in the game are sorted along a specific axis (typically the 'x' axis). Then a line (known as the 'sweep line') is moved along this axis. As the line sweeps over the scene, any objects that cross this line are added to an 'active' list. When an object no longer intersects with the sweep line, it's removed from this list. The only objects checked for intersection are those within this 'active' list reducing the number of checks required. This makes sort and sweep an efficient spatial partitioning strategy.",concept
80101020101,bvh,bvh,topic
8010102010100,dbvt,"`DBVT` or `Dynamic Bounding Volume Tree` is an acceleration data structure that's primarily used in physics simulations like collision detection. It's a type of BVH (`Bounding Volume Hierarchy`), but the unique aspect of a DBVT is its handling of dynamic objects. As the name suggests, it's specifically designed to efficiently handle changing scenarios, such as objects moving or environments evolving, better than a typical BVH. Unlike a static BVH, a DBVT dynamically updates the tree as objects move, maintaining efficiency of collision queries. It primarily does this through tree rotations and refitting bounding volumes rather than fully rebuilding the tree. This makes DBVT a highly appealing option for scenarios with considerable dynamics.",concept
802,game engine,game engine,topic
80200,godot,"Godot is an open-source, multi-platform game engine that is known for being feature-rich and user-friendly. It is developed by hundreds of contributors from around the world and supports the creation of both 2D and 3D games. Godot uses its own scripting language, GDScript, which is similar to Python, but it also supports C# and visual scripting. It is equipped with a unique scene system and comes with a multitude of tools that can expedite the development process. Godot's design philosophy centers around flexibility, extensibility, and ease of use, providing a handy tool for both beginners and pros in game development.",concept
80201,unreal engine,"The **Unreal Engine** is a powerful game development engine created by Epic Games. Used by game developers worldwide, it supports the creation of high-quality games across multiple platforms such as iOS, Android, Windows, Mac, Xbox, and PlayStation. Unreal Engine is renowned for its photo-realistic rendering, dynamic physics and effects, robust multiplayer framework, and its flexible scripting system called Blueprint. The engine is also fully equipped with dedicated tools and functionalities for animation, AI, lighting, cinematography, and post-processing effects. The most recent version, Unreal Engine 5, introduces real-time Global Illumination and makes film-quality real-time graphics achievable.",concept
80202,native,"You don't necessarily have to use tools like Unreal, Unity3d, or Godot to make games. You can also use native languages like C++ or Rust to make games. However, you will have to do a lot of work yourself, and you will have to learn a lot of things that are already done for you in game engines.",concept
80203,unity 3d,"**Unity 3D** is a versatile, cross-platform game engine that supports the development of both 2D and 3D games. This game engine allows users to create a wide variety of games including AR, VR, Mobile, Consoles, and Computers. It provides a host of powerful features and tools, such as scripting, asset bundling, scene building, and simulation, to assist developers in creating interactive content. Unity 3D also boasts a large, active community that regularly contributes tutorials, scripts, assets, and more, making it a robust platform for all levels of game developers.",concept
803,programming languages,programming languages,topic
80300,c cpp,"**C** and **C++ (commonly known as CPP)** are two of the most foundational high-level programming languages in computer science. **C** was developed in the 1970s and it is a procedural language, meaning it follows a step-by-step approach. Its fundamental principles include structured programming and lexical variable scope.

On the other hand, **C++** follows the paradigm of both procedural and object-oriented programming. It was developed as an extension to C to add the concept of ""classes"" - a core feature of object-oriented programming. C++ enhances C by introducing new features like function overloading, exception handling, and templates. 

Both of these languages heavily influence modern game development, where they often serve as the backend for major game engines like Unreal. Game developers use these languages for tasks related to rendering graphics, compiling game logic, and optimizing performance.",concept
80301,csharp,"**CSharp (C#)** is a modern, object-oriented programming language developed and maintained by Microsoft. It's primarily used for developing desktop applications and, more prominently, for Windows applications within the Microsoft.Net framework. However, the language is versatile and has a wide range of uses in web services, websites, enterprise software, and even mobile app development. C# is known for its simplicity, type-safety, and support for component-oriented software development. It's also been adopted by Unity, a widely used game engine, thus making it one of the preferred languages for game development.",concept
80302,assembly,"**Assembly** is a low-level programming language, often used for direct hardware manipulation, real-time systems, and to write performance-critical code. It provides a strong correspondence between its instructions and the architecture's machine-code instructions, since it directly represents the specific commands of the computer's CPU structure. However, it's closer to machine language (binary code) than to human language, which makes it difficult to read and understand. The syntax varies greatly, which depends upon the CPU architecture for which it's designed, thus Assembly language written for one type of processor can't be used on another. Despite its complexity, time-intensive coding process and machine-specific nature, Assembly language is still utilized for speed optimization and hardware manipulation where high-level languages may not be sufficient.",concept
80303,rust,"**Rust** is a modern, open-source, multi-paradigm programming language designed for performance and safety, especially safe concurrency. It was initially designed by Mozilla Research as a language that can provide memory safety without garbage collection. Since then, it has gained popularity due to its features and performance that often compare favorably to languages like C++. Its rich type system and ownership model guarantee memory-safety and thread-safety while maintaining a high level of abstraction. Rust supports a mixture of imperative procedural, concurrent actor, object-oriented and pure functional styles.",concept
80304,python,"Python is a popular high-level programming language that was designed by Guido van Rossum and published in 1991.  It is preferred for its simplicity in learning and usage, making it a great choice for beginners. Python's design philosophy emphasizes code readability with its use of significant indentation. Its language constructs and object-oriented approach aim to help developers write clear, logical code for small and large-scale projects. Python is dynamically-typed and garbage-collected. Moreover, it supports multiple programming paradigms, including procedural, object-oriented, and functional programming. Python is often used for web development, software development, database operations, and machine learning. Although not typically used for game development, some game developers utilize Python for scripting and automating tasks.",concept
804,computer graphics,computer graphics,topic
80400,ray tracing,"Ray tracing is a rendering technique in computer graphics that simulates the physical behavior of light. It generates images with a high degree of visual realism, as it captures shadows, reflections, and refracts light. Ray tracing follows the path of light backwards from the camera (eye) to the source (light object), calculating the color of each pixel in the image on the way. The color value calculation considers the object from which the ray has reflected or refracted, and the nature of the light source i.e. whether it's ambient, point or spot. Ray tracing algorithm handles effects that rasterization algorithms like scanline rendering and 'Z-buffer' find complex to handle.",concept
80401,rasterization,"In the realm of computer graphics, **Rasterization** refers to the process of converting the image data into a bitmap form, i.e., pixels or dots. It is predominantly used in 3D rendering where three-dimensional polygonal shapes are transformed into a two-dimensional image, possessing height, width, and color data. It is a scan-conversion process where vertices and primitives, upon being processed through the graphics pipeline, are mathematically converted into fragments. Every fragment finds its position in a raster grid. The process culminates in fragments becoming pixels in the frame buffer, the final rendered image you see on the screen. However, it's essential to note that rasterization does limit the image's resolution to the resolution of the device on which it is displayed.",concept
80402,graphics pipeline,"The **Graphics Pipeline**, also often referred to as the rendering pipeline, is a sequence of steps that a graphics system follows to convert a 3D model into a 2D image or view that can be displayed onto a screen. These steps typically include transformation, clipping, lighting, rasterization, shading, and other processes. Each step in the pipeline represents an operation that prepares or manipulates data to be used in downstream stages. The pipeline begins with a high-level description of a scene and ends with the final image rendered onto the screen. It is a primary concept in computer graphics that developers should learn as it can help in efficient rendering and high-quality visualization.",concept
80403,sampling,"**Sampling** in computer graphics is a method used to convert a continuous mathematical function (image, signal, light and sound), into a discrete digital representation. The process is done by taking snapshots at regular intervals which are also known as samples, and it's this that gives us the concept of 'sampling'. Some common types of sampling techniques include: uniform sampling (evenly spaced samples), random sampling (samples taken at random intervals), and jittered sampling (a compromise between uniform and random sampling). The higher the sampling rate, the more accurately the original function can be reconstructed from the discrete samples. Effective sampling is a significant aspect of achieving realistic computer graphics.",concept
80404,computer animation,"## Computer Animation

Computer animation refers to the art of creating moving images via the use of computers. Increasingly, it's becoming a critical component in the game development industry. Essentially, it's divided into two categories, 2D animation and 3D animation. 2D animation, also referred to as vector animation, involves creation of images in a two-dimensional environment, including morphing, twining, and onion skinning. On the other hand, 3D animation, also known as CGI, involves moving objects and characters in a three-dimensional space. The animation process typically involves the creation of a mathematical representation of a three-dimensional object. This object is then manipulated within a virtual space by an animator to create the final animation. Software like Unity, Maya, and Blender are commonly used for computer animation in game development.",concept
80405,color,"In the realm of computer graphics, color plays an integral role. It can be defined in various color models such as RGB (Red, Green, Blue), CYMK (Cyan, Yellow, Magenta, Black), and others. RGB is a color model that combines the primary colors (red, green, blue) in different amounts to produce a spectrum of colors. This model is often used in digital displays. In contrast, CMYK is a color model used in color printing. It uses cyan, magyenta, yellow, and black as the primary colors. HSL (Hue, Saturation, Lightness) and HSV (Hue, Saturation, Value) are other useful models that represent colors based on human perceptions. Another important element of color in computer graphics is the color depth, also known as bit depth, which determines the number of colors that can be displayed at once.",concept
80406,visual perception,"Visual Perception is a fundamental aspect of game development, widely explored within the field of computer graphics. It involves the ability to interpret and understand the visual information that our eyes receive, essential to create immersive and dynamic visual experiences in games. The study involves the understanding of light, color, shape, form, depth, and motion, among others, which are key elements to create aesthetically pleasing and engaging graphics. Making full use of visual perception allows the game developers to control and manipulate how the gamers interact with and experience the game world, significantly enhancing not only the visual appeal but also the overall gameplay. 
",concept
80407,tone reproduction,"`Tone Reproduction` or `Tone Mapping` is the technique used in computer graphics to simulate the appearance of high-dynamic-range images in media with a more limited dynamic range. Print-outs, CRT, LCD monitors, and other displays can only reproduce a reduced dynamic range. This technique is widely used in gaming development, where developers employ it to improve the visual experience. The process involves taking light from a scene and mapping it to a smaller range of tones while preserving the visual appearance—i.e., regarding brightness, saturation, and hue. There are various tone mapping algorithms available, each with unique attributes suitable for different imaging tasks.",concept
80408,shader,shader,topic
8040800,render equation,"The **Render Equation**, also known as the **Rendering Equation**, is a fundamental principle in computer graphics that serves as the basis for most advanced lighting algorithms today. First introduced by James Kajiya in 1986, it defines how light interacts with physical objects in a given environment. The equation tries to simulate light's behavior, taking into account aspects such as transmission, absorption, scattering, and emission. The equation can be computationally intensive to solve accurately. It's worth mentioning, however, that many methods have been developed to approximate and solve it, allowing the production of highly realistic images in computer graphics.",concept
8040801,reflection,reflection,topic
804080100,diffuse,"**Diffuse** shading is one of the fundamental aspects within a game's graphics system. It is a property of light that allows it to scatter in an infinite number of directions after striking a surface, resulting in a soft, washed-out, and non-specular appearance. This type of reflection is visible from all angles regardless of the viewer's perspective, giving objects in video games a more realistic, three-dimensional look. It's essential for modeling the way light hits flat, matte, or non-shiny surfaces like cloth or rough stone. Factors such as the angle of incidence and the light's intensity do influence the brightness of the diffuse reflection.",concept
804080101,specular,"Specular reflection, often referred to simply as ""specularity"", pertains to the glossiness of a gaming object's surface. It represents the mirror-like reflection of light from the surface, providing that shiny, polished appearance on the objects. The specular value details how much of the light hitting the object is reflected directly into the viewer's eyes, creating a bright, shiny spot. This reflective value can be fine-tuned using the specular color and intensity settings to match specific object properties – like the reflectiveness of plastic versus metal. In practice, this is often used to simulate the subtle reflections from the rough surface, offering a greater sense of realism in the game's visual representation.",concept
8040802,mapping,mapping,topic
804080200,texture,"
**Texture** refers to the 2D artwork added on a 3D model to give it a convincing and detailed appearance in video games. These textures can represent various properties like color, reflectivity, light absorption, transparency, etc., depending on the needs of the game. Textures can be created through various methods like drawing, painting, or photography and then manipulated digitally. Depending on the topological structure of the 3D model, it can be directly textured (in case of UV maps) or through procedural methods. Different types of textures like albedo/diffuse, specular, normal/bump, displacement are used to achieve different visual effects. The texturing process is a crucial step in game development as it greatly enhances the realism and appeal of the 3D environment and characters.
",concept
804080201,bump,"Bump mapping is a technique in computer graphics for simulating bumps and wrinkles on the surface of an object. This is achieved by modifying the surface normals of the object and using the modified normals during lighting calculations. The result is an apparently bumpy surface rather than a smooth surface, despite the surface geometry being unchanged. Normal maps, which are a type of bump map, store the perturbations of the surface normals in an RGB image. When applied to a model, they can greatly enhance the level of perceived detail without increasing the polygon count. To emphasize, bump mapping doesn't change the geometry of the model, only the lighting calculations across its surface.",concept
804080202,parallax,"Parallax is a powerful technique employed in game development to establish depth in 2D games. The term 'Parallax' comes from the Greek word 'parallaxis', which means alteration. In game development, parallax creates an illusion of depth by making background images move slower compared to the foreground images when the player moves. This is due to the phenomenon where objects that are farther away seem to move at a slower speed compared to closer ones. There are different types of parallax techniques like the traditional parallax scrolling, multi-layered parallax, and parallax mapping. Parallax Mapping, also known as offset mapping or virtual displacement mapping, is a method used to fake details on a surface to give the illusion of depth or surface irregularities.",concept
804080203,horizon,"In the context of game development, ""horizon"" is typically referred to as the farthest point visible in a game's terrain, map, or landscape. It's where the sky meets the ground from the player's perspective. The manipulation of the horizon can greatly influence the immersion and realism of a game world. For instance, developers often use techniques like ""Horizon Mapping"" or ""SkyBox"" to visually represent the horizon and far-off scenery. A detailed and well-designed horizon can add vastness into the world, even if the playable area is limited. However, the horizon also poses performance considerations, as rendering vast landscapes can lead to extensive processing demands and memory consumption. Therefore, techniques like fogging, level of detail (LOD) reduction, and horizon occlusion are often used to manage the performance.",concept
80409,lightning and shadow,lightning and shadow,topic
8040900,stencil shadow,"`Stencil shadows` are a technique used in 3D computer graphics for creating shadows. The stencil shadow algorithm operates by treating a shadow as a 3D volume of space, known as a shadow volume. Any part of the scene that lies inside this shadow volume will be in shadow. If it lies outside the shadow volume, it will be in light. The shadow volume is created by extruding the polygonal silhouette of a 3D object into space along the lines of sight from the light source. For equivalent complex objects, the number of edges or vertices to fill the stencil buffer will generally be less than the number of pixels needed to compute shadow maps, making stencil shadows more efficient in that regard. However, the shadows produced by this technique can look blocky or unrealistic if not further refined.",concept
8040901,shadow map,shadow map,topic
804090100,2d,"2D, or two-dimensional, refers to games or elements that are designed on a two-dimensional plane. It's a classic method in game development and it's primarily used for platformers, puzzles, RPGs (Role-playing Games), and arcade games. In 2D games, the graphics are typically a bit simpler since they only deal with height and width, disregarding depth. Examples of graphical assets used in 2D game development are sprites and tilemaps. For coding and physics, it uses simpler mathematics compared to 3D. Some of the popular 2D game development engines are `Unity 2D`, `Godot`, and `GameMaker Studio 2`. These engines simplify the process of developing 2D games, providing tools and features such as 2D physics, sprite manipulation, and AI (Artificial Intelligence) pathfinding specific for two-dimensions.",concept
804090101,cube,"A **Cube** is a three-dimensional geometric figure known for its symmetric and box-like shape. It is also characterized by its equal length, width, and height dimensions. In game development, cubes can be the starting point for creating more complex 3D models. They are utilized in numerous ways such as creating physical objects, defining environments, constructing characters, and more. Furthermore, in the context of a shadow map, a cube map can be generated to deal with omnidirectional light sources. Cube mapping, a process that uses a six-sided cube as the map shape, is particularly useful for creating reflections and applying textures on 3D models.",concept
804090102,cascaded,"""Cascaded"" refers to the Cascaded Shadow Maps (CSM) technique implemented in graphical computations. It involves the procedure of dividing the view frustum, the portion of a 3D space visualized on the screen, into several sub-frustums or ""cascades"". Each cascade corresponds to a different shadow map, allowing various levels of details for shadows in a single render. Each cascade uses a different region of the shadow map texture, facilitating the ability to provide finer shadow detail close to the camera and coarser detail as the distance from the camera increases. This technique helps in the efficient utilization of shadow map resolution and improves visual quality by reducing aliasing artifacts in the distance.",concept
8040902,light source,light source,topic
804090200,directional light,"`Directional light` is a type of light commonly utilized in 3D game development. As the name suggests, this form of light appears to be coming from a specific direction, much as sunlight does in reality. In actuality, it extends infinitely in a single direction and doesn't emanate from a specific source like point or spotlights do. This property allows it to illuminate all objects within a scene uniformly. Directional light is particularly useful for replicating large and distant light sources such as the sun or moon.",concept
804090201,point light,"A `Point Light` is a common light source within game development. It simulates a light radiating from a single point equally in all directions, like a light bulb in a room. Because it emits light in all directions, a point light affects every object, regardless of its orientation towards the light source. Additionally, a point light has a location in space and no directional vector, unlike a directional or spot light. It's worth noting that although point lights have an associated range or radius beyond which their intensity is zero, they can consume more computation resources compared to other types of light sources due to their influence over a larger area of the scene. Hence, careful planning is required when using point lights.",concept
804090202,spot light,"A **Spot Light** is a type of light source used in game development, often utilized to create focused, directional lighting within a specific radius, imitating real-world sources like a flashlight or a stage spotlight. The two primary properties of a spot light are its cone angle and its fall-off. The cone angle determines the size of the illuminated area, while the fall-off controls how quickly the light diminishes towards the edges of the light cone. Spotlights can create dramatic effects and are essential in driving attention towards specific game elements or areas due to their constrained, targeted lighting.",concept
804090203,infinite light,"`Infinite light` in game development refers to a type of light source that emits light rays in parallel. This source is assumed to be located at an infinite distance away, hence the term 'infinite light'. Each ray of light coming from the source is regarded as a straight line. This is especially useful for simulating sunlight or far off light sources in outdoor scenes as the light rays from these sources, when received on earth, can be safely assumed to be parallel to each other. However, keep in mind that infinite light does not produce any localized lighting effects or shadows, as it dispenses even lighting throughout your scene.",concept
80410,visibility and occlusion,visibility and occlusion,topic
8041000,occluder,occluder,topic
804100000,fog,"In the framework of game development, **fog** is a visual technique applied effectively for various artistic and optimization purposes. Aesthetically, it's used to simulate different atmospheric effects such as smoke, fog, mist, and dust. Fog can also be utilized to conceal or lessen the details of distant objects, hence reducing the rendering load on the system. This technique is often called ""distance fog"". Moreover, specialized types of fog like ""volumetric fog"" add a three-dimensional feel to the game, making the lighting atmosphere more immersive and realistic. Note that fog settings and effects can be adjusted based on different game engines, such as Unreal Engine, Unity, or Godot.",concept
8041001,culling,culling,topic
804100100,frustum,"`Frustum` is a term commonly used in the game development industry and is intensely associated with the concept of ""culling"". It is the field of view of the camera, or more specifically, the portion of the world that is currently visible to your camera in the game. Shaped like a truncated pyramid (or a pyramid with its top cut off), the frustum's small end is where your camera sits, and the larger end is far away from the camera stretching outwards. Objects within this frustum are what the player sees on their screen, and ones outside are not rendered, which helps increase the performance of the game. Frustum culling, thus, is a computational process to determine which objects are within the frustum and should be drawn.",concept
804100101,light,"Lighting in game development is crucial for creating an immersive and realistic gaming experience. There are several types of light sources, including directional light, point light, and spotlights. Directional light simulates sun or moonlight with parallel rays illuminating the game world. Point light emanates from a single point in all directions, similar to a light bulb. Spotlights produce a cone of light, similar to a flashlight or a stage spotlight. Then, there's Ambient light which creates a base level of light that hits every surface equally, regardless of its orientation or position, making sure no area is ever in complete darkness. These different sources of light can be manipulated to create the desired mood and aesthetic in a scene.",concept
804100102,shadow,"Shadows contribute significantly to the realism of a virtual scene in gaming. They play a pivotal role in determining an object's position relative to other objects and surfaces. Shadows are largely incorporated through two major techniques in game development: 'Shadow Mapping' and 'Shadow Volumes'. Shadow Mapping is a process that involves creating a depth map from the light source's point of view. Shadow Volumes, on the other hand, use stencil buffers to draw shadows onto scenes. These are computationally intense processes which can be optimized using various techniques such as Cascaded Shadow Maps, and Umbra and Penumbra calculations. Furthermore, developers have the challenge to implement dynamic shadows that react to changing light sources and positions, as well as static shadows for non-moving objects. It's essential that developers learn how to implement, optimize and balance shadows effectively to provide immersive and dynamic game play experiences.",concept
8041002,clipping,clipping,topic
804100200,polygon,"`Polygon` is a fundamental term used in computer graphics and game development. It is a plane figure that is described by a finite number of straight line segments connected to form a closed polygonal chain or polygonal circuit. The segments that form a polygon are known as its edges or sides, and the points where the edges meet are the polygon's vertices. In 3D modeling, polygons are used to create the surfaces of objects. Triangles, rectangles, pentagons, hexagons are examples of polygons. Complex 3D models are made up of numerous polygons. Polygons are crucial to determining the detail of 3D models in games; higher polygon counts usually mean higher detail.",concept
804100201,polyhedron,"A **Polyhedron** is a three-dimensional geometric shape, whose faces are polygons. These are bound by straight lines creating a closed shape with flat surfaces and straight edges. Each of the corners or vertices of these shapes meets an equal number of edges. Some common examples include the cube, the pyramid, and the prism. Each polyhedron has a set of properties including volume, surface area and the number of vertices, edges, and faces. The sum of the angles of the polygonal faces gives the total angular defect of the polyhedron. These are fundamental elements in 3D modeling and graphics rendering within the field of game development.",concept
805,graphics api,graphics api,topic
80500,direct x,direct x,topic
8050000,hlsl,"**HLSL** stands for High-Level Shader Language, and it is the proprietary shading language developed by Microsoft for use with the Microsoft Direct3D API. Just like its counterpart from OpenGL - GLSL, it opens up the power of programmable GPUs for developers by providing capability for creating customized rendering effects or performing operations that are computationally expensive in CPU. HLSL resembles the C programming language, thereby making it easier for developers coming from traditional programming backgrounds. It is often considered an integral part of the Direct X ecosystem and is used for developing complex and visually impressive graphics for games.",concept
80501,open gl,open gl,topic
8050100,glsl,"GLSL (Graphics Library Shader Language) is a high-level shading language inspired by C, based on the syntax of the OpenGL Shading Language. It is used in graphics programming for defining how the graphical content should look. GLSL allows developers to harness the power of modern GPUs (Graphics Processing Units), enabling direct, unconstrained control over graphics rendering. A key aspect of the language is its ability to create shaders, which are small programs that run on the GPU. Shaders are used for various graphical effects like vertex manipulation, pixel color calculations, or post-processing effects.",concept
80502,web gl,"`WebGL` (Web Graphics Library) is a JavaScript API that is used to render interactive 2D and 3D graphics within any compatible web browser without the use of plug-ins. It leverages the power of the Graphics Processing Unit (GPU), which provides high-efficiency rendering. WebGL programs consist of control code written in JavaScript and shader code that's written in OpenGL Shading Language (GLSL), allowing developers to control the fine details of graphics rendering. Besides its compatibility with HTML5 and its ability to render on any platform that supports the web, WebGL is entirely integrated into all web standards, facilitating GPU-accelerated image processing and effects.",concept
80503,opengl es,"OpenGL ES (Open Graphics Library for Embedded Systems) is a simplified version of OpenGL, designed for use on systems with lower computational power, such as mobile devices and embedded systems. Despite its semantic simplifications, OpenGL ES still retains high versatility and capability, allowing for high-performance 2D and 3D graphics on these smaller, less powerful systems. OpenGL ES has become particularly popular in mobile game development, with major platforms like Android and iOS providing full support for it. The API is divided into several versions, the latest of which, OpenGL ES 3.2, was released in 2016.",concept
80504,metal,"Metal is a low-level, high-performance, application programming interface (API) developed by Apple. It debuted in iOS 8 and is dedicated to graphics and data-parallel computations. Essentially, it's designed to exploit modern GPU architecture on Apple devices, optimizing performance and power efficiency. This API applies to various platforms, including iOS, macOS, and tvOS. In contrast to high-level APIs like OpenGL, Metal offers a much lower overhead, allowing more direct control over the GPU. For developers, it means that they can squeeze better performance out of the hardware compared to higher-level APIs. With Metal, developers have a much more detailed view and control on the GPU which results in better graphical output and smoother performance.",concept
80505,vulkan,vulkan,topic
8050500,spirv,"`SPIR-V` is a binary intermediate language for graphics and computation kernels, which is defined by the Khronos Group. This programming language has been largely adopted and used by Vulkan, a low-overhead, cross-platform 3D graphics and computing API. Vulkan consumes `SPIR-V` directly, serving as the final shader stage before the GPU. The `SPIR-V` binary format is designed for portability and flexibility, allowing it to be a powerful tool for developers because of its extensibility through the addition of new instructions, without the need to rebuild toolchains or shaders. This makes `SPIR-V` an essential part of Vulkan, especially for game developers creating large, diverse worldscapes and intricate graphics.",concept
806,game api,game api,topic
80600,decision making,decision making,topic
8060000,decision tree,"A **Decision Tree** is a graphical representation used in game development which helps to visualize the possible outcomes or paths a game could take depending on certain choices made by a gamer. Each branch of the tree represents a possible decision, outcome, or reaction and each node on the tree represents a game situation or event. Decision Trees help game developers in making strategic designs, create complex enemy AI, and overall assists in predicting the interaction or course of the game. It allows game developers to layout the decision points, possible choices and their outcomes, thus making it easier to trace the direction in which the game progresses.",concept
8060001,state machine,"A **State Machine** is a conceptual model that is frequently used in game development to manage game states, or conditions. It consists of a number of different 'states', or modes, and the transitions between them. For instance, a mobile game could have states such as 'Start Screen', 'Playing', 'Paused' and 'Game Over'. Each one of these states will have specific commands associated and rules for transitioning to other states. This will govern the flow and behavior of the game. It can be used in AI character behaviors, UI systems, or game-level states. State Machines keep the code organised and manageable, making it easier for developers to implement complex game logic.",concept
8060002,behavior tree,"The **Behavior Tree** is a decision-making system used in game development, primarily for AI character behavior. These trees help define the actions an AI character will take, based on predefined tasks and conditions. The tree structure starts from a single root, branching out to nodes that represent these decisions or tasks. The tasks can be simple, such as moving from one point to another, or can be complex decisions like whether to attack or retreat. This kind of structure is advantageous because it is easy to add, remove, or modify tasks without breaking the tree or affecting other tasks. This makes it highly flexible and easy to manage, irrespective of the complexity of the tasks.",concept
8060003,fuzzy logic,"Fuzzy Logic is a mathematical logic method that resolves problem-solving and system control. Unlike traditional binary sets (true or false), fuzzy logic variables have a truth value that ranges in degree between 0 and 1. This allows them to handle the concept of partial truth, where the truth value may range between completely true and completely false. In game development, fuzzy logic is often used in artificial intelligence to make the game more realistic. For instance, it can be used to program non-player characters (NPCs) who respond to situational changes dynamically, making the gameplay more engaging and interactive.",concept
8060004,markov system,"A **Markov System** or **Markov Chain** represents a statistical model that is used in decision-making scenarios within game development. This model is based on the notion of ""memorylessness"" where a certain event's probability depends solely on the state attained in the previous event. It employs a sequence of possible events where the probability of each event hinges on the state achieved in the previous event. A common usage of a Markov System is in designing AI behavior within games, where each state symbolizes a different behavior, and transitions between them are governed by the Markov chain probabilities.",concept
8060005,goal oriented behavior,"Goal oriented behavior in game development refers to the artificial intelligence algorithms employed that give non-player characters (NPCs) the ability to make decisions based on certain objectives or tasks. These NPCs analyze the circumstances in the game environment, formulate a plan to achieve specific goals, and then execute it. The degree of sophistication in these algorithms can range from simple pathways to complex problem-solving solutions. As the behavior models are not hard-coded, it provides NPCs with greater adaptability and autonomy.",concept
80601,movement,"In the context of game development and game API (Application Programming Interface), movement refers to the process of changing the position or orientation of game objects. This involves using programming functions to control objects' movement like walk, run, jump, fly, or any such physical action in the game world. Movement is at the core to creating the dynamics of a game and is critical to both game physics and game logic. Different game engines offer different ways for handling movement. In some APIs, this process could be as simple as setting a new position directly, such as `object.position = new Vector3(5, 10, 0)`. Meanwhile, in others, more complex methods involving real-world physics are required, such as applying forces or altering velocity.",concept
80602,board game,board game,topic
8060200,minimax,"`Minimax` is an artificial intelligence (AI) decision-making algorithm mainly used in decision making and game theory, particularly for two player zero-sum games. It formulates a strategy by simulating all possible game scenarios and assuming that the opponent is playing an optimal game. Minimax operates by the player minimizing the possible loss for a worst case scenario and thus making the 'maximum of the minimum' possible scenarios. This algorithm is often combined with `alpha-beta pruning` technique to increase its efficiency.",concept
8060201,ab pruning,"`Alpha-Beta pruning` is an optimization technique for the minimax algorithm used in artificial intelligence (AI) programming, such as game development. It cuts off branches in the game tree that don't need to be searched because there's already a better move available. It uses two parameters, alpha and beta, which represent the minimum score that the maximizing player is assured of and the maximum score that the minimizing player is assured of, respectively. During the traversal of the game tree, branches of the tree that cannot possibly influence the final decision are not explored. This process 'prunes' the minimax tree, saving computational time and resources.",concept
8060202,mcts,"""MCTS"", or Monte Carlo Tree Search, is a search algorithm that utilizes methods of decision-making to solve complex problems, commonly implemented in a range of applications, including board games. It essentially operates through building a search tree, node by node, for probable states of a game and then using Monte Carlo simulations to provide a statistical analysis of potential outcomes. It randomly generates moves using the game's determined rules, then makes decisions based on the results of these simulations. In board games, it's often used to determine AI decisions by simulating possible game scenarios, hence contributing to making the AI system more robust and challenging.",concept
807,game ai,game ai,topic
80700,learning,learning,topic
8070000,decision learning,"In the realm of game development, **Decision Learning**  refers to information systems that recognize and analyze patterns to help in making decisions. It’s particularly used in AI game development where decision-making algorithms or artificial intelligence are programmed to learn from and make decisions based on past experiences or an established decision tree. These decisions can be about game behaviors, player interactions, environment changes and so on. Various methods such as reinforcement learning, Bayesian methods, Decision trees, Neural networks are used to facilitate decision learning in game development.",concept
8070001,naive bayes classifier,"The Naive Bayes Classifier is a type of probabalistic machine learning model that is utilized for classification tasks. These tasks can range from email filtering to sentiment analysis or even document categorization. This model is termed 'naive' because it operates under the assumption that each input feature is independent from one another. This simplifying assumption allows for the computation of the probabilities involved to be severely less complicated. It follows the Bayes' Theorem equation to predict the class of the given data point. While this classifier might seem simplistic, it holds its own quite well in complex real-world situations. Due to its simplicity and high efficiency, the Naive Bayes Classifier is one of the most reliable and practical methods in machine learning applications.
",concept
8070002,decision tree learning,"`Decision Tree Learning` is an important concept in game development, particularly in the development of artificial intelligence for game characters. It is a kind of machine learning method that is based on using decision tree models to predict or classify information. A decision tree is a flowchart-like model, where each internal node denotes a test on an attribute, each branch represents an outcome of that test, and each leaf node holds a class label (decision made after testing all attributes). By applying decision tree learning models, computer-controlled characters can make decisions based on different conditions or states. They play a key role in creating complex and interactive gameplay experiences, by enabling game characters to adapt to the player's actions and the ever-changing game environment.",concept
8070003,deep learning,"Deep Learning is a sub-field of machine learning, inspired by the structure and function of the human brain, specifically designed to process complex input/output transformations. It uses artificial neural networks with many layers (hence the term 'deep' learning) to model complex, non-linear hypotheses and discover hidden patterns within large datasets. Deep learning techniques are crucial in game development, primarily in creating intelligent behaviors and features in gaming agents, procedural content generation, and player profiling. You might have heard about the uses of deep learning technologies in popular, cutting-edge games like Google DeepMind's AlphaGo. Coding languages like Python, R, and frameworks like TensorFlow, Keras, and PyTorch are commonly used for deep learning tasks. Learning Deep Learning can be a prominent game-changer in your game development journey.",concept
8070004,artificial neural network,"Artificial Neural Networks (ANN) are a branch of machine learning that draw inspiration from biological neural networks. ANNs are capable of 'learning' from observational data, thereby enhancing game development in numerous ways. They consist of interconnected layers of nodes, or artificial neurons, that process information through their interconnected network. Each node's connection has numerical weight that gets adjusted during learning, which helps in optimizing problem solving. ANNs are utilized in various aspects of game development, such as improving AI behavior, procedural content generation, and game testing. They can also be used for image recognition tasks, such as identifying objects or actions in a game environment.",concept
8070005,reinforcements learning,"`Reinforcement Learning` is a type of Machine Learning which is geared towards making decisions. It involves an agent that learns to behave in an environment, by performing certain actions and observing the results or rewards/results it gets. The main principle of reinforcement learning is to reward good behavior and penalize bad behavior. The agent learns from the consequences of its actions, rather than from being taught explicitly. In the context of game development, reinforcement learning could be used to develop an AI (Artificial Intelligence) which can improve its performance in a game based on reward-driven behavior. The AI gradually learns the optimal strategy, known as policy, to achieve the best result.",concept
808,advanced rendering,advanced rendering,topic
80800,real time ray tracing,real time ray tracing,topic
8080000,directx ray tracing,"DirectX Ray Tracing (DXR) is an advanced Windows API introduced with DirectX 12. It delivers real-time, cinema-quality rendering to contend development in gaming and professional visualization. It provides highly efficient and straightforward access to RT Core hardware. DXR adds four new concepts to DirectX 12: The acceleration structure, The Raytracing pipeline state object, Shader tables, and the Command list method (DispatchRays). It represents a significant step forward by Microsoft in embracing Ray Tracing as a new standard in real-time rendering pipelines. For developers, DirectX Ray tracing is straightforward to integrate into existing engines given its easy compatibility with existing DirectX 12 programming models. However, to truly maximize DXR's potential, a deep understanding of both graphics workloads and tracing algorithms is necessary.",concept
8080001,vulcan ray tracing,"`Vulkan Ray Tracing` is an extension of the Vulkan API (Application Programming Interface), which is an open-source, cross-platform API developed by the Khronos Group. Its main goal is to provide developers with greater control over the GPU, enabling better performance and more efficient multisystem and multicore use. The Vulkan Ray Tracing extension provides a standardized ray tracing interface similar to DirectX Raytracing, enabling real-time ray tracing applications to be built on Vulkan. This extension includes a number of functionalities such as acceleration structure building and management, ray tracing shader stages and pipelines, and indirect ray tracing dispatch.",concept
8080002,optix,"`OptiX` is an application framework developed by NVIDIA for achieving high performance ray tracing in graphics processing unit (GPU) programming. It's mainly intended for use in real-time graphics application, scientific simulations, and other visual computing applications. `OptiX` provides key functionalities such as hierarchical object acceleration, programmable ray generation, material shading, and dynamic scene management to achieve fast and state-of-the-art rendering. This highly efficient, scalable and flexible API supports the coding of applications, not just for graphic rendering but also for collision detection and physics simulation. Please note that access to `OptiX` currently requires NVIDIA GeForce, Quadro and Tesla products with Kepler, Maxwell, Pascal, Volta, Turing and later generation GPUs.",concept
80801,physically based rendering,physically based rendering,topic
8080101,translucency and transparency,"In the realm of physically-based rendering, **translucency** and **transparency** act as key aspects in creating visually authentic and compelling images. Transparency refers to the property of an object that allows light to pass through it unhindered, hence making the object clear or invisible. This is commonly seen in materials such as glass, clear plastic, and water. On the other hand, translucency describes how light interacts with a semi-transparent object. Instead of passing directly through, light enters the object, travels within for some distance and then exits at a different location. Common examples of such surfaces include human skin, marble, milk, or wax, which exhibit a soft, diffused lighting effect when light rays pass through them. The technique to achieve this effect in graphics involves subsurface scattering, where incoming light is scattered beneath the object's surface, illuminated it in a way that showcases the material's internal structure.",concept
8080102,metallicity,"In Physically Based Rendering (PBR), **Metallicity** is a critical property of a material, which influences how it interacts with light. It's a binary property, indicating whether the material is a 'metal' or 'non-metal'. Metals have a high metallicity value (often 1), non-metals (such as wood, plastic, etc.) have a low metallicity value (often 0). Interestingly, with PBR, there exists no 'partially metal' materials ― it's an all or nothing characteristic. This property significantly impacts color handling, too, as metals derive their color from specular reflection while non-metals derive from subsurface scattering (diffuse).",concept
8080103,microsurface scattering,"Microsurface scattering, also known as sub-surface scattering, is an important phenomenon in Physically Based Rendering (PBR). This process involves the penetration of light into the surface of a material, where it is scattered by interacting with the material. In other words, when light strikes an object, rather than simply bouncing off the surface, some of it goes into the object and gets scattered around inside before getting re-emitted. It is key to achieving more realistic rendering of translucent materials like skin, marble, milk, and more. Consider it essential for replicating how light interacts with real-world materials in a convincing manner in your game.",concept
900,qa basics,qa basics,topic
90000,what is qa,"Quality is extremely hard to define, and it is simply stated: “Fit for use or purpose.” It is all about meeting the needs and expectations of customers concerning the functionality, design, reliability, durability, & price of the product.

## What is Assurance

Assurance is nothing but a positive declaration of a product or service, which gives confidence. It is certain of a product or a service which it will work well. It provides a guarantee that the product will work without any problems as per the expectations or requirements.

## Quality Assurance in Software Testing

Quality Assurance in Software Testing is defined as a procedure to ensure the quality of software products or services provided to the customers by an organization. Quality assurance focuses on improving the [software development process](https://www.guru99.com/software-development-life-cycle-tutorial.html) and making it efficient and effective per the quality standards defined for software products. Quality Assurance is popularly known as QA Testing.

Visit the following resources to learn more:

- [What is Quality Assurance(QA)? Process, Methods, Examples](https://www.guru99.com/all-about-quality-assurance.html)
- [What Do Software Testers Do?](https://www.ministryoftesting.com/dojo/lessons/what-do-software-testers-do-version-0-1)
",concept
90001,tester mindset,"As a Quality Assurance Engineer, your job is to look for the weak spots in a product, whatever that product may be, and report them back, so that they can be fixed and thus, the product you are working on can be of the highest quality possible.

To do your job successfully, you need to have a Testing mindset. What does that mean? Among other things, it means you have to think in the most destructive way possible and be as creative as possible.

A few important points:

- Know the product you are testing
- Don’t be afraid to think outside of the box when you are testing it
- Don’t be afraid to misuse it as much as possible.

Visit the following resources to learn more:

- [The Software Tester’s Mindset](https://softwaretester.careers/the-software-testers-mindset/)
- [How to Think Like a Tester](https://medium.com/@blakenorrish/how-to-think-like-a-tester-7a174ff6aeaf)
",concept
90002,testing approaches,testing approaches,topic
9000200,white box testing,"White Box Testing is a technique in which software’s internal structure, design, and coding are tested to verify input-output flow and improve design, usability, and security. In white box testing, code is visible to testers, so it is also called Clear box testing, Open box testing, Transparent box testing, Code-based testing, and Glass box testing.

Visit the following resources to learn more:

- [White Box Testing – What is, Techniques, Example & Types](https://www.guru99.com/white-box-testing.html)
- [A Complete Guide With Techniques, Examples, & Tools](https://www.softwaretestinghelp.com/white-box-testing-techniques-with-example/)
",concept
9000201,gray box testing,"Gray box testing is a software testing technique to test a software product or application with partial knowledge of the internal structure of the application. The purpose of gray box testing is to search and identify the defects due to improper code structure or improper use of applications.

Visit the following resources to learn more:

- [What is Gray Box Testing? Techniques & Example](https://www.guru99.com/grey-box-testing.html)
",concept
9000202,black box testing,"Black Box Testing is a software testing method in which the functionalities of software applications are tested without having knowledge of internal code structure, implementation details and internal paths. Black Box Testing mainly focuses on input and output of software applications and it is entirely based on software requirements and specifications. It is also known as Behavioral Testing.

Visit the following resources to learn more:

- [What is BLACK Box Testing? Techniques, Example & Types](https://www.guru99.com/black-box-testing.html)
- [Black Box Testing: An In-Depth Tutorial With Examples And Techniques](https://www.softwaretestinghelp.com/black-box-testing/)
",concept
90003,test oracles,"A test oracle is a mechanism; different from the program itself that can be used to check the correctness of the program's output for the test cases. Conceptually, we can consider testing a process in which the test cases are given to the test oracle and the program under testing.

Visit the following resources to learn more:

- [What are Test Oracles](https://ecomputernotes.com/software-engineering/what-are-test-oracles)
",concept
90004,test prioritization,"Test prioritization is ordering the test cases to be conducted eventually. Prioritizing test cases aids to meet two important constraints, namely time and budget in software testing to enhance the fault detection rate as early as possible.

Visit the following resources to learn more:

- [A Tour of what is Test Prioritization?](https://www.browserstack.com/guide/test-case-prioritization)
- [Test Prioritization](https://www.professionalqa.com/test-prioritization)
- [Learn about Test Prioritization](https://www.geeksforgeeks.org/test-case-prioritization-in-software-testing/)
- [Test Prioritization fundamentals!](https://testomat.io/features/test-case-priorities/)
",concept
90005,manage your testing,manage your testing,topic
9000500,qtest,"qTest is a test management tool used for Project Management, Bug Tracking, and Test Management. It follows the centralized test management concept that helps to communicate easily and assists in rapid development of task across QA team and other stakeholders.

Visit the following resources to learn more:

- [QTest tutorial](https://www.tutorialspoint.com/qtest/qtest_introduction.htm)
- [Getting Started with qTest and Parameters](https://www.youtube.com/watch?v=1q8vQ2XF9QE)
",concept
9000501,test rail,"TestRail is a web-based test case management tool. It is used by testers, developers and team leads to manage, track, and organize software testing efforts. TestRail allows team members to enter test cases, organize test suites, execute test runs, and track their results, all from a modern and easy to use web interface.

Visit the following resources to learn more:

- [TestRail Website](https://www.gurock.com/testrail/)
- [TestRail Review Tutorial: Learn End-To-End Test Case Management](https://www.softwaretestinghelp.com/testrail-tutorial/)
",concept
9000502,test link,"TestLink is most widely used web based open source test management tool. It synchronizes both requirements specification and test specification together. Tester can create test project and document test cases using this tool. With TestLink you can create an account for multiple users and assign different user roles.

Visit the following resources to learn more:

- [TestLink Website](https://testlink.org/)
- [TestLink Tutorial: A Complete Guide](https://www.guru99.com/testlink-tutorial-complete-guide.html)
",concept
9000503,zephyr,"Zephyr is a testing solution that improves the quality of your software by managing and monitoring end-to-end testing. It is very effective for managing manual testing. Its key capabilities include:

- Test-case creation
- Organization of tests by product releases and components
- Assignment of tests to the Quality Assurance team

Visit the following resources to learn more:

- [Zephyr for JIRA Tutorial: Test Management Tool](https://www.guru99.com/zephyr-agile-jira.html)
",concept
9000506,xray,"Xray is a complete Test Management tool for Jira. It is a full-featured app that does not require any other software in order to run.
Xray supports the entire testing life cycle: test planning, test design, test execution and test reporting. Xray does this by using special Jira issue types, so you can use all Jira benefits that you are used to.
Jira's aim is to help you improve the quality of your systems through effective and efficient testing. That's why from its first version, Xray already supports both manual and automated tests, including full support for BDD framework (e.g. Cucumber, SpecFlow, Serenity BDD) examples/tests in the native language (i.e., English).

Visit the following resources to learn more:

- [xRay - Getting Started](https://docs.getxray.app/display/XRAY/Getting+started)
",concept
90006,project management,project management,topic
9000600,atlassian,"Jira is a software application used for issue tracking and project management. The tool, developed by the Australian software company Atlassian, has become widely used by agile development teams to track bugs, stories, epics, and other tasks.

Visit the following resources to learn more:

- [Atlassian Website](https://www.atlassian.com/)
- [What is Jira used for?](https://www.atlassian.com/software/jira/guides/use-cases/what-is-jira-used-for#glossary-of-items)
- [What is Jira?](https://www.simplilearn.com/tutorials/jira/what-is-jira-and-how-to-use-jira-testing-software)
- [JIRA Tutorial: A Complete Hands-On How-To-Use JIRA Guide](https://www.softwaretestinghelp.com/atlassian-jira-tutorial-1/)",concept
9000601,assembla,"Assembla is an extensive suite of applications for software development, enabling distributed agile teams. It allows development teams to manage, initiate and maintain agile projects, applications and websites.

Visit the following resources to learn more:

- [Assembla Website](https://get.assembla.com/projects/)
- [What is Assembla?](https://www.selecthub.com/project-management-software/assembla)
",concept
9000602,youtrack,"YouTrack is a project management software developed by JetBrains. It’s in the form of a plugin that can be attached to the JetBrains IDEs such as Intellij Idea, and helps create and assign tasks to a development team as well as track the progress of working.

Visit the following resources to learn more:

- [YouTrack Website](https://www.jetbrains.com/youtrack/)
- [YouTrack for Beginners](https://medium.com/nerd-for-tech/youtrack-for-beginners-31e1e156fdd0)
",concept
9000603,trello,"Trello is a popular, simple, and easy-to-use collaboration tool that enables you to organize projects and everything related to them into boards. With Trello, you can find all kinds of information, such as:

- What’s being worked on?
- Who’s working on what?
- What progress the project is making

Visit the following resources to learn more:

- [Trello Website](https://trello.com/en)
- [What is Trello and How To Use It?](https://www.simplilearn.com/tutorials/project-management-tutorial/what-is-trello)
",concept
90007,testing techniques,testing techniques,topic
9000700,functional testing,functional testing,topic
900070000,uat,"User Acceptance Testing (UAT) is a type of testing performed by the end user or the client to verify/accept the software system before moving the software application to the production environment. UAT is done in the final phase of testing after functional, integration and system testing is done.

Visit the following resources to learn more:

- [What is User Acceptance Testing (UAT)?](https://www.guru99.com/user-acceptance-testing.html)
- [How to plan your UAT](https://www.youtube.com/watch?v=AU8SV7091-s)
",concept
900070001,exploratory testing,"Exploratory testing is evaluating a product by learning about it through exploration and experimentation, including to some degree: questioning, study, modeling, observation, inference, etc.

Visit the following resources to learn more:

- [Exploratory Testing](https://www.satisfice.com/exploratory-testing)
- [Exploratory Testing 3.0](https://www.satisfice.com/blog/archives/1509)
- [History of Definitions of Exploratory Testing](https://www.satisfice.com/blog/archives/1504)
",concept
900070002,sanity testing,"Sanity testing is a kind of Software Testing performed after receiving a software build, with minor changes in code, or functionality, to ascertain that the bugs have been fixed and no further issues are introduced due to these changes. The goal is to determine that the proposed functionality works roughly as expected. If sanity test fails, the build is rejected to save the time and costs involved in a more rigorous testing.

Visit the following resources to learn more:

- [Sanity Testing | Software Testing](https://www.geeksforgeeks.org/sanity-testing-software-testing/)
",concept
900070003,regression testing,"Regression Testing is a type of software testing to confirm that a recent program or code change has not adversely affected existing features. Regression testing is a black box testing technique. Test cases are re-executed to check the previous functionality of the application is working fine and that the new changes have not produced any bugs.

Visit the following resources to learn more:

- [Regression Testing](https://www.javatpoint.com/regression-testing)
- [What is Regression Testing with Test Cases](https://www.guru99.com/regression-testing.html)
",concept
900070004,smoke testing,"Smoke Testing is a software testing process that determines whether the deployed software build is stable or not. Smoke testing is a confirmation for QA team to proceed with further software testing. It consists of a minimal set of tests run on each build to test software functionalities.

Visit the following resources to learn more:

- [Smoke Testing | Software Testing](https://www.guru99.com/smoke-testing.html)
",concept
900070005,unit testing,"Unit testing is where individual **units** (modules, functions/methods, routines, etc.) of software are tested to ensure their correctness. This low-level testing ensures smaller components are functionally sound while taking the burden off of higher-level tests. Generally, a developer writes these tests during the development process and they are run as automated tests.

Visit the following resources to learn more:

- [Unit Testing Tutorial](https://www.guru99.com/unit-testing-guide.html)
- [What is Unit Testing?](https://youtu.be/3kzHmaeozDI)
",concept
900070006,integration testing,"Integration Testing is a type of testing where software modules are integrated logically and tested as a group. A typical software project consists of multiple software modules coded by different programmers. This testing level aims to expose defects in the interaction between these software modules when they are integrated. Integration Testing focuses on checking data communication amongst these modules.

Visit the following resources to learn more:

- [Integration Testing Tutorial](https://www.guru99.com/integration-testing.html)
",concept
9000701,non functional testing,non functional testing,topic
900070100,load testing,"Load Testing is a type of Performance Testing that determines the performance of a system, software product, or software application under real-life-based load conditions. Load testing determines the behavior of the application when multiple users use it at the same time. It is the response of the system measured under varying load conditions.

Visit the following resources to learn more:

- [Software Testing: Load Testing](https://www.geeksforgeeks.org/software-testing-load-testing/)
- [Load testing and Best Practices](https://loadninja.com/load-testing/)
",concept
900070101,performance testing,"Performance Testing is a subset of Performance Engineering. It is a process of evaluating a system’s behavior under various extreme conditions. The main intent of performance testing is monitoring and improving key performance indicators such as response time, throughput, memory, CPU utilization, and more.

There are three objectives (three S) of Performance testing to observe and evaluate: `Speed`, `Scalability`, and `Stability`.

## Types of Performance Testing

Following are the commonly used performance testing types, but not limited to:

- Load Testing
- Stress Testing
- Spike Testing
- Endurance Testing
- Volume Testing
- Scalability Testing
- Capacity Testing

Visit the following resources to learn more:

- [Performance Testing Tutorial – Types (Example)](https://www.guru99.com/performance-testing.html)
",concept
900070102,stress testing,"`Stress Testing` is a type of `Performance Testing`. The objective of stress testing is to identify the breaking point of application under test under extreme normal load.

e.g. Injecting high volume of requests per second to an API might cause the disruption to its service, or throws HTTP 503 Service Unavailable or cause other consequences.

Visit the following resources to learn more:

- [What is Stress Testing in Software Testing?](https://www.guru99.com/stress-testing-tutorial.html)
",concept
900070103,security testing,"Security Testing is a type of Software Testing that uncovers vulnerabilities, threats, or risks in a software application and prevents malicious attacks from intruders. The purpose of Security Tests is to identify all possible loopholes and weaknesses of the software system which might result in a loss of information, revenue, repute at the hands of the employees or outsiders of the organization.

Visit the following resources to learn more:

- [What is Security Testing? Types with Example](https://www.guru99.com/what-is-security-testing.html)
- [Security Testing: Types, Tools, and Best Practices](https://brightsec.com/blog/security-testing/)
",concept
900070104,accessibility testing,"Accessibility Testing is defined as a type of Software Testing performed to ensure that the application being tested is usable by people with disabilities like hearing, color blindness, old age, low vision and other disadvantaged groups.

Visit the following resources to learn more:

- [What is Accessibility Testing? (Examples)](https://www.guru99.com/accessibility-testing.html)
- [Accessibility Testing Tutorial (Step By Step Guide)](https://www.softwaretestinghelp.com/what-is-web-accessibility-testing/)
- [IBM Accessibility Toolkit](https://www.ibm.com/able/)
",concept
901,qa sdlc,qa sdlc,topic
90100,waterfall model,"Waterfall Model is a sequential model that divides software development into pre-defined phases. Each phase must be completed before the next phase can begin with no overlap between the phases. Each phase is designed for performing specific activity during the SDLC phase.

Visit the following resources to learn more:

- [What is Waterfall Model in SDLC? Advantages and Disadvantages](https://www.guru99.com/what-is-sdlc-or-waterfall-model.html)
",concept
90101,v model,"V Model is a highly disciplined SDLC model that has a testing phase parallel to each development phase. The V model is an extension of the waterfall model wherein software development and testing is executed in a sequential way. It's also known as the Validation or Verification Model.

Visit the following resources to learn more:

- [V-Model in Software Testing](https://www.guru99.com/v-model-software-testing.html)
- [SDLC V-Model](https://www.geeksforgeeks.org/software-engineering-sdlc-v-model/)
",concept
90102,agile model,agile model,topic
9010200,kanban,"Kanban is a very popular framework for development in the agile software development methodology. It provides a transparent way of visualizing the tasks and work capacity of a team. It mainly uses physical and digital boards to allow the team members to visualize the current state of the project they are working on.

A kanban board is an agile project management tool designed to help visualize work, limit work-in-progress, and maximize efficiency.

Visit the following resources to learn more:

- [Kanban - A brief introduction](https://www.atlassian.com/agile/kanban)
- [Kanban Model in Software Engineering](https://www.guru99.com/kanban-cards-boards-methodology.html)
",concept
9010201,scrum,"Scrum in Software Testing is a methodology for building complex software applications. It provides easy solutions for executing complicated tasks. Scrum helps the development team to focus on all aspects of the software product development like quality, performance, usability, and so on. It provides with transparency, inspection and adaptation during the software development to avoid complexity.

Visit the following resources to learn more:

- [Scrum Testing Methodology Tutorial](https://www.guru99.com/scrum-testing-beginner-guide.html)
- [Scrum - What is, How it works](https://www.atlassian.com/agile/scrum)
",concept
9010202,safe,"Scaled Agile Framework (SAFe) is a freely available online knowledge base that allows you to apply lean-agile practices at the enterprise level. It provides a simple and lightweight experience for software development. It is a set of organizations and workflow patterns intended to guide enterprises for scaling lean and agile practices. It is divided into three segments which are Team, Program and Portfolio.

Visit the following resources to learn more:

- [SAFe (Scaled Agile Framework) Tutorial](https://www.guru99.com/scaled-agile-framework.html)
",concept
9010203,xp,"Extreme Programming (XP) is an agile software development framework that aims to produce higher quality software, and higher quality of life for the development team. XP is the most specific of the agile frameworks regarding appropriate engineering practices for software development.

Visit the following resources to learn more:

- [What is Extreme Programming (XP)?](https://www.agilealliance.org/glossary/xp)
- [Software Engineering | Extreme Programming (XP)](https://www.geeksforgeeks.org/software-engineering-extreme-programming-xp/)
",concept
902,qa manual testing,qa manual testing,topic
90200,tdd,"Test Driven Development (TDD) is software development approach in which test cases are developed to specify and validate what the code will do. In simple terms, test cases for each functionality are created and tested first and if the test fails then the new code is written in order to pass the test and making code simple and bug-free.

Visit the following resources to learn more:

- [What is Test Driven Development (TDD)? Tutorial with Example](https://www.guru99.com/test-driven-development.html)
- [Introduction to Test Driven Development (TDD)](https://pt.coursera.org/learn/test-and-behavior-driven-development-tdd-bdd)
",concept
90201,test planning,"A Test Plan is a detailed document that describes the test strategy, objectives, schedule, estimation, deliverables, and resources required to perform testing for a software product. Test Plan helps us determine the effort needed to validate the quality of the application under test.

Visit the following resources to learn more:

- [Test Plan: What is, How to Create (with Example)](https://www.guru99.com/what-everybody-ought-to-know-about-test-planing.html)
",concept
90202,test cases and scenarios,"A Test Case is a set of actions executed to verify a particular feature or functionality of your software application. A Test Case contains test steps, test data, precondition, and postcondition developed for a specific test scenario to verify any requirement. The test case includes specific variables or conditions, using which a testing engineer can compare expected and actual results to determine whether a software product is functioning as per the requirements of the customer.

A Test Scenario is defined as any functionality that can be tested. It is a collective set of test cases which helps the testing team to determine the positive and negative characteristics of the project.

Visit the following resources to learn more:

- [Test Case vs Test Scenario – Difference Between Them](https://www.guru99.com/test-case-vs-test-scenario.html)
- [How to Write Test Cases in Software Testing with Examples](https://www.guru99.com/test-case.html)
",concept
90203,reporting,"Communicating the QA and testing team outputs can be interpreted in several different ways. Having a solid reporting stream is very essential for all the decisions that a stakeholder/manager can take.

Visit the following resources to learn more:

- [Defect Management Process in Software Testing](https://www.guru99.com/defect-management-process.html)
- [Writing clear bug reports](https://automationhacks.io/2020/07/25/writing-clear-bug-reports/)
- [The Art Of The Bug Report](https://www.ministryoftesting.com/articles/11b82aee?s_id=15465627)
",concept
90204,compatibility,"Compatibility is nothing but the capability of existing or living together. Compatibility Testing is a type of Software testing to check whether your software is capable of running on different hardware, operating systems, applications, network environments or Mobile devices.

Visit the following resources to learn more:

- [What is Compatibility Testing? Forward & Backward Example](https://www.guru99.com/compatibility-testing.html)
",concept
90205,verification and validation,"Verification in Software Testing is a process of checking documents, design, code, and program in order to check if the software has been built according to the requirements or not. The main goal of verification process is to ensure quality of software application, design, architecture etc. The verification process involves activities like reviews, walk-throughs and inspection.

Validation in Software Engineering is a dynamic mechanism of testing and validating if the software product actually meets the exact needs of the customer or not. The process helps to ensure that the software fulfills the desired use in an appropriate environment. The validation process involves activities like unit testing, integration testing, system testing and user acceptance testing.

Visit the following resources to learn more:

- [Differences Between Verification and Validation](https://www.guru99.com/verification-v-s-validation-in-a-software-testing.html)
- [Design Verification & Validation Process](https://www.guru99.com/design-verification-process.html)
",concept
903,qa automated testing,qa automated testing,topic
90300,frontend automation,frontend automation,topic
9030000,basic introduction,basic introduction,topic
903000000,html css javascript,"HTML stands for HyperText Markup Language. It is used on the front and gives structure to the webpage, which you can style using CSS and make interactive using JavaScript.

CSS or Cascading Style Sheets is the language used to style the front end of any website. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.

JavaScript allows you to add interactivity to your pages. You may have seen common examples on the websites: sliders, click interactions, popups, and so on.

Visit the following resources to learn more:

- [W3Schools: Learn HTML](https://www.w3schools.com/html/html_intro.asp)
- [W3Schools — Learn CSS](https://www.w3schools.com/css/)
- [W3Schools – JavaScript Tutorial](https://www.w3schools.com/js/)
",concept
903000001,browser devtools,"Every modern web browser includes a powerful suite of developer tools. These tools do a range of things, from inspecting currently-loaded HTML, CSS and JavaScript to showing which assets the page has requested and how long they took to load. This article explains how to use the basic functions of your browser's devtools.

Visit the following resources to learn more:

- [What are browser developer tools?](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools)
- [Browser Developer Tools](https://www.geeksforgeeks.org/browser-developer-tools/)
",concept
903000002,ajax,"AJAX stands for Asynchronous JavaScript And XML. In a nutshell, it is the use of the XMLHttpRequest object to communicate with servers. It can send and receive information in various formats, including JSON, XML, HTML, and text files.

Visit the following resources to learn more:

- [What is AJAX?](https://www.w3schools.com/whatis/whatis_ajax.asp)
- [Getting started](https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX/Getting_Started)
- [What Is Ajax?](https://www.youtube.com/watch?v=3l13qGLTgNw)
",concept
903000003,caching,"Caching ensures that the resources downloaded once are reused instead of doing a fresh fetch again. It is useful for increasing subsequent page load speed by reusing cached images, fonts, and other static assets. Caching should not be typically done on dynamic content. For example list of posts or comments. As part of the testing strategy, both caching and cache invalidation (not getting stale dynamic content) needs to be tested.

Visit the following resources to learn more:

- [Caching - Simply Explained](https://www.youtube.com/watch?v=6FyXURRVmR0)
",concept
903000004,swas pwas jamstack,"## SWAs

A Static Web Application is any web application that can be delivered directly to an end user's browser without any server-side alteration of the HTML, CSS, or JavaScript content. While this can encompass very flat, unchanging sites like a corporate web site, static web applications generally refer to rich sites that utilize technologies in the browser instead of on the server to deliver dynamic content.

## PWAs

At their heart, Progressive Web Apps are just web applications. Using progressive enhancement, new capabilities are enabled in modern browsers. Using service workers and a web app manifest, your web application becomes reliable and installable. If the new capabilities aren't available, users still get the core experience.

Progressive Web Apps provide you with a unique opportunity to deliver a web experience your users will love. Using the latest web features to bring enhanced capabilities and reliability, Progressive Web Apps allow what you build to be installed by anyone, anywhere, on any device with a single codebase.

## Jamstack

Jamstack is an architectural approach that decouples the web experience layer from data and business logic, improving flexibility, scalability, performance, and maintainability.
Jamstack removes the need for business logic to dictate the web experience. It enables a composable architecture for the web where custom logic and 3rd party services are consumed through APIs.

Visit the following resources to learn more:

- [SWA](https://www.staticapps.org/)
- [PWA](https://web.dev/progressive-web-apps/)
- [Jamstack](https://jamstack.org/)
",concept
903000005,csr vs ssr,"CSR stands for Client Side Rendering and SSR stands for Server Side Rendering. CSR pages are computed in your machine and then shown by your browser while in the case of SSR, the server sends ready to show Html content directly. Primarily React, Vue, and Angular apps are examples of CSR (technically it is possible for them to be executed in SSR mode too) and almost all older tech stacks are SSR like PHP, ruby on rails, java, dot net, etc. From the user's standpoint, CSR apps take higher time to render but compensate by avoiding page reloads later (SPA) while SSR apps often have faster initial load time but do a full page reload often.

Visit the following resources to learn more:

- [Server Side Rendering vs Client Side Rendering](https://www.youtube.com/watch?v=rNVcZklcmqU)
- [SSR vs CSR vs SSG](https://medium.com/@prashantramnyc/server-side-rendering-ssr-vs-client-side-rendering-csr-vs-pre-rendering-using-static-site-89f2d05182ef)
",concept
903000006,responsive vs adaptive,"There are two approaches to ensuring a website is optimized for mobile, tablet, laptop and PC screens: responsive design and adaptive design. While both are intended to solve the same problem, they use different strategies.

# What is responsive design?

A website created with responsive design serves up the same site to every device, but that site is fluid and will change its layout and appearance based on the size and orientation of the device.

Developers use CSS to ensure each page of the site can reformat based on the size of the user's viewport and only need to create one codebase for the site. They use something called breakpoints to tell the site when to adjust to accommodate different screen sizes.

The majority of new sites now use responsive, which has been made easier for less experienced designers and developers, thanks to the availability of themes accessible through CMS systems such as WordPress, Joomla, and Drupal.

Responsive design does not offer as much control as adaptive, but takes much less work to both build and maintain. Responsive layouts are also fluid, and whilst adaptive can and do use percentages to give a more fluid feel when scaling, these can again cause a jump when a window is resized.

# What is adaptive design?

In adaptive design, a different website layout is created for each device's screen. As it loads, the site recognizes the size of the screen and serves up the layout that was made for that viewport. In fact, you can create a different user experience for each of six common screen sizes from very small to very large: 320px, 480px, 760px, 960px, 1200px and 1600px.

Adaptive is useful for retrofitting an existing site in order to make it more suitable for mobile phones. This allows you to take control of the design and web development for specific, multiple viewports. The number of viewports that you choose to design for is entirely up to you, your company, and your overall budget. It does, however, afford you a certain amount of control (for example over content and layout) that you will not necessarily have using responsive design.
",concept
9030001,browser addons,browser addons,topic
903000100,selenium ide,"Selenium IDE is an open source web automation testing tool from the Selenium Suite used primarily for QA purposes. It functions as a Firefox extension and does not require any programming knowledge and test cases can be created simply by interacting with the browser.

Selenium itself is an open-source, automated testing tool used to test web applications across various browsers. It's primarily built in Java and supports several browsers and programming languages. Selenium IDE was developed to speed up the creation of automation scripts. It’s a rapid prototyping tool and can be used by engineers with no programming knowledge whatsoever. Because of its simplicity, Selenium IDE is best used as a prototyping tool and not a complete solution for developing and maintaining complex test suites.

Visit the following resources to learn more:

- [Selenium IDE Website](https://www.selenium.dev/selenium-ide/)
- [Selenium IDE Tutorial](https://www.softwaretestinghelp.com/selenium-ide-script-selenium-tutorial-3/)
",concept
903000101,browser addons,"With website and app users expecting flawless software, spiffy updates and market-best features that keep getting better, software testers have their hands full, pretty much on a daily basis. Day-to-day QA operations go a lot smoother when testers have appropriate tools at hand.

Given that Chrome is the undisputed market leader in web browsers, it’s safe to assume that a large number of QAs are using Chrome for their work. Turns out, there are certain Chrome extensions that can actually help QAs work faster and more efficiently.

Visit the following resources to learn more:

- [8 Browser Plugins for Testing](https://blog.gurock.com/browser-plugins-for-testing/)
- [15 Best Chrome Extensions for Software Testers](https://www.softwaretestingmaterial.com/chrome-extensions-for-software-testers/)
",concept
903000102,bug management,"Exploratory Testing is all about exploring the software by navigating random paths and discovering what it can do and what it can’t. In exploratory testing we try to verify how well system reacts to special/invalid inputs and edge cases. Bug Magnet will help you configure Data validations and variety input scenarios likely to cause issues.

Visit the following resources to learn more:

- [Bug Magnet Website](https://bugmagnet.org/)
- [Bug Magnet: Chrome Extension for Exploratory Testing](http://www.testingjournals.com/bug-magnet-extension-exploratory-testing/)
",concept
903000103,check my links,"Check My Links is a link checker that crawls through your webpage and looks for broken links. Is an extension developed primarily for web designers, developers and content editors.

Visit the following resources to learn more:

- [Check My Links Official Docs](https://github.com/PageModifiedOfficial/Check-My-Links)
",concept
903000104,ghost inspector,"Ghost Inspector is a codeless automated testing tool that allows you to easily create and run automated browser tests for websites and web applications. These tests carry out actions in a web browser the same way a real user would to ensure that everything is working properly.

Visit the following resources to learn more:

- [Ghost Inspector Website](https://ghostinspector.com/)
- [What Is Ghost Inspector? Overview & Tour Of Features](https://theqalead.com/test-management/what-is-ghost-inspector-overview-tour-of-features/)
",concept
9030002,automation frameworks,automation frameworks,topic
903000200,qa wolf,"QA Wolf is a hybrid platform & service that helps software teams ship better software faster by taking QA completely off their plate.

Visit the following resources to learn more:

- [QA Wolf](https://www.qawolf.com/)
- [QA Wolf Official Docs](https://app.qawolf.com/docs/why-qa-wolf)
- [Getting started with QA Wolf](https://app.qawolf.com/docs/create-a-test)
- [QA Wolf Tutorial](https://www.youtube.com/watch?v=BRxVu0De-4k&list=PL33T95M59Kkg1zKCU5NHc2g2XYXOs3-DU)
",concept
903000201,cypress,"Cypress framework is a JavaScript-based end-to-end testing framework built on top of Mocha – a feature-rich JavaScript test framework running on and in the browser, making asynchronous testing simple and convenient. It also uses a BDD/TDD assertion library and a browser to pair with any JavaScript testing framework.

Visit the following resources to learn more:

- [Official Website](https://www.cypress.io/)
- [Official Documentation](https://docs.cypress.io/guides/overview/why-cypress#Other)
- [How it works](https://www.cypress.io/how-it-works)
- [Cypress End-to-End Testing](https://www.youtube.com/watch?v=7N63cMKosIE)
",concept
903000202,webdriver io,"WebdriverIO is a progressive automation framework built to automate modern web and mobile applications. It simplifies the interaction with your app and provides a set of plugins that help you create a scalable, robust and stable test suite.

WebdriverIO leverages the power of the WebDriver protocol that is developed and supported by all browser vendors and guarantees a true cross-browser testing experience. While other automation tools require you to download modified browser that aren't used by actual users or emulate user behavior by injecting JavaScript, WebdriverIO relies on a common agreed standard for automation that is properly tested and ensures compatibility for decades to come.

During the development of this automation standard the web has changed a lot and many of the requirements that developers have today to test their web application can not be fulfilled using WebDriver anymore. While some of the core contributors of this project help support the next generation of the WebDriver protocol, WebdriverIO provides an alternative automation solution based on the Chrome DevTools protocol. This allows the user to seamlessly switch between conventional commands based on WebDriver and powerful browser interactions through Puppeteer.

Visit the following resources to learn more:

- [WebdriverIO Website](https://webdriver.io/)
- [A brief overview of WebdriverIO](https://webdriver.io/docs/what-is-webdriverio)
- [Getting started with WebdriverIO](https://webdriver.io/docs/gettingstarted)
- [WebdriverIO Tutorial](https://www.youtube.com/watch?v=e8goAKb6CC0&list=PL6AdzyjjD5HBbt9amjf3wIVMaobb28ZYN)
",concept
903000203,jasmine,"Jasmine is a very popular JavaScript BDD (behavior-driven development) framework for unit testing JavaScript applications. It provides utilities that can be used to run automated tests for both synchronous and asynchronous code. It does not depend on any other JavaScript frameworks. It does not require a DOM.

Visit the following resources to learn more:

- [Jasmines Official Website](https://jasmine.github.io/)
- [Easy and Practical example of Angular testing with Jasmine](https://semaphoreci.com/community/tutorials/testing-components-in-angular-2-with-jasmine)
- [Starting with Jasmine from Scratch](https://www.testim.io/blog/jasmine-js-a-from-scratch-tutorial-to-start-testing)
",concept
903000204,nightwatch,"Nightwatch.js is an open-source automated testing framework that is powered by Node.js and provides complete E2E (end to end) solutions to automation testing with Selenium Javascript be it for web apps, browser apps, and websites.

Visit the following resources to learn more:

- [Nightwatch.js Website](https://nightwatchjs.org/)
- [NightwatchJS Tutorial: Get Started with Automation Testing](https://www.browserstack.com/guide/nightwatch-framework-tutorial)
",concept
903000205,robot framework,"Robot Framework is a Python-based, extensible keyword-driven automation framework for acceptance testing, acceptance test driven development (ATDD), behavior driven development (BDD) and robotic process automation (RPA).

Robot Framework is open and extensible. Robot Framework can be integrated with virtually any other tool to create powerful and flexible automation solutions.

Visit the following resources to learn more:

- [Robot Framework Official Website](https://robotframework.org/)
- [Robot Framework Official User Guide](https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html)
- [Basic Step-by-step Robot Framework tutorial](https://medium.com/swlh/robot-framework-the-basics-dfeadc025bea)
- [Excellent tutorial to start working with Robot Framework](https://www.geeksforgeeks.org/robot-framework-in-python/)
",concept
903000206,selenium,"Selenium is an open-source tool that automates web browsers. It provides a single interface that lets you write test scripts in programming languages like Ruby, Java, NodeJS, PHP, Perl, Python, and C#, among others.

Visit the following resources to learn more:

- [Seleniums Official Website](https://www.selenium.dev/)
- [Selenium Tutorial](https://www.browserstack.com/selenium)
",concept
903000207,jest,"Jest is a delightful JavaScript Testing Framework with a focus on simplicity.
It works with projects using: Babel, TypeScript, Node, React, Angular, Vue and more!

Visit the following resources to learn more:

- [Official Website](https://jestjs.io/)
- [Official Documentation](https://jestjs.io/docs/getting-started)
- [Jest Crash Course - Unit Testing in JavaScript](https://www.youtube.com/watch?v=7r4xVDI2vho)
",concept
903000208,puppeteer,"Puppeteer is a Node library which provides a high-level API to control headless Chrome or Chromium over the DevTools Protocol. It can also be configured to use full (non-headless) Chrome or Chromium.

Visit the following resources to learn more:

- [Puppetter](https://developer.chrome.com/docs/puppeteer/)
- [Puppetter Tutorial](https://www.freecodecamp.org/news/how-to-use-puppeteer-with-nodejs/)
",concept
903000209,playwright,"Playwright Test was created specifically to accommodate the needs of end-to-end testing. Playwright supports all modern rendering engines including Chromium, WebKit, and Firefox. Test on Windows, Linux, and macOS, locally or on CI, headless or headed with native mobile emulation of Google Chrome for Android and Mobile Safari.Playwright leverages the DevTools protocol to write powerful, stable automated tests.Playwright can actually see into and control the browser rather than relying on a middle translation layer, it allows for the simulation of more insightful and relevant user scenarios.

Visit the following resources to learn more:

- [Official Website: Playwright](https://playwright.dev/)
- [Playwright Tutorial](https://www.browserstack.com/guide/playwright-tutorial)
",concept
90301,mobile automation,mobile automation,topic
9030100,appium,"Appium is an open-source framework that allows QAs to conduct automated app testing on different platforms like Android, iOS, and Windows. It is developed and supported by Sauce Labs to automate native and hybrid mobile apps. It is a cross-platform mobile automation tool, which means that it allows the same test to be run on multiple platforms.

Visit the following resources to learn more:

- [Appium Website](https://appium.io/)
- [Appium Tutorial for Mobile Application Testing](https://www.browserstack.com/guide/appium-tutorial-for-testing)
- [Appium Website](https://appium.io/docs/en/2.0/intro/)
- [Appium example tests on Github](https://github.com/appium/appium/tree/1.x/sample-code)
",concept
9030101,xcuitest,"Mobile app testing, and more specifically, app UI testing involves checking how the interface behaves when user actions are performed and then compares results with expected outcomes. Here, testers try to replicate exactly how a user would interact with the application and validate the state of the UI. XCUITest allows them to write test cases for these purposes using two fundamental concepts.

Visit the following resources to learn more:

- [Official Documentation](https://developer.apple.com/documentation/xctest/)
- [Getting Started with XCUITest](https://www.browserstack.com/guide/getting-started-xcuitest-framework)
- [Xcuitest - End to End Testing](https://testautomationu.applitools.com/learningpaths.html?id=mobile-swift-path)
",concept
9030102,espresso,"Espresso is a native testing framework for Android to write reliable UI tests. Google released the Espresso framework in October 2013 and, as of release version 2.0, Espresso is part of the Android Support Repository. One of the important features in Espresso is that it automatically synchronizes your test actions with the user interface of your application. The framework also ensures that your activity is started before the test runs. It can also force a test to wait until all observer background activities have finished, which is sometimes a problem with other testing frameworks.

Visit the following resources to learn more:

- [Official Documentation](https://developer.android.com/training/testing/espresso#kotlin)
- [Espresso Testing Tutorial](https://www.tutorialspoint.com/espresso_testing/index.htm)
- [Espresso Code Samples on Github](https://github.com/android/testing-samples)
",concept
9030103,detox,"Detox is a JavaScript mobile testing framework that is built into the application and the test execution starts with app launch. This makes test execution really fast and robust as no external additional tools are needed to orchestrate and synchronize during the test execution.

Visit the following resources to learn more:

- [Detox Website](https://wix.github.io/Detox/)
- [Getting Started with Detox](https://wix.github.io/Detox/docs/introduction/getting-started)
- [Test Automation Tools: Detox](https://www.spritecloud.com/test-automation-tools-detox/)
",concept
90302,backend automation,backend automation,topic
9030200,karate framework,"Karate is the only open-source tool to combine API test-automation, mocks, performance-testing and even UI automation into a single, unified framework. The BDD syntax popularized by Cucumber is language-neutral, and easy for even non-programmers. Assertions and HTML reports are built-in, and you can run tests in parallel for speed.

There's also a cross-platform stand-alone executable for teams not comfortable with Java. You don't have to compile code. Just write tests in a simple, readable syntax - carefully designed for HTTP, JSON, GraphQL and XML. And you can mix API and UI test-automation within the same test script.

A Java API also exists for those who prefer to programmatically integrate Karate's rich automation and data-assertion capabilities.

Visit the following resources to learn more:

- [karate website](https://www.karatelabs.io/)
- [karate architecture](https://github.com/karatelabs/karate/blob/master/karate-core/src/test/resources/karate-map.jpg?raw=true)
- [karate for beginner](https://www.youtube.com/watch?v=1f6xtJpRx4k&list=PLhW3qG5bs-L-y5Q1zDXJAur1JNZVFB534)
",concept
9030201,cypress,"Cypress framework is a JavaScript-based end-to-end testing framework built on top of Mocha – a feature-rich JavaScript test framework running on and in the browser, making asynchronous testing simple and convenient. It also uses a BDD/TDD assertion library and a browser to pair with any JavaScript testing framework.

Visit the following resources to learn more:

- [Official Website](https://www.cypress.io/)
- [Official Documentation](https://docs.cypress.io/guides/overview/why-cypress#Other)
- [Cypress End-to-End Testing](https://www.youtube.com/watch?v=7N63cMKosIE)
- [Cypress Tips & Trics](https://www.youtube.com/watch?v=PZ2OsLBts1E&list=PLP9o9QNnQuAYYRpJzDNWpeuOVTwxmIxcI)
- [Cypress - End to End Testing Framework](https://dev.to/bushraalam/cypress-end-to-end-testing-framework-3naa)
",concept
9030202,soap ui,"SoapUI is the world's leading Functional Testing tool for SOAP and REST testing. With its easy-to-use graphical interface, and enterprise-class features, SoapUI allows you to easily and rapidly create and execute automated functional, regression, and load tests.

Visit the following resources to learn more:

- [SoapUI Official Website](https://www.soapui.org/)
- [SoapUI Docs](https://www.soapui.org/getting-started/)
",concept
9030203,postman newman,"Postman is an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs—faster. It is an API client that makes it easy for developers to create, share, test, and document APIs. With this open-source solution, users can create and save simple and complex HTTP/s requests and read their responses.

Newman is a command-line Collection Runner for Postman. It enables you to run and test a Postman Collection directly from the command line. It's built with extensibility to integrate it with your continuous integration servers and build systems.

Visit the following resources to learn more:

- [Postman website](https://www.postman.com)
- [Learn postman](https://learning.postman.com/docs/getting-started/introduction/)
- [API testing with postman](https://www.youtube.com/watch?v=VywxIQ2ZXw4)
- [ Newman cli usage](https://learning.postman.com/docs/running-collections/using-newman-cli/command-line-integration-with-newman/)
",concept
9030204,rest assured,"Rest-assured helps developers and test engineers to test REST APIs in Java ease by using techniques used in dynamic languages such as Groovy and Ruby.

Visit the following resources to learn more:

- [REST-assured Website](https://rest-assured.io)
- [REST Assured Tutorial: How to test API with Example](https://www.guru99.com/rest-assured.html)
",concept
904,qa non functional testing,qa non functional testing,topic
90400,load and performance testing,load and performance testing,topic
9040000,vegeta,"Vegeta is a versatile HTTP load testing tool built out of a need to drill HTTP services with a constant request rate. It can be used both as a command line utility and a library.

Visit the following resources to learn more:

- [Vegeta Website](https://github.com/tsenart/vegeta)
",concept
9040001,jmeter,"Apache JMeter is an Apache project that can be used as a load testing tool for analyzing and measuring the performance of a variety of services, with a focus on web applications.

Visit the following resources to learn more:

- [Apache JMeter Website](https://jmeter.apache.org/)
- [Learn JMeter](https://www.youtube.com/playlist?list=PLJ9A48W0kpRIjLkZ32Do9yDZXnnm7_uj_)
",concept
9040002,locust,"Locust is an easy-to-use, scriptable and scalable performance testing tool. You define the behavior of your users in regular Python code instead of being stuck in a UI or restrictive domain-specific language. This makes Locust infinitely expandable and very developer friendly. Given below are some of the features of Locust.

- Write test scenarios in plain old Python
- Distributed and scalable - supports hundreds of thousands of concurrent users
- Web-based UI
- Can test any system
- Hackable

Visit the following resources to learn more:

- [Locust Website](https://locust.io/)
- [Learn Locust](https://www.youtube.com/playlist?list=PLJ9A48W0kpRKMCzJARCObgJs3SinOewp5)
",concept
9040003,gatling,"Gatling is a highly capable load testing tool. It is designed for ease of use, maintainability and high performance.

Out of the box, Gatling comes with excellent support of the HTTP protocol that makes it a tool of choice for load testing any HTTP server. As the core engine is actually protocol agnostic, it is perfectly possible to implement support for other protocols. For example, Gatling currently also ships JMS support.

Gatling’s architecture is asynchronous as long as the underlying protocol, such as HTTP, can be implemented in a non blocking way. This kind of architecture lets us implement virtual users as messages instead of dedicated threads, making them very resource cheap. Thus, running thousands of concurrent virtual users is not an issue.

Visit the following resources to learn more:

- [Gatling Website](https://gatling.io/)
- [Learn Gatling](https://www.youtube.com/playlist?list=PLJ9A48W0kpRJE6s8I1MjWm-z8BGbUYNCw)
",concept
9040004,k6,"Grafana k6 is an open-source load testing tool that makes performance testing easy and productive for engineering teams. k6 is free, developer-centric, and extensible.

Using k6, you can test the reliability and performance of your systems and catch performance regressions and problems earlier. k6 will help you to build resilient and performant applications that scale.

Visit the following resources to learn more:

- [k6 Website](https://k6.io/)
- [Learn k6](https://www.youtube.com/playlist?list=PLJ9A48W0kpRJKmVeurt7ltKfrOdr8ZBdt)
",concept
9040005,artillery,"Artillery is a modern, powerful & easy-to-use performance testing toolkit. Use it to ship scalable applications that stay performant & resilient under high load.

Artillery prioritizes developer productivity and happiness, and follows the ""batteries-included"" philosophy.

## Features

- Emulate complex user behavior with scenarios
- Load testing and smoke testing
- Batteries included
- Extensible & hackable
- Integrations and add-ons
- Designed for cross-team collaboration
- Planet-scale testing

Visit the following resources to learn more:

- [Artillery Website](https://www.artillery.io/)
- [Learn Artillery](https://www.youtube.com/playlist?list=PLJ9A48W0kpRJh1_uW2mVNhSIVCMYmNlm7)
",concept
9040006,lighthouse,"Lighthouse is an open-source, automated tool for improving the quality of web pages. You can run it against any web page, public or requiring authentication. It has audits for performance, accessibility, progressive web apps, SEO, and more. You can run Lighthouse in Chrome DevTools, from the command line, or as a Node module. You give Lighthouse a URL to audit, run a series of audits against the page, and then generate a report on how well the page did. From there, use the failing audits as indicators on how to improve the page. Each audit has a reference doc explaining why the audit is important and how to fix it.

Visit the following resources to learn more:

- [Lighthouse Website](https://github.com/GoogleChrome/lighthouse/)
",concept
9040007,webpage test,"WebPageTest is a web performance tool providing deep diagnostic information about how a page performs under a variety of conditions.

Each test can be run from different locations around the world, on real browsers, over any number of customizable network conditions.

Visit the following resources to learn more:

- [WebPageTest Website](https://www.webpagetest.org/)
",concept
90401,accessibility testing,accessibility testing,topic
9040100,chrome devtools,"These are a set of tools built into the browser to aid frontend developers diagnose and solve various issues in their applications — such as JavaScript and logical bugs, CSS styling issues or even just making quick temporary alterations to the DOM.

To enter the dev tools, right click and click **Inspect** (or press `ctrl+shift+c`/`cmd+opt+c`) to enter the Elements panel. Here you can debug CSS and HTML issues. If you want to see logged messages or interact with javascript, enter the **Console** tab from the tabs above (or press `ctrl+shift+j`/`cmd+opt+j` to enter it directly). Another very useful feature in the Chrome dev tools is the Lighthouse (for checking performance) — more on this later.

NOTE: This isn't a chrome-specific feature, and most browsers (Chromium based or otherwise) will have their own, largely-similar set of devtools.

Visit the following resources to learn more:

- [Official Docs](https://developer.chrome.com/docs/devtools/overview/)
- [Mastering Chrome Dev Tools](https://www.freecodecamp.org/news/mastering-chrome-developer-tools-next-level-front-end-development-techniques-3ac0b6fe8a3/)
",concept
9040101,wave,"Wave is a suite of evaluation tools that helps authors make their web content more accessible to individuals with disabilities. WAVE can identify many accessibility and Web Content Accessibility Guideline (WCAG) errors, but also facilitates human evaluation of web content.

Visit the following resources to learn more:

- [Wave Website](https://wave.webaim.org/)
- [WAVE Accessibility Testing Tool Tutorial](https://www.softwaretestinghelp.com/web-accessibility-testing-tools/)
",concept
9040102,axe,"Axe is a fast and lightweight accessibility testing tool that checks the entire document against the rules and generates a report with all violations, passes, etc.

Visit the following resources to learn more:

- [Axe Website](https://www.deque.com/axe/)
- [Accessibility testing using the axe-core library](https://www.browserstack.com/docs/automate/selenium/accessibility-testing)
",concept
90402,security testing,security testing,topic
9040200,authentication authorization,"`Authentication` is the process of verifying that an individual, entity or website is whom it claims to be. Authentication in the context of web applications is commonly performed by submitting a username or ID and one or more items of private information that only a given user should know.

`Authorization` may be defined as ""the process of verifying that a requested action or service is approved for a specific entity"" (NIST). `Authorization` is distinct from authentication which is the process of verifying an entity's identity. When designing and developing a software solution, it is important to keep these distinctions in mind. A user who has been authenticated (perhaps by providing a username and password) is often not authorized to access every resource and perform every action that is technically possible through a system.

For example, a web app may have both regular users and admins, with the admins being able to perform actions the average user is not privileged to do so, even though they have been authenticated. Additionally, authentication is not always required for accessing resources; an unauthenticated user may be authorized to access certain public resources, such as an image or login page, or even an entire web app.

Visit the following resources to learn more:

- [OWASP Website](https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html)
",concept
9040201,vulnerability scanning,"Vulnerability scanning identifies hosts and host attributes
(e.g., operating systems, applications, open ports), but it also attempts to identify vulnerabilities rather
than relying on human interpretation of the scanning results. Many vulnerability scanners are equipped to
accept results from network discovery and network port and service identification, which reduces the
amount of work needed for vulnerability scanning.

Also, some scanners can perform their own network
discovery and network port and service identification. Vulnerability scanning can help identify outdated
software versions, missing patches, and misconfigurations, and validate compliance with or deviations
from an organization’s security policy.

This is done by identifying the operating systems and major
software applications running on the hosts and matching them with information on known vulnerabilities
stored in the scanners’ vulnerability databases.

Visit the following resources to learn more:

- [NIST Website](https://csrc.nist.gov/glossary/term/vulnerability_scanning)
",concept
9040202,owasp 10,"The Open Web Application Security Project, or OWASP, is an international non-profit organization dedicated to web application security.

The OWASP Top 10 is a regularly-updated report outlining security concerns for web application security, focusing on the 10 most critical risks. The report is put together by a team of security experts from all over the world. OWASP refers to the Top 10 as an ‘awareness document’ and they recommend that all companies incorporate the report into their processes in order to minimize and/or mitigate security risks.

Visit the following resources to learn more:

- [OWASP Top 10](https://owasp.org/www-project-top-ten/)
- [What is the OWASP Top 10?](https://www.cloudflare.com/learning/security/threats/owasp-top-10/)
",concept
9040203,attack vectors,"This metric reflects the context by which vulnerability exploitation is possible. This metric value (and consequently the Base Score) will be larger the more remote (logically, and physically) an attacker can be in order to exploit the vulnerable component. The assumption is that the number of potential attackers for a vulnerability that could be exploited from across a network is larger than the number of potential attackers that could exploit a vulnerability requiring physical access to a device, and therefore warrants a greater Base Score.

Visit the following resources to learn more:

- [FIRST.org Website](https://www.first.org/cvss/v3.1/specification-document)
",concept
9040204,secrets management,"Secrets Management is a systematic way of in managing, storing, securing, and retrieving credentials for any systems, database, and other services.

Credentials such as passwords, SSH keys, certificates, API keys, backup codes, and more.

Visit the following resources to learn more:

- [AWS Secrets Management Website](https://aws.amazon.com/secrets-manager/)
- [Vault Website](https://www.vaultproject.io/)
",concept
905,qa email testing,qa email testing,topic
90500,mailinator,"Mailinator allows Developers and QA Testing teams to automatically test their SMS and Email workflows like 2FA verifications, sign-ups, and password resets with trillions of inboxes at your fingertips. Whether you do Manual Testing, use an API, or a framework like Selenium, Cypress, Playwright, or Puppeteer - Mailinator will close the loop on email/SMS testing.

Visit the following resources to learn more:

- [Mailinator](https://www.mailinator.com/)
- [Mailinator Official Docs](https://www.mailinator.com/docs/index.html#mailinator)
",concept
90501,gmail tester,"Gmail-tester is a simple Node.js Gmail client which checks/returns email message(s) straight from any Gmail-powered account (both private and company).

Visit the following resources to learn more:

- [Gmail-tester Website](https://www.npmjs.com/package/gmail-tester)
- [Using the gmail-tester + Puppeteer to poll Gmail inbox](https://medium.com/@sergtimosh/using-gmail-tester-puppeteer-to-poll-gmail-inbox-65bbee17618c)
",concept
906,qa reporting,qa reporting,topic
90600,junit,"JUnit is known as a unit testing framework used for the Java programming language. JUnit has been playing a crucial in the development of test-driven development and is one of a family of unit testing frameworks. JUnit is useful to write repeatable tests for your application code units. JUnit stimulates the idea of “testing first, then coding,”. The test approach explicates –test a little + code a little = JUnit. JUnit helps the programmer by increasing the productivity and the stability of the program’s code snippets.That will helps in reducing the time of the tester, which is spent on debugging of the code.

Visit the following resources to learn more:

- [What is JUnit?](https://www.tutorialspoint.com/junit/junit_test_framework.htm)
",concept
90601,allure,"Allure Report is a flexible, lightweight multi-language test reporting tool. It provides clear graphical reports and allows everyone involved in the development process to extract the maximum of information from the everyday testing process.

Visit the following resources to learn more:

- [Allure](https://qameta.io/)
- [Allure Official Docs](https://docs.qameta.io/allure-report/)
",concept
90602,test rail,"TestRail is a web-based test management tool used by testers, developers and other stake holders to manage, track and organize software testing efforts. It follows a centralized test management concept that helps in easy communication and enables rapid development of task across QA team and other stakeholders .

Visit the following resources to learn more:

- [Testrail](https://www.gurock.com/testrail/)
- [Testrail Official Docs](https://support.gurock.com/hc/en-us/)
- [Testrail Tutorial Docs](https://www.tutorialspoint.com/testrail/testrail_introduction.htm)
",concept
907,qa monitoring logs,qa monitoring logs,topic
90700,grafana,"Grafana is the open-source platform for monitoring and observability. It allows you to query, visualize, alert on and understand your metrics no matter where they are stored.

Visit the following resources to learn more:

- [Grafana Website](https://grafana.com/)
- [Grafana Official Documentation](https://grafana.com/docs/)
- [Grafana Community](https://community.grafana.com/)
- [Grafana Webinars and Videos](https://grafana.com/videos/)
",concept
90701,new relic,"New Relic is an observability platform that helps you build better software. You can bring in data from any digital source so that you can fully understand your system and how to improve it.

Visit the following resources to learn more:

- [New Relic Website](https://newrelic.com/)
- [Learn New Relic](https://learn.newrelic.com/)
",concept
90702,run scope,"A Simple Tool for Monitoring Complex APIs. Verify that the structure and content of your API calls meets your expectations. Powerful and flexible assertions give you total control over defining a successful API call.

Create simple monitors with dynamic data for even the most complex use cases. More than simple string matching, build API validations without any code and use them across local dev, staging and production environments.

Visit the following resources to learn more:

- [Runscope Website](https://www.runscope.com)
",concept
90703,sentry,"Sentry tracks your software performance, measuring metrics like throughput and latency, and displaying the impact of errors across multiple systems. Sentry captures distributed traces consisting of transactions and spans, which measure individual services and individual operations within those services.

Visit the following resources to learn more:

- [Sentry Website](https://sentry.io)
",concept
90704,kibana,"Kibana is a free and open user interface that lets you visualize your Elasticsearch data and navigate the Elastic Stack. Do anything from tracking query load to understanding the way requests flow through your apps.

Visit the following resources to learn more:

- [Elastic Kibana Website](https://www.elastic.co/kibana/)
- [Learn Kibana](https://www.elastic.co/training/free)
",concept
90705,data dog,"Datadog is a monitoring and analytics platform for large-scale applications. It encompasses infrastructure monitoring, application performance monitoring, log management, and user-experience monitoring. Datadog aggregates data across your entire stack with 400+ integrations for troubleshooting, alerting, and graphing.

Visit the following resources to learn more:

- [Datadog Website](https://www.datadoghq.com/)
- [Official Documentation](https://docs.datadoghq.com/)
",concept
90706,pager duty,"Through its SaaS-based platform, PagerDuty empowers developers, DevOps, IT operations and business leaders to prevent and resolve business-impacting incidents for exceptional customer experience. When revenue and brand reputation depends on customer satisfaction, PagerDuty arms organizations with the insight to proactively manage events that may impact customers across their IT environment. With hundreds of native integrations, on-call scheduling and escalations, machine learning, business-wide response orchestration, analytics, and much more, PagerDuty gets the right data in the hands of the right people in real time, every time.

Visit the following resources to learn more:

- [PagerDuty Website](https://www.pagerduty.com/)
- [Learn PagerDuty](https://university.pagerduty.com/)
",concept
908,qa vcs,qa vcs,topic
90800,git,"[Git](https://git-scm.com/) is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Visit the following resources to learn more:

- [Git & GitHub Crash Course For Beginners](https://www.youtube.com/watch?v=SWYqp7iY_Tc)
- [Learn Git with Tutorials, News and Tips - Atlassian](https://www.atlassian.com/git)
- [Git Cheat Sheet](https://cs.fyi/guide/git-cheatsheet)
",concept
909,qa repo hosting services,qa repo hosting services,topic
90900,gitlab,"GitLab is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitLab Website](https://gitlab.com/)
- [GitLab Documentation](https://docs.gitlab.com/)
",concept
90901,bitbucket,"Bitbucket is a Git based hosting and source code repository service that is Atlassian's alternative to other products like GitHub, GitLab etc

Bitbucket offers hosting options via Bitbucket Cloud (Atlassian's servers), Bitbucket Server (customer's on-premise) or Bitbucket Data Centre (number of servers in customers on-premise or cloud environment)

Visit the following resources to learn more:

- [Bitbucket Website](https://bitbucket.org/product)
- [A brief overview of Bitbucket](https://bitbucket.org/product/guides/getting-started/overview#a-brief-overview-of-bitbucket)
- [Getting started with Bitbucket](https://bitbucket.org/product/guides/basics/bitbucket-interface)
- [Using Git with Bitbucket Cloud](https://www.atlassian.com/git/tutorials/learn-git-with-bitbucket-cloud)
- [Bitbucket tutorial | How to use Bitbucket Cloud](https://www.youtube.com/watch?v=M44nEyd_5To)
- [Bitbucket Tutorial | Bitbucket for Beginners](https://www.youtube.com/watch?v=i5T-DB8tb4A)
",concept
90902,github,"GitHub is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.

Visit the following resources to learn more:

- [GitHub Website](https://github.com)
- [GitHub Documentation](https://docs.github.com/en/get-started/quickstart)
- [What is GitHub?](https://www.youtube.com/watch?v=w3jLJU7DT5E)
- [Git vs. GitHub: Whats the difference?](https://www.youtube.com/watch?v=wpISo9TNjfU)
- [Git and GitHub for Beginners](https://www.youtube.com/watch?v=RGOj5yH7evk)
- [Git and GitHub - CS50 Beyond 2019](https://www.youtube.com/watch?v=eulnSXkhE7I)
- [How to Use Git in a Professional Dev Team](https://ooloo.io/project/github-flow)
",concept
910,qa ci cd,qa ci cd,topic
91000,jenkins,"Jenkins is an open-source CI/CD automation server. Jenkins is primarily used for building projects, running tests, static code analysis and deployments.

Visit the following resources to learn more:

- [Jenkins Website](https://www.jenkins.io/)
- [Official Jenkins Handbook](https://www.jenkins.io/doc/book/)
- [Jenkins Getting Started Guide](https://www.jenkins.io/doc/pipeline/tour/getting-started/)
",concept
91001,travis ci,"Travis CI is a CI/CD service that is primarily used for building and testing projects that are hosted on BitBucket and GitHub. Open source projects can utilized Travis CI for free.

Visit the following resources to learn more:

- [Travis CI Website](https://www.travis-ci.com/)
- [Travis CI Documentation](https://docs.travis-ci.com/)
- [Travis CI Tutorial](https://docs.travis-ci.com/user/tutorial/)
",concept
91002,circle ci,"CircleCI is a CI/CD service that can be integrated with GitHub, BitBucket and GitLab repositories. The service that can be used as a SaaS offering or self-managed using your own resources.

Visit the following resources to learn more:

- [CircleCI Website](https://circleci.com/)
- [CircleCI Documentation](https://circleci.com/docs)
- [Configuration Tutorial](https://circleci.com/docs/config-intro)
",concept
91003,drone,"Drone is a CI/CD service offering by [Harness](https://harness.io/). Each build runs on an isolated Docker container, and Drone integrates with many popular source code management repositories like GitHub, BitBucket and GitLab

Visit the following resources to learn more:

- [Drone Website](https://www.drone.io/)
- [Official Documentation](https://docs.drone.io/)
- [Drone Getting Started Guide](https://docs.drone.io/server/overview/)
",concept
91004,gitlab ci,"GitLab offers a CI/CD service that can be used as a SaaS offering or self-managed using your own resources. You can use GitLab CI with any GitLab hosted repository, or any BitBucket Cloud or GitHub repository in the GitLab Premium self-managed, GitLab Premium SaaS and higher tiers.

Visit the following resources to learn more:

- [GitLab Website](https://gitlab.com/)
- [GitLab Documentation](https://docs.gitlab.com/)
- [Get Started with GitLab CI](https://docs.gitlab.com/ee/ci/quick_start/)
- [Learn GitLab Tutorials](https://docs.gitlab.com/ee/tutorials/)
- [GitLab CI/CD Examples](https://docs.gitlab.com/ee/ci/examples/)
",concept
91005,bamboo,"Bamboo is a CI/CD service provided by Atlassian. Bamboo is primarily used for automating builds, tests and releases in a single workflow.

Visit the following resources to learn more:

- [Bamboo Website](https://www.atlassian.com/software/bamboo)
- [Official Documentation](https://confluence.atlassian.com/bamboo/bamboo-documentation-289276551.html)
- [Bamboo Getting Started Guide](https://confluence.atlassian.com/bamboo/getting-started-with-bamboo-289277283.html)
",concept
91006,team city,"TeamCity is a CI/CD service provided by JetBrains. TeamCity can be used as a SaaS offering or self-managed using your own resources.

Visit the following resources to learn more:

- [TeamCity Website](https://www.jetbrains.com/teamcity/)
- [Official Documentation](https://www.jetbrains.com/help/teamcity/teamcity-documentation.html)
- [TeamCity Tutorials](https://www.jetbrains.com/teamcity/tutorials/)
- [TeamCity Learning Portal](https://www.jetbrains.com/teamcity/learn/)
",concept
91007,azure devops services,"Azure DevOps is developed by Microsoft as a full scale application lifecycle management and CI/CD service. Azure DevOps provides developer services for allowing teams to plan work, collaborate on code development, and build and deploy applications.

Visit the following resources to learn more:

- [Azure DevOps Website](https://azure.microsoft.com/en-us/services/devops/#overview)
- [Official Documentation](https://docs.microsoft.com/en-us/azure/devops/?view=azure-devops&viewFallbackFrom=vsts)
- [Azure DevOps Getting Started Guide](https://docs.microsoft.com/en-us/azure/devops/user-guide/sign-up-invite-teammates?view=azure-devops)
",concept
911,qa headless testing,qa headless testing,topic
91100,zombie js,"Zombie.js allows you to run Unit or Integration tests without a real web browser. Instead, it uses a simulated browser where it stores the HTML code and runs the JavaScript you may have in your HTML page. This means that an HTML page doesn’t need to be displayed, saving precious time that would otherwise be occupied rendering it.

Visit the following resources to learn more:

- [Zombie.js Website](http://zombie.js.org/)
- [Getting Started with Zombie.js](https://www.packt.com/getting-started-zombiejs/)
",concept
91101,playwright,"Playwright is an open-source test automation library initially developed by Microsoft contributors. It supports programming languages such as Java, Python, C#, and NodeJS. Playwright comes with Apache 2.0 License and is most popular with NodeJS with Javascript/Typescript.

Visit the following resources to learn more:

- [Playwright Website](https://playwright.dev/)
- [Playwright Tutorial: Learn Basics and Setup](https://www.browserstack.com/guide/playwright-tutorial)
",concept
91102,puppeteer,"Puppeteer is a Node library that provides a high-level API to control headless Chrome or Chromium browsers over the DevTools Protocol. It can also be configured to use full (non-headless) Chrome or Chromium.

Visit the following resources to learn more:

- [Puppeteer Website](https://pptr.dev/)
- [How to Use Puppeteer With Node.js](https://www.freecodecamp.org/news/how-to-use-puppeteer-with-nodejs/)
",concept
91103,cypress,"Cypress framework is a JavaScript-based end-to-end testing framework built on top of Mocha – a feature-rich JavaScript test framework running on and in the browser, making asynchronous testing simple and convenient. It also uses a BDD/TDD assertion library and a browser to pair with any JavaScript testing framework.

Visit the following resources to learn more:

- [Official Website](https://www.cypress.io/)
- [Official Documentation](https://docs.cypress.io/guides/overview/why-cypress#Other)
- [Cypress End-to-End Testing](https://www.youtube.com/watch?v=7N63cMKosIE)
",concept
91104,headless chrome,"Headless Chrome is a way to run the Chrome browser in a headless environment without the full browser UI. One of the benefits of using Headless Chrome (as opposed to testing directly in Node) is that your JavaScript tests will be executed in the same environment as users of your site.

Visit the following resources to learn more:

- [Headless Chromium](https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md)
",concept
91105,headless fox,"Headless Browser Testing is a process of running the browser tests without the type of browser UI or GUI. In headless browser testing, to conduct cross-browser testing the tester can run test cases accurately and successfully without requiring the browser on which application needs to be tested.

Visit the following resources to learn more:

- [Using Headless Mode in Firefox](https://hacks.mozilla.org/2017/12/using-headless-mode-in-firefox/)
",concept
91106,html unit,"HtmlUnit is a ""GUI-Less browser for Java programs"". It models HTML documents and provides an API that allows you to invoke pages, fill out forms, click links, etc... just like you do in your ""normal"" browser. It has fairly good JavaScript support (which is constantly improving) and is able to work even with quite complex AJAX libraries, simulating Chrome, Firefox or Internet Explorer depending on the configuration used.

HtmlUnit is not a generic unit testing framework. It is specifically a way to simulate a browser for testing purposes and is intended to be used within another testing framework such as JUnit or TestNG.

Visit the following resources to learn more:

- [HtmlUnit Website](https://htmlunit.sourceforge.io/)
- [Introduction to HtmlUnit](https://www.baeldung.com/htmlunit)
",concept
1000,human decision making,human decision making,topic
100000,frameworks,frameworks,topic
10000000,bj frogg behavior model,"B.J. Fogg, a renowned psychologist, and researcher at Stanford University, proposed the [Fogg Behavior Model (FBM)](https://www.behaviormodel.org/). This insightful model helps UX designers understand and influence user behavior by focusing on three core elements. These key factors are motivation, ability, and triggers.

- **Motivation**: This element emphasizes the user's desire to perform a certain action or attain specific outcomes. Motivation can be linked to three core elements specified as sensation (pleasure/pain), anticipation (hope/fear), and social cohesion (belonging/rejection).

- **Ability**: Ability refers to the user's capacity, both physical and mental, to perform desired actions. To enhance the ability of users, UX designers should follow the principle of simplicity. The easier it is to perform an action, the more likely users will engage with the product. Some factors to consider are time, financial resources, physical efforts, and cognitive load.

- **Triggers**: Triggers are the cues, notifications, or prompts that signal users to take an action. For an action to occur, triggers should be presented at the right time when the user has adequate motivation and ability.

UX designers should strive to find the balance between these three factors to facilitate the desired user behavior. By understanding your audience and their needs, implementing clear and concise triggers, and minimizing the effort required for action, the FBM can be an effective tool for designing user-centered products.

- [meaning of BJ fogg's behavior model](https://behaviormodel.org/)",concept
10000001,stephen wendell create action funnel,"Stephen Wendell's Create Action Funnel is a UX design framework focused on converting website visitors into active customers through a systematic and engaging process. The approach emphasizes on understanding user behavior, catering to their needs, and directing them towards specific actions. The Action Funnel consists of four major steps:

- **Establish the Objectives:** Before diving into the design, clearly define the goals you want to achieve through the website or app. Determine what actions you want the users to take (e.g., sign up, make a purchase, share content) and what constitutes a successful conversion.

- **Understand User Mindsets:** Identify your target audience and recognize their needs, preferences, emotions, and pain points. Accomplishing this requires user research, creating personas, storyboarding, and empathy mapping, among other methods.

- **Design the Optimal User Flow:** Craft a seamless and intuitive user journey by designing a clear path from the landing page to the desired action. Prioritize simplicity, usability, and efficiency. Make sure to include meaningful touchpoints and interactions to engage the users and make it easy for them to complete the intended action.

- **Refine and Test the Experience:** Use wireframes and prototypes to test and iteratively refine the user experience. Employ user testing, A/B testing, and analytics to gather insight on user behavior, preferences, and engagement. Continuously use feedback to make improvements, ensuring that the design effectively leads visitors down the action funnel.

By implementing Stephen Wendell's `Create Action Funnel`, you can effectively guide users through an engaging journey that motivates them to become active customers, ultimately increasing conversion rates and overall satisfaction.

- [Behavioral Science Crash Course: Steve Wendel's CREATE Action Funnel](https://www.prodify.group/blog/behavioral-science-crash-course-steve-wendels-create-action-funnel)",concept
10000002,spectrum of thinking interventions,"The _Spectrum of Thinking Interventions_ provides a structure to guide your UX design process, helping you identify the types and range of thinking interventions that the user may require. This spectrum encompasses four primary categories: guidance, explanation, exploration, and creation.

## Guidance

Guidance-based interventions are designed to help users navigate through a digital product or service with minimal effort. They may be aimed at full-fledged beginners, casual users, or experts in their respective domains. Such interventions may include signposts, tooltips, and clearly articulated labels.

_Examples:_

- Visual cues (e.g., icons, colors)
- Signposting (e.g., breadcrumbs)
- In-context information (e.g., tool tips, hints)

## Explanation

Explanation-based interventions provide users with detailed narratives, overviews, or background information that helps them make informed decisions. This may include tutorials, articles, videos, or any other mediums that help explain complex concepts or instructions.

_Examples:_

- Multimedia tutorials
- Articles or blog posts
- Infographics or diagrams

## Exploration

Exploration-based interventions encourage users to understand and interact with the product by investigating, asking questions, or searching for solutions on their own. This can be done by providing interactive elements, multiple pathways, and opportunities for discovery.

_Examples:_

- Interactive simulations or models
- Advanced search capabilities
- Multiple UI paths for task completion

## Creation

Creation-based interventions engage users by offering them the tools and resources to co-create or customize their experience. This type of intervention often involves a more extensive level of input and involvement from the user as they become active participants in the design process.

_Examples:_

- Customizable user interfaces
- Allowing users to create their content
- Enabling users to manage their preferences, settings, and configurations

With this spectrum in mind, it is essential as a UX designer to analyze which types of thinking interventions are most relevant to your target users and design the most accessible and effective solutions. Always consider how these interventions will influence users' decision-making processes and their overall satisfaction with your digital product or service.
",concept
10000003,dual process theory,"The Dual Process Theory is a psychological concept that suggests that human thinking operates on two different levels – an intuitive, fast, and automatic level (known as System 1), as well as a more deliberate, slow, and logical level (System 2). In the context of UX design, understanding these two systems can help designers create user interfaces and experiences that cater to both types of thinking.

**System 1: Intuitive and Fast**

- Relies on intuition, heuristics, and mental shortcuts
- Makes quick judgments based on emotions and past experiences
- Prone to errors and biases, but highly efficient for everyday tasks

**System 2: Deliberate and Slow**

- Involves conscious, controlled thinking and decision making
- Requires more mental effort and can handle complex problems
- Less prone to errors, but slower and more resource-intensive

In order to create user experiences that cater to both System 1 and System 2 thinking, UX designers should:

- **Make tasks simple and intuitive**: Reduce cognitive load by simplifying tasks, using familiar patterns, and providing clear instructions.
- **Provide visual cues**: Use visual cues such as icons, colors, and typography to guide users through tasks, while promoting clarity and efficiency.
- **Minimize errors**: Design systems that help prevent errors by using constraints, providing feedback, and allowing users to undo their actions.
- **Accommodate different thinking styles**: Recognize that different users may approach tasks using different cognitive styles, and design experiences that cater to a range of preferences.
- **Test and iterate**: Continuously test your designs with real users, and iterate based on their feedback to ensure that your designs are catering to both System 1 and System 2 thinking.

By understanding the Dual Process Theory and designing for both types of cognitive processing, UX designers can create user experiences that are both delightful and efficient, ultimately leading to higher user satisfaction and engagement.
",concept
100001,ux buzzwords,ux buzzwords,topic
10000100,nudge theory,"**Nudge Theory** is a behavioral science concept that focuses on understanding how humans make choices and how small, subtle changes in our environment can have a significant impact on our decision-making process. Developed by Richard Thaler and Cass Sunstein, the central idea is that by ""nudging"" people's behavior in a specific direction, we can encourage them to make better, more informed decisions without the need for heavy-handed rules or regulations.

In the context of UX design, nudge theory can be applied in various ways to influence user behavior and drive desired outcomes. This might include:

- **Choice Architecture**: Designing the layout and ordering of choices in a way that influences user decisions. For example, placing more desirable options at the top of a list or making them more visually prominent.
- **Defaults**: Setting default options that encourage users to make better decisions. For example, pre-selecting a more environmentally-friendly shipping option or having a privacy setting enabled by default.
- **Social proof**: Showing how others have made similar choices or have had positive experiences. For example, presenting product ratings and reviews, or indicating that a large number of users have taken a particular action such as signing up for a newsletter.
- **Timely interventions**: Providing guidance or prompts at the right moment in the user's journey. For example, offering help when a user encounters a complex task or reminding them of the benefits of completing a process when their motivation may be wavering.

When applying nudge theory in UX design, it's crucial to maintain a balance between encouraging positive behaviors and respecting user autonomy. Designers should aim to empower users with meaningful choices and useful information, rather than manipulating or deceiving them.

- [Nudge Theory Explained with Examples (on YouTube)](https://www.youtube.com/watch?v=u3yxxteiyya&ab_channel=epm)
- [Nudge Theory Explained in less than 10 minutes](https://youtu.be/fA5eGIMZTRQ)
- [Nudge Theory overview with examples](https://www.businessballs.com/improving-workplace-performance/nudge-theory/)",concept
10000101,persuasive technology,"Persuasive technology is an area of UX design that focuses on using technology to influence human behavior and encourage users to take specific actions. It combines the principles of psychology and design to create experiences that impact user behavior in a desired way. The goal of persuasive technology is to subtly persuade or encourage users to adopt specific habits or behaviors, often with the intent of improving their overall experience or achieving a particular outcome.

Some common examples of persuasive technology include:

- **Reinforcement**: Providing users with positive feedback or rewards for completing specific actions (e.g., badges or points in a gamified interface).

- **Social influence**: Leveraging social connections and norms to encourage actions or decisions, such as displaying the number of friends who have also enjoyed a product on a shopping site.

- **Scarcity**: Using the concept of scarcity (limited availability, time-limited offers) to instill a sense of urgency in users and encourage them to take action before they miss out.

- **Personalization**: Tailoring content or experiences to the individual user based on their preferences, behaviors, or demographic information, which makes the experience more relevant and engaging.

- **Commitment and consistency**: Encouraging users to make small commitments with the intent to build towards larger commitments over time, often through a progression of small tasks or milestones.

Incorporating persuasive technology into UX design can lead to more engaging and effective user experiences. However, it's crucial to use these techniques responsibly and ethically, ensuring that the end goal aligns with the best interests of users and does not exploit or manipulate them in any negative way.
",concept
10000102,behavior design,"Behavior Design is an approach that combines elements of psychology, neuroscience, and design principles to understand and influence human behaviors. The goal behind behavior design is to make it easier for users to accomplish their goals or desired actions within a product, service, or system.

In the context of UX Design, behavior design focuses on:

- **Motivation**: Understanding what motivates users to take action, such as personal interests, external rewards, or social influence.

- **Ability**: Ensuring that users have the necessary skills, time, and resources to complete a desired action.

- **Triggers**: Implementing well-timed prompts that encourage users to take a specific action within the interface.

To create effective behavior designs, UX designers should:

- Identify user goals and desired outcomes.
- Analyze the user's environment and potential barriers that may affect their ability to complete the desired action.
- Design solutions that address both the motivation and ability aspects of behavior change, as well as the appropriate triggers to prompt action.
- Continuously test and iterate on the design to better understand user behavior and optimize engagement.

By focusing on behavior design, UX designers can create more engaging and user-friendly experiences that ultimately drive user satisfaction and increase the chances of achieving their desired goals.
",concept
10000103,behavioral science,"Behavioral science is the interdisciplinary study of human behavior, which encompasses disciplines like psychology, sociology, and anthropology. This field- primarily focuses on understanding what impacts our decisions, actions, and emotions. In the context of UX design, applying behavioral science concepts and principles can enhance user experience by improving user engagement, usability, and overall satisfaction.

Some key principles of behavioral science that UX designers should consider include:

- **Cognitive biases:** These are mental shortcuts our brains take when processing information which can lead to irrational decisions or judgments. Designers can use these biases to guide user behavior, as seen in the 'anchoring effect,' where users rely on the first piece of information provided on a page.

- **Loss aversion:** People tend to prioritize avoiding losses over acquiring gains. Designers can use this to their advantage by highlighting potential losses that could occur without using a specific feature or product, increasing user motivation.

- **Social proof:** People look to others for cues about how to behave in uncertain situations. To leverage this effect, designers can include testimonials, ratings, and user-generated content to demonstrate that others have found value in their product or service.

- **Incentivization:** Users may be more likely to engage with a product if there are rewards or incentives for completing certain tasks. Gamifying an experience or offering exclusive benefits can encourage users to engage more deeply with the product.

- **Choice architecture:** The way choices are presented influences users' decisions. Designers can use this to guide users to desired outcomes or simplify decision-making by reducing the number of options presented.

- **Habit formation:** Creating a habit-forming experience can lead to increased user retention and engagement. Designers should consider features and elements that reinforce routine usage or solve recurring pain-points.

By integrating behavioral science principles into their design process, UX designers can better understand and anticipate users' needs, ultimately creating more enjoyable, effective, and engaging experiences.
",concept
10000104,behavioral economics,"Behavioral Economics is a subfield of economics that studies the psychological, social, and emotional factors that influence decision-making and economic behavior. It seeks to understand why people make choices that deviate from the traditional economic model, which assumes that individuals behave rationally and seek to maximize their utility.

The key concepts of Behavioral Economics include:

- Bounded Rationality: People make decisions based on limited information, cognitive constraints, and personal biases.

- Prospect Theory: Individuals perceive losses and gains asymmetrically, feeling greater pain from a loss than satisfaction from an equivalent gain.

- Anchoring: People tend to rely on a reference point (the anchor) when assessing the value of an unknown option, which can lead to arbitrary or irrational decisions.

- Mental Accounting: Individuals mentally categorize and allocate expenses differently, which can lead to biases like the sunk cost fallacy or the endowment effect.

- Nudging: Subtle changes to choice architecture can influence people's decisions without restricting their freedom of choice, through methods like default options, framing, or social proof.

Understanding and applying behavioral economic principles can help UX designers create interfaces and experiences that account for these biases and help users make better choices. By designing to minimize cognitive load, supporting decision-making, and presenting options effectively, UX designers can enhance user satisfaction and encourage desired actions.
",concept
1001,behavior change strategies,behavior change strategies,topic
100100,changing user behavior,changing user behavior,topic
10010000,help user think about their action,"To successfully change user behavior, it's crucial to encourage users to think about their actions consciously. This can be achieved by employing various strategies in your UX design. Following are some effective methods to help users think about their actions:

- **Incentives**: Offer rewards or incentives to the users for completing specific actions, which will make them more likely to think about their actions and participate actively in the process.

- **Progress indicators**: Display clear progress indicators to show the user where they are in the process and how far they've come. This will help the user evaluate the outcomes of their actions and motivate them to complete the process.

- **Feedback**: Providing users with real-time feedback on their actions is a great way to make them more conscious of their actions. You can use notifications, messages, or visual cues to inform users about the positive or negative results of their actions.

- **Guidance**: Offer guidance and support to users as they engage with your interface. Through onboarding tutorials, tooltips, or context-based instructions, help users understand the effects of their actions, why they are relevant, and how to use them efficiently.

- **Confirmation**: Ask users for confirmation before they proceed with a critical action that may have significant consequences. This pause will compel them to think about their choice and assess the potential impact of their action.

- **Make it personal**: Connect the outcomes of the user's actions to their personal goals or aspirations. Users are more likely to think about their actions if they perceive the effects in the context of their own life.

By incorporating these techniques within your UX design, you will encourage users to actively think about their actions, leading to more mindful engagement with your product, informed decision-making, and improved user satisfaction.
",concept
10010001,educate and encourage user,"One of the primary goals of UX design is to guide users through the intended flow of an application or website, and that often involves encouraging them to change their behavior or habits. Educating and encouraging users can be achieved through various methods such as guidance, feedback, and positive reinforcement.

- **Guidance:** Provide clear and concise instructions, explanations, and help text to ensure users understand how to use your application. Using onboarding tutorials, tooltips, and contextual help can greatly improve the user experience and aid in changing their behavior if required.

  - Example: Show a brief tutorial during a user's first interaction with your app, highlighting key features they may not be aware of.

- **Feedback:** Give users real-time feedback as they interact with your application. This can range from basic notifications to more detailed information tailored to their specific behaviors.

  - Example: When a user creates a password, show an interactive strength meter indicating whether their chosen password is strong or weak. This may encourage the user to choose a stronger and more secure password.

- **Positive reinforcement:** Encourage users to continue using your application by rewarding them for achieving milestones or completing tasks. This can be achieved through gamification elements like badges, points, and progress indicators.

  - Example: Award a badge to users who complete their profile or connect their social media accounts. This can encourage users to fully engage with your application and form a habit of using it regularly.

- **Social influence:** Utilize social proof to promote a change in user behavior. Showcasing the actions or opinions of other users can create a sense of community and drive users to follow suit.

  - Example: Display the number of users who have completed a task or upvoted a piece of content, which may motivate other users to follow the apparent trend.

- **Personalization:** Cater to users by presenting them with tailored content based on their preferences, usage patterns, and prior interactions. Personalization can make users feel more invested in the application, which may encourage them to consistently use and engage with it.

  - Example: Offer users personalized recommendations for articles or products based on their browsing history, which can enhance their experience and increase the likelihood of repeat visits.

By effectively educating and encouraging your users, you can create a user experience that promotes desired behaviors, fosters positive habits, and ultimately leads to a more successful and impactful application. Remember to always put your user at the center of your design process to ensure you're addressing their needs and desires in the most effective way possible.
",concept
100101,cheating,cheating,topic
10010100,defaulting,"Defaulting in UX design refers to the practice of pre-selecting options or settings for users based on what is likely to be the most common or preferred choice. The goal is to simplify the decision-making process and minimize the effort required for users to complete a task or interact with an interface.

Benefits of defaulting include:

- **User convenience**: By pre-selecting options for users, you save them time and effort in making choices. This leads to a smoother user experience, especially for users who may not have a strong preference or in-depth knowledge about the task at hand.

- **Reduced errors and confusion**: Default options can help users avoid making errors, like selecting an incompatible format or an incorrect setting. By choosing sensible defaults, you can guide users towards appropriate choices which can minimize confusion and potential problems later on.

- **Promote desired behavior**: If you want to encourage users to adopt a specific action or setting, making it the default choice can increase its adoption rate. For example, setting the default privacy settings to 'high' can promote better security practices among users.

When implementing defaulting, keep the following guidelines in mind:

- **Consider user needs and preferences**: Defaults should align with the most common or preferred user actions, based on user research and understanding of your audience.

- **Be transparent**: Make it clear to users that you have pre-selected some choices on their behalf, and offer ways to change these selections if needed.

- **Regularly review and adjust**: As your user base or product evolves, it's essential to review and adjust your default settings to ensure they remain relevant and helpful to users.

In summary, defaulting is a powerful UX design technique that, when used thoughtfully, can streamline user interactions and lead to better usability and user satisfaction.

- [The Power of Defaults](https://www.nngroup.com/articles/the-power-of-defaults/)",concept
10010101,make it incidental,"In UX design, making something incidental refers to subtly introducing a feature or element while the user is engaged in a different, primary task. The intention behind this approach is to avoid interrupting the user's flow, prevent them from feeling overwhelmed, and make the discovery of that feature feel more natural and serendipitous.

## Benefits of Making It Incidental

- **Less Overwhelming:** Users are not bombarded with too much information at once, as an incidental introduction happens when they are already engaged in another task.
- **Avoids Distractions:** It doesn't disrupt the flow of the application, allowing users to maintain focus on their original task.
- **Increases User Engagement:** As users chance upon a feature or element that they possibly need or find useful in the future, this may deepen their connection with the product.

## Techniques to Make it Incidental

- **Progressive disclosure:** Reveal information or features when relevant, in the context of the user's current task.
- **Guided interactions:** Introduce features while users are actively engaged in tasks, where the discovery is an organic part of the interaction.
- **Contextual hints:** Provide subtle cues or suggestions for users that signal the presence of additional features, which can be used when needed.

Remember, the key to making something incidental is to strategically place it within the user journey, so that it feels like a natural and seamless discovery. This approach can help create delightful and efficient user experiences.
",concept
10010102,automate act of repition,"As a UX designer, one of your main goals is to simplify and streamline user interactions. Often, users are required to perform repetitive tasks, which can lead to frustration and decrease efficiency. To enhance the user experience and ensure smooth sailing, it's essential to reduce or eliminate the need for repeated actions by automating repetitive tasks wherever possible.

## Benefits of Automation

When properly implemented, automation can:

- Save time: By cutting down on repeated actions, users can complete tasks more quickly, increasing productivity.
- Reduce errors: Automating tasks can minimize human error and ensure that actions are completed correctly every time.
- Improve user satisfaction: Reducing tedious tasks can lead to a more positive user experience and increase user retention.

## Strategies for Automation

As a UX designer, consider the following strategies to automate repetitive tasks:

- **Pre-fill forms**: Auto-fill form fields with the information that the user has entered previously or is likely to enter, such as their name, email address, or phone number. This can save users time and effort in filling out forms.
- **Remember user preferences**: Store user settings and preferences, such as preferred language, currency, or theme, so that users don't have to set them again every time they visit your site or app.
- **Smart suggestions**: Implement predictive text or auto-suggestions based on user input or past behavior. For example, when typing search queries or filling out forms, users may appreciate suggestions to help them complete their task quickly.
- **Batch actions**: Allow users to perform actions, like selecting or deleting items, in groups rather than individually. This can significantly reduce the number of clicks and time required to complete the task.
- **Keyboard shortcuts**: Provide keyboard shortcuts for common actions, enabling users to perform tasks without using a mouse or touch interactions. This can be particularly helpful for power users or users with accessibility needs.

By automating acts of repetition in your design, you can enhance the user experience, reduce frustration and improve overall satisfaction. Be mindful of your users' needs, analyze the repetitive tasks they may encounter, and implement effective automation techniques to create a seamless, efficient, and enjoyable experience.
",concept
100102,make or change habbits,make or change habbits,topic
10010200,existing behavior,existing behavior,topic
1001020000,help user avoiding the cue,"In UX design, it's important to understand the existing behaviors and habits of your users. One aspect of this process is helping users avoid the cues that trigger unwanted or unnecessary actions. Cues are the signals or prompts that lead users to perform specific behaviors. By identifying and mitigating these cues, you can effectively guide users to have a more streamlined and efficient user experience.

Here are some strategies to help users avoid the cue:

- **Identify the cue**: The first step is to recognize the cues that lead to unwanted behaviors. This can be achieved by observing users, conducting usability testing or through user feedback.

- **Remove the cue**: Once the cue is identified, remove or minimize it to prevent users from performing the undesired action. This could be achieved by redesigning the interface, altering the layout or adjusting the visual hierarchy of elements.

- **Provide alternatives**: Offer alternative actions or paths for users to take in order to achieve their goal without encountering the unwanted cue. Make sure these alternatives are easily accessible and have clear call-to-action elements.

- **Educate users**: Sometimes, simply removing a cue isn't enough. In these cases, it's important to educate your users about the new optimal way to perform a task. This can be done through in-app guides, tutorial videos or tooltips.

- **Monitor user behavior**: Continuously assess user behavior and feedback to ensure that the unwanted cues are no longer causing problems. Be prepared to make further adjustments if necessary, and consider implementing A/B testing to optimize your solution.

By helping users avoid unwanted cues, you'll create a more seamless user experience, leading to increased user satisfaction and a more effective product overall.
",concept
1001020001,replace the routine,"In the UX design process, understanding and working with existing user behavior is crucial. One key aspect of this is the concept of ""replace the routine"". This involves observing and analyzing the current habits and routines of your users, and then designing your product around it.

Replacing the routine in UX design is about finding more efficient, delightful, and engaging ways for users to complete their tasks. You should not look to force a completely new set of behaviors upon your users but instead improve their experience by offering a better alternative to their existing habits.

Consider the following points when replacing the routine:

- **Understand the user's context**: Study the users’ life cycle and create personas to better comprehend their . This helps you identify their preferences, pain points, and habits, which in turn enables the creation of a meaningful and effective design.

- **Identify the existing routine**: Analyze the current habits and routines of your users. What are the steps they are used to taking in order to complete the task? This information will be vital in designing a product that smoothly replaces their existing routine with an improved one.

- **Design an improved routine**: Create a new user flow that achieves the same goal but in a manner that is more efficient, simpler, and more intuitive for the user. This new routine should leverage the knowledge you have gained about your users and their preferences.

- **Test the new routine**: The importance of usability testing cannot be overstated. Validate your design by having real users test it out, and gather feedback to identify any areas that can be further optimized. Ensure that the new routine actually improves upon the existing one and doesn't create any new confusion.

- **Iterate and refine**: UX design is an ongoing process. Continuously refine and optimize the new routine based on the user feedback and changing user behavior trends.

By adopting the ""replace the routine"" approach in your UX design, you can provide your users with a better experience that aligns with their existing behaviors, while also introducing new efficiencies and possibilities. Doing so increases user satisfaction, promotes adoption, and ultimately leads to happier, loyal users.
",concept
1001020002,use consciousness to interfere,"In UX design, understanding the existing behavior of users is essential to create a seamless and efficient user experience. One way to obtain this understanding is through the concept of ""use consciousness to interfere."" This method involves taking a conscious and deliberate approach to observing and analyzing user behavior, in order to identify problems or areas of improvement, and then designing solutions based on these insights.

Here's a brief summary of how to use consciousness to interfere in UX design:

- **Observation**: Start by observing users in their natural environment, using your product or interacting with similar products. This will give you valuable insight into their habits, preferences, and challenges.

- **Analysis**: Next, analyze the data you've collected from your observations. Identify patterns, problems, and opportunities for improvement. This might involve breaking down tasks into smaller components, examining specific user flows, or comparing different user groups.

- **Empathy**: Develop a deep empathy for your users, understanding their needs, problems, and motivations. This will help you prioritize features and improvements, and design solutions that genuinely address their needs.

- **Experimentation**: Generate multiple ideas and possible solutions based on your analysis and empathic understanding of users. Test these ideas through rapid prototyping and user testing to get feedback and iterate on your designs.

- **Measure Impact**: Continuously measure the impact of your design changes by monitoring user behavior and key performance indicators (KPIs). This will help you understand the effectiveness of your interventions and inform future design decisions.

By using consciousness to interfere in the UX design process, you gain a deeper understanding of user behavior, enabling you to create more intuitive, engaging, and effective user experiences.
",concept
1001020003,mindfulness to avoid acting on the cue,"Mindfulness is a powerful technique that can help designers and users alike to avoid acting on the cues that trigger unwanted behaviors. Mindfulness practices can strengthen one's self-awareness and self-regulation skills, allowing individuals to recognize cues and make more conscious decisions about their actions.

## How to practice mindfulness in UX design

- **Be present:** When designing or using a product, focus on the task at hand and avoid multitasking. By fully engaging in the moment, you'll be more aware of the cues that may trigger unwanted behaviors.

- **Observe without judgment:** Take note of any compulsions or urges that arise while interacting with a product, but don't judge them as good or bad. Simply acknowledging their existence can help you understand your responses and make better choices in the future.

- **Pause and reflect:** When you notice a cue, take a moment to pause and evaluate your options. Consider whether the action you're about to take is aligned with your goals or if it's something you'd like to change.

- **Respond with intention:** Once you've reflected on your options, make a conscious decision about your next action. This may mean going through with the original behavior, choosing a more desirable alternative, or refraining from acting entirely.

## Incorporating mindfulness techniques into your designs

In addition to practicing mindfulness personally, consider how you can create designs that encourage users to be more mindful and avoid acting on unwanted cues.

- **Design for minimal distractions:** Aim to reduce visual clutter, unnecessary alerts, and anything that might pull users' attention away from the present moment.

- **Provide clear action cues:** Make sure that cues for desired actions are clear and easy to understand, allowing users to make more conscious decisions about their actions.

- **Support user reflection:** Consider incorporating features that prompt users to reflect on their actions, such as goal-setting or progress tracking tools, which can encourage more mindful decision-making.

By fostering mindfulness in both your design process and your end product, you can create UX experiences that help users better navigate their interactions with technology, avoiding unwanted behaviors and promoting healthier habits.
",concept
1001020004,crowd out old habit with new behavior,"One of the most effective ways to change users' existing behavior and improve their experience with your product is by replacing old habits with new ones. This method involves identifying the actions and habits that users currently perform and finding ways to replace them with more efficient, healthy, or enjoyable behaviors.

## Identifying Old Habits

First, start by observing and researching how users interact with your product or a similar product to understand their current behavior. This can be done through user interviews, surveys, or by analyzing collected usage data. Try to identify the habits that are no longer useful, might be frustrating or time-consuming, or can be significantly improved.

## Designing New Behaviors

After identifying the habits that need to be replaced, focus on designing new behaviors that are more efficient, enjoyable or beneficial to users. To do this, consider employing the following strategies:

- Make the new behavior simple: Ensure the new behavior is easy to understand and perform so that users can naturally adopt it.
- Use visual cues: Incorporate visual cues in your design to subtly remind users of the new behavior they should perform.
- Positive reinforcement: Encourage users to adopt the new behavior by providing feedback, rewards or incentives.
- Progressive onboarding: Gradually introduce users to the new behavior, giving them sufficient time to adjust and understand its benefits.

## Implementation and Testing

Once you have designed the new behavior, it's time to implement it in your product and test its effectiveness. This testing can be done through A/B testing, focus groups, or beta users who can provide valuable feedback.

Monitor user behavior and analyze data to determine if the new behavior is successfully replacing the old habit. If needed, iterate on your design to make necessary improvements, and continue tracking user behavior until the new habit is well-established.

In summary, crowding out old habits with new behaviors is an effective method of improving user experience in your product. By identifying existing behaviors that need change, designing new habits that are beneficial to users, and constantly testing and iterating, you can ensure a successful transition for your users and an overall improved UX.
",concept
100103,classifying behavior,classifying behavior,topic
10010300,bj frogg behavior grid,"The BJ Fogg Behavior Grid is a framework that helps UX designers, product managers, and marketers understand and identify different types of behavior change. Created by Stanford University professor B.J. Fogg, the grid consists of 15 behavior types based on the combination of three dimensions: Duration, Frequency, and Intensity.

## Duration

- **One-time behaviors**: These are behaviors that happen only once (e.g., signing up for an account).
- **Short-term behaviors**: Behaviors that take place for a limited period of time (e.g., using a trial version of a product).
- **Long-term behaviors**: Behaviors that are ongoing or happen repeatedly over a considerable time (e.g., continued use of a product).

## Frequency

- **Single-instance behaviors**: Behaviors that occur only one time per occasion (e.g., entering a password once to log in)
- **Infrequent behaviors**: Behaviors that do not happen regularly or happen sporadically (e.g., posting on social media once a week)
- **Frequent behaviors**: Behaviors that happen on a consistent and regular basis (e.g., checking email multiple times a day)

## Intensity

- **Low-stakes behaviors**: Behaviors that have little impact or are considered less important (e.g., choosing a profile picture)
- **Medium-stakes behaviors**: Behaviors that have moderate importance or impact (e.g., deciding how much personal information to share)
- **High-stakes behaviors**: Behaviors that have significant impact on the user's experience or perception of the product (e.g., making a purchase or canceling a subscription)

Using this grid, designers can classify user behaviors into different types and tailor their UX design strategies to target the specific behavior they want to encourage, change, or eliminate. Additionally, the Behavior Grid can be used to analyze and understand user motivations, triggers, and barriers, enabling designers to create more effective behavior change interventions.
",concept
100104,making users addicted,making users addicted,topic
10010400,nir eyal hook model,"The Hook Model is a concept developed by Nir Eyal, a writer and entrepreneur. It is a framework designed to help create habit-forming products and services by engaging users on a deeper level. Eyal's model is based on four key components, which are meant to encourage user interactions and repeat usage, ultimately leading to user addiction. These components are:

- **Trigger:** Triggers are cues that prompt users to take action, either through external stimuli or internal motivations. External triggers can be notifications, advertisements, or even recommendations from friends, while internal triggers stem from users' thoughts or emotions, such as boredom or a need for social connection.

- **Action:** The action is the simple task the user performs in response to the trigger. The action will depend on the context and product, but generally, it should be easy to do and have a clear connection to the trigger. An example might be swiping left or right on a dating app after receiving a notification.

- **Variable Reward:** Rewarding users for taking action is an essential part of the Hook Model. Variable rewards refer to the idea that users receive varying levels of gratification for their actions - this unpredictability keeps them engaged and curious. Social media platforms are excellent examples, as users receive likes, comments, or retweets randomly, prompting them to keep interacting to trigger more rewards.

- **Investment:** This component focuses on users investing time or effort into the product, which increases the likelihood of future engagement. An investment might include creating a profile, adding friends, or curating content. Users often feel a sense of ownership after investing in a product, making them more likely to return and continue using it.

By incorporating these components into your UX design, you can create experiences that encourage users to develop habits and become more attached to your product. Keep in mind, however, that ""addiction"" is not the primary goal - rather, it's about promoting genuine value and enhancing users' lives in a positive manner.
",concept
10010401,cue routine reward model,"The Cue-Routine-Reward Model, also known as the Habit Loop, is a neurological framework that describes how habits are formed and maintained in our brains. By understanding this model, UX designers can create more engaging and addictive user experiences, encouraging users to come back to the product repeatedly. The model consists of three key components:

- **Cue**: A stimulus, or trigger, that prompts your brain to start a habit. This can be anything from a notification on your phone to a daily routine or a specific location.

```
Example: Receiving an email notification (Cue) prompts you to check your inbox.
```

- **Routine**: The actual habit or default action you take in response to the cue. This is typically an automated behavior that occurs without much conscious thought.

```
Example: After receiving the email notification (Cue), you open your email app and read the message (Routine).
```

- **Reward**: The satisfaction or positive reinforcement your brain gets from completing the routine. This release of dopamine in the brain helps to strengthen and reinforce the habit over time.

```
Example: Reading the email (Routine) gives you a sense of accomplishment or connection with the sender, resulting in a positive emotion (Reward).
```

To apply the Cue-Routine-Reward model in UX design:

- Identify potential **cues** that can act as triggers for users to engage with your product. This can include push notifications, visual prompts, or personalized messages.

- Design seamless **routines** that are intuitive, user-friendly, and make it easy for users to complete tasks within the product. This can involve anything from clear calls-to-action, minimalist design, or familiar design patterns.

- Ensure a meaningful **reward** is provided to users so they feel a sense of accomplishment or receive some form of positive feedback. This can include personalized content, social validation, or progress tracking.

By incorporating the Cue-Routine-Reward model into your UX design, you can tap into users' natural habit-forming tendencies and ultimately create more addictive, engaging experiences.
",concept
1002,understand the product,understand the product,topic
100200,existing business model,existing business model,topic
10020000,business model canvas,"The **Business Model Canvas** is a strategic management and visual representation tool that allows you to describe, design, challenge, and pivot your existing business model. Developed by Alexander Osterwalder and Yves Pigneur, it helps organizations to understand how they create, deliver, and capture value. The canvas is divided into nine building blocks, which represent the essential elements of a business model:

- **Customer Segments (CS):** These are the target groups your business aims to serve, such as specific users, organizations, or market segments.
- **Value Propositions (VP):** The unique combinations of products and services that create value for your customer segments. It describes the reasons why customers choose your product or service over your competitors'.
- **Channels (CH):** The means by which your company communicates, delivers, and distributes its value propositions to the customers. This block includes both physical (e.g., stores) and virtual (e.g., online) channels.
- **Customer Relationships (CR):** The type of relationships your business establishes and maintains with its customer segments, such as personal assistance, self-service, or automated services.
- **Revenue Streams (RS):** The ways in which your company generates revenue from each customer segment, such as through sales, subscriptions, or advertising fees.
- **Key Resources (KR):** The most important assets needed to make your business model work, including physical, financial, intellectual, and human resources.
- **Key Activities (KA):** The primary actions your company must perform to deliver its value propositions, reach its customer segments, and maintain customer relationships. These can involve production, problem-solving, or service provision.
- **Key Partnerships (KP):** The network of suppliers, partners, and allies that help your business execute its key activities, optimize resources, and reduce risks.
- **Cost Structure (CS):** The major expenses associated with operating your business model, such as fixed and variable costs, economies of scale, and cost advantages.

When designing or analyzing an existing business model, the Business Model Canvas enables you to visually map out all these critical components and understand how they are interconnected. By understanding your current business model, you can identify weaknesses, opportunities for improvement, and potential pivots to enhance the overall user experience and the success of the business.
",concept
10020001,lean canvas,"Lean Canvas is a streamlined, single-page approach to visualizing the essential components of a business model. It was developed by Ash Maurya as an adaptation of the Business Model Canvas, with a focus on helping startups and entrepreneurs quickly develop and communicate their business ideas. Lean Canvas helps you define your Unique Value Proposition (UVP), identify your target customers, and outline your strategy. Let's go through its key components:

## Problem

Start by identifying the main problems your product aims to solve. Be specific, and try to focus on the most pressing issues faced by your target customers.

## Customer Segments

Define your target audience. Be as specific as possible, describing the types of customers who would benefit most from your product or service.

## Unique Value Proposition (UVP)

Clearly articulate the unique value your product or service offers to your target customers. Your UVP should be distinctive and competitive, differentiating you from other solutions in the market.

## Solution

List the key features, functionalities, or aspects of your product that address the identified problems, and align with your UVP.

## Channels

Outline the various methods through which you plan to reach your target customers, such as social media, search engine optimization (SEO), email campaigns, or paid advertising.

## Revenue Streams

Identify the ways you plan to generate income from your product or service. This could include sales, subscriptions, sponsorships, affiliate partnerships, or other revenue-generating channels.

## Cost Structure

List your main costs and expenses associated with building, launching, and maintaining your product, including development, marketing, operations, and support.

## Key Metrics

Determine the indicators you'll use to track your performance and gauge the success of your product. Metrics could include sales, user engagement, customer satisfaction, or any other relevant success indicators.

## Unfair Advantage

Identify and describe any unfair advantages your product or business may have over your competitors. This could include unique expertise, proprietary technology, or strategic partnerships.

By completing a Lean Canvas, you'll have a clear and concise overview of your business model, allowing you to refine your concept, focus on what matters most, and communicate your vision to team members, investors, and customers. It's a powerful tool that can be an excellent starting point for any entrepreneur or startup looking to create a successful UX design.
",concept
100201,new business model,new business model,topic
10020100,business model inspirator,"A Business Model Inspirator is a tool or method that helps you to generate new or creative ideas for the strategic, operational, and financial aspects of a business. It helps entrepreneurs, startups, and established companies to explore different ways of designing or improving their business models by drawing inspiration from various sources.

Some key aspects of Business Model Inspirators include:

- **Analyze Successful Models**: Look at successful companies from diverse industries to identify the core elements that made their business models successful. Understanding these elements can spark ideas for your own business model.

- **Cross-Pollination**: Combine elements from various industries and business models to create an innovative approach that suits your specific domain. This process can lead to the development of a unique value proposition and competitive advantage.

- **Experimentation**: Test different ideas to find the most feasible and scalable business model by iteratively prototyping, validating, and refining the model based on user/client feedback.

- **Futuristic Thinking**: Stay aware of emerging trends, technologies, and structural changes in society that might affect your industry or target market. Use foresight to adapt your business model to future opportunities and challenges.

- **Adaptability**: Be ready to pivot or evolve your business model based on changing market dynamics, user preferences, competitive forces, and other external factors. Developing a flexible business model is crucial to ensure long-term success and sustainability.

Implementing a Business Model Inspirator can contribute to the creation of a more innovative and robust UX design, ultimately leading to enhanced customer experiences, increased revenue, and long-term success for your brand.
",concept
10020101,competitor analysis,"**Competitor Analysis**

Competitor analysis is a crucial part of UX design, especially when dealing with new business models. It involves evaluating your competitors within your industry, understanding their strategies, strengths, and weaknesses, and comparing them with your own offerings.

By conducting a thorough competitor analysis, you can gain valuable insights into the market and potentially discover opportunities to differentiate yourself from the competition. Here's a brief overview of how to perform a competitor analysis:

- **Identify your competitors:** Start by listing all the companies that offer a similar product or service within your target market. This may include direct competitors (who offer similar products and services) and indirect competitors (who offer alternative solutions to the same problem).

- **Analyze their products and services:** Investigate your competitors' products and services by studying their features, benefits, and user experiences. Look for any gaps in their offerings or areas where you might have an advantage.

- **Study their websites and apps:** Evaluate your competitors' digital platforms, such as their websites, mobile apps, or software. Assess their usability, visual design, content, and overall user experience.

- **Evaluate their marketing strategies:** Analyze their communication channels and promotional activities, such as email campaigns, social media presence, and content marketing efforts. Take note of any strategies that seem particularly successful or unique.

- **Examine customer reviews and feedback:** Collect and analyze customer reviews and feedback from popular review platforms, social media, and forums. This information can help you understand common pain points and areas for improvement in your competitors’ offerings.

- **Identify opportunities and niches:** Based on your research, identify weaknesses in your competitors' strategies or markets, where potential opportunities exist for your business to be successful.

- **Benchmark your own offerings:** Compare your products and services with those of your competitors. Identify your unique selling points and assess if your offerings cater to the needs of your target audience in a way that sets you apart from the competition.

Remember that competitor analysis is not a one-time task. Instead, it should be an ongoing process that helps you stay up-to-date with the trends and changes within your industry, allowing you to make informed decisions about your UX design and overall business strategy.
",concept
10020102,five forces model,"**Five Forces Model**

The _Five Forces Model_ is a strategic framework developed by Harvard Business School professor Michael Porter. It is designed to analyze the competitive environment and help businesses understand the factors that influence competition, profitability, and overall industry attractiveness. This model is essential in UX design as it helps you identify opportunities, make informed decisions, and ultimately design products that satisfy users' needs and preferences.

The Five Forces Model consists of five components:

- **Competitive Rivalry:** This component addresses the intensity of competition among existing competitors within the industry. Factors affecting competitive rivalry include the number of competitors, diversity of competitors, the level of growth and demand, and barriers to exit. Knowing your competitors is crucial in UX design, as it guides you in creating features and improvements that build a competitive edge.

- **Threat of New Entrants:** The possibility of new entrants entering the market impacts the competitive landscape. This force is determined by factors such as capital requirements, economies of scale, switching costs, and access to distribution channels. To remain competitive as a UX designer, you must continuously gauge potential threats and evolve your strategy to create and maintain a unique value proposition.

- **Threat of Substitutes:** This force examines how easily users can switch between products or services that offer similar benefits. Factors affecting the threat of substitutions include the availability of alternatives, the price-performance ratio, and the perceived level of product differentiation. It is crucial to understand these factors and design your product in a manner that sets it apart, making it difficult for users to find substitutes.

- **Bargaining Power of Suppliers:** This component evaluates the influence suppliers have over the price and quality of goods and services in your industry. Factors impacting bargaining power include the number of suppliers, availability of substitute inputs, brand strength, and cost structure. In UX design, it's essential to consider how the supplier landscape impacts product development and identify ways to work closely with suppliers to create valuable partnerships.

- **Bargaining Power of Buyers:** Lastly, this force examines the degree of control customers have over your product's price, features, and overall quality. Factors that affect buyer power include market size, consumer information availability, product differentiation, and price sensitivity. In UX design, it's crucial to align your product with user expectations and preferences, ensuring they perceive it as valuable and are less likely to seek alternatives.

To effectively use the _Five Forces Model_ in UX design, it's essential to research and understand these forces in your industry, act on insights, and continually reassess your position as the competitive landscape evolves. By doing so, you'll create a robust and sustainable UX strategy that satisfies both user needs and market demands.
",concept
10020103,swot analysis,"A SWOT analysis is a useful tool for assessing the strategic position of a company or product. It stands for:

- **Strengths**: Identify the internal factors that give an advantage over the competition. Examples include a strong brand presence, skilled workforce, or access to unique resources.
- **Weaknesses**: These are internal factors that may hinder your business growth or success. Examples include limited resources, outdated technology, or poor management.
- **Opportunities**: These are external factors that can be seized to grow or improve the business. Examples include an expanding market, technological advancements, or potential partnerships.
- **Threats**: These are external factors that may negatively impact the business, such as competitors, government regulation, or economic instability.

Performing a SWOT analysis can help you identify and prioritize the areas that need improvement, capitalize on opportunities, and address significant threats before they become a crisis. This analysis not only provides valuable insights into your current situation but also helps you prepare for the future by assessing risks and potential areas for growth.

To ensure a comprehensive SWOT analysis, follow these steps:

- **Gather Relevant Information**: Begin by collecting data on internal strengths and weaknesses, such as financial performance and organizational structure. For the external analysis, examine market trends, competitor strategies, and other factors impacting the business environment.
- **Notable Factors**: List down factors impacting your business's performance and classify them under strengths, weaknesses, opportunities, and threats.
- **Evaluate and Prioritize**: Assess the importance of each item within the SWOT matrix, considering both its impact on the business and the resources required to address it.
- **Develop Strategies**: Use the SWOT results to create effective strategies that leverage strengths, address weaknesses, capitalize on opportunities, and mitigate threats.
- **Monitor Progress**: Continuously track the progress of your strategies, assessing their effectiveness and updating the SWOT analysis as required.

In summary, a SWOT analysis can serve as an excellent starting point in creating a robust UX design strategy. By understanding the internal and external factors influencing your business, you can make informed decisions while designing user experiences that resonate with your target audience and promote business growth.
",concept
100202,clarify product,clarify product,topic
10020200,target outcome,"The target outcome is a clear, measurable, and time-bound objective that your product aims to achieve. It defines the desired results for your users and becomes the focal point for the entire product design process. A well-defined target outcome ensures that your UX design is aligned with your users' needs and your business goals.

Here are a few key elements to consider when defining your target outcome:

- **User needs**: Focus on the main problems and needs your users have, and how your product can address them. It's crucial that your target outcome is directly linked to user satisfaction.

- **Specific and measurable**: Your target outcome should be specific enough to guide your design decisions and measurable, so you can assess whether you've achieved the desired results. For example, instead of aiming for ""improving user engagement,"" a target outcome could be ""increase the average time spent on the app by 10% within 3 months.""

- **Realistic**: Your target outcome should be achievable given your current resources, team, and product. Setting overly ambitious objectives may lead to frustration and a lack of focus in your design process.

- **Time-bound**: Establish a clear timeline for achieving your target outcome. A deadline helps keep the team focused and on track and allows you to evaluate your progress along the way.

To sum up, defining a clear target outcome is a critical step in the UX design process, as it guides decision-making and helps ensure that your product delivers true value to your users. By focusing on user needs, making your target outcome specific and measurable, setting realistic goals, and establishing a timeline, you can ensure that your product's UX design is aligned with both user needs and business objectives.
",concept
10020201,target actor,"A **Target Actor** refers to the specific user or group of users for whom a product or service is designed to cater. These users have particular needs, goals, and expectations from the product, and understanding their characteristics is essential for creating a UX design that provides them with an optimal user experience. The term is often used interchangeably with ""target audience"" or ""user persona.""

When designing for a target actor, it is crucial to consider the following factors:

- **Demographics**: Age, gender, education, occupation, and location play a significant role in determining user preferences and behavior. These factors help designers create a relatable and appropriate user experience.

- **Psychographics**: This refers to the psychological aspects of the target actor, such as their attitudes, motivations, and personality traits. Understanding these aspects helps designers align the product with users' mental models and expectations.

- **Goals and Pain Points**: Identifying the problems target actors face and their goals helps designers create solutions that address their specific needs. This information also helps in prioritizing features and functionalities within the product.

- **Technology proficiency**: Users' familiarity with devices and applications greatly impacts their expectations and behavior while using a product. Designers must take into account their target actor's proficiency with technology to ensure a smooth and frustration-free user experience.

To effectively design for target actors, user research methods such as interviews, surveys, and usability tests can be employed to gather data and insights. This information helps designers create accurate user personas and make informed design decisions tailored to the needs of the target actors. By keeping the target actors at the forefront throughout the design process, you will ultimately create a more satisfying and successful product experience.
",concept
10020202,target action,"Target action is a fundamental concept in designing user experiences that focuses on the primary goal a user wants to achieve while interacting with your product. It refers to the specific action or task users are aiming to complete, which helps them solve their problem or fulfill a need.

Understanding the target action helps you create a more streamlined and effective design by optimizing the interface, elements, and navigation around users' primary goals. Here are the key aspects of target action:

- **Identify the Target Users:** To begin with, know your audience. Consider demographics, interests, and behaviors to get a clear picture of who your target users are. This will help you align the product design with users' needs and expectations.

- **Determine User Goals:** Understand what users want to achieve with your product. Analyze their needs, preferences, pain points, and habits to identify their primary goals.

- **Establish Clear Actions:** Based on user goals, determine the most critical actions they need to perform within your product. Simplify these actions by making them clear, obvious, and easy to access.

- **Design for Success:** Prioritize target actions in your design. Focus on providing a clear path and guiding users towards attaining their goals by emphasizing essential elements, simplifying decision-making, and minimizing distractions.

- **Validate with Testing:** Verify whether your design indeed supports users in achieving their target actions by conducting usability tests. Gather user feedback, analyze the results, and iterate the design until users can effortlessly complete their primary goals.

By incorporating the target action concept in your UX design process, you'll be able to create a more intuitive and user-centric product that effectively addresses users' primary goals and maximizes user satisfaction.
",concept
100203,define target users,define target users,topic
10020300,create user personas,"User personas are fictional representations of your target users, created to help you understand their needs, behaviors, and goals. They are essential in UX design as they help your team stay focused on user needs and maintain empathy for the user throughout the design process. Here's a brief overview of how to create user personas:

- **Gather User Data**: Conduct user research through methods such as interviews, surveys, and observations to collect data about your target users. This will provide you with valuable insights and help you identify patterns in user behavior.

- **Identify Key Characteristics**: Analyze the collected data to identify common characteristics, such as demographics, goals, motivations, and pain points. These characteristics will form the foundation of your personas.

- **Create Persona Profiles**: Based on the identified characteristics, create 3-5 distinct user personas. Each persona should have a name, a picture (to help humanize them), and details such as age, occupation, background, and a brief description of their typical day.

- **Define User Goals and Scenarios**: List the primary, secondary, and tertiary goals of each persona, along with realistic scenarios in which they interact with your product or service. This will help you understand how different users approach your product and what they expect from it.

- **Share and Refine**: Share your personas with your team and gather feedback. Make any necessary changes to ensure that the personas accurately represent your target users.

Remember, user personas are not static, and should be updated as you gather more user data and insights. Keep them in mind throughout the design process, and always consider their needs and goals when making design decisions.
",concept
1003,conceptual design,conceptual design,topic
100300,create product backlog,create product backlog,topic
10030000,user stories,"User stories are an essential component of UX design, particularly during the process of creating a product backlog. They help to ensure that a product is designed with the end-user in mind, by capturing their needs, desires, and goals in a simple, concise format. In this section, we will explore what user stories are, why they are important, and how to create them.

## What are User Stories?

A user story is a brief, informal description of a specific user's need or interaction with a product. They are written from the perspective of the user and typically follow this format:

```
As a [type of user], I want to [perform an action or achieve a goal] so that [reason or benefit].
```

For example: As a busy parent, I want to be able to quickly find activities for my children in my local area, so that I can keep them entertained without spending hours searching the web.

## Why are User Stories Important?

User stories serve several crucial functions in the UX design process:

- **Empathy**: By writing user stories, designers and product managers can better empathize with the users they are designing for, ultimately leading to more user-centered design decisions.
- **Communication**: User stories are an effective way to communicate the needs, goals, and concerns of target users to stakeholders, developers, and other team members.
- **Prioritization**: By considering user stories during the creation of a product backlog, teams can more effectively prioritize features and elements of the product that align with user needs.
- **Validation**: User stories provide a useful benchmark for validating design concepts and evaluating the effectiveness of the final product in meeting the needs of its users.

## How to Create User Stories

When creating user stories, it is essential to keep the end-users in mind. Follow these steps to create effective user stories:

- **Identify User Personas**: Start by identifying the various user personas that will be interacting with your product. Consider their unique characteristics, needs, and goals.
- **Clarify Needs**: For each persona, clarify the specific needs that they have in relation to your product. Consider how your product will help them achieve their goals or fulfill their needs.
- **Write User Stories**: Using the provided format, write user stories that explicitly capture the needs of your identified personas. Be concise, clear, and specific.
- **Review and Refine**: Review the user stories with your team and stakeholders to ensure they accurately reflect user needs and goals. Refine them as necessary to maintain focus and clarity.

In conclusion, user stories are a powerful tool for creating a user-centered, empathetic design process. By effectively capturing user needs and goals, user stories help to guide product development and ensure that the final product is tailored to the end-users' desires.
",concept
100301,things to lookout for,things to lookout for,topic
10030100,keep it short simple,"The principle of ""Keep it short and simple"" (also known as the KISS principle) is an essential aspect of UX design. It is about creating user interfaces and product designs that are easy to understand, navigate and interact with, while minimizing unnecessary elements and complexities.

Here are a few tips to implement the KISS principle in your UX design process:

- **Simplicity**: Limit the number of elements on the screen, and have a clear, straightforward layout. This makes it easier for users to focus on important information and reduces cognitive load.

- **Clear Hierarchies**: Categorize and group information logically, making sure that the most essential information is presented first. This helps users quickly understand the structure of your content.

- **Minimal Clicks**: Aim to provide the shortest possible path for users to achieve their goal. Evaluate and eliminate any unnecessary steps or clicks to make the overall experience smooth and hassle-free.

- **Consistency**: Keep key design elements and interactions consistent across your interface. This enables users to recognize patterns and anticipate behavior, which in turn makes it easier for them to learn and interact with your product.

- **Content**: Write easy-to-understand and concise content that clearly communicates your message. Avoid jargon, and use clear language that is appropriate for your target audience.

- **Visual Clarity**: Use simple and clean visual elements, such as icons, typography, and color schemes. Make sure your designs are legible and visually appealing without adding unnecessary clutter.

- **Feedback**: Provide clear and timely feedback to users about the results of their actions. This helps them understand if they're on the right track or if they need to course-correct.

By following the KISS principle, you can create a more efficient and enjoyable user experience, ultimately leading to increased user satisfaction and higher conversion rates.
",concept
10030101,make it easy,"In UX design, the key to creating a great user experience is making it easy for users to navigate, understand, and interact with your product or interface. Here are some important aspects to keep in mind while designing with the ""Make It Easy"" principle:

- **Clarity**: Keep the design and layout clean, with clear fonts and a simple interface. Avoid using too many different colors or elements that can clutter the screen and make it difficult for users to focus on their tasks.

- **Consistency**: Keep a consistent design throughout the interface, by maintaining a standard pattern for elements, buttons, and symbols. This helps users understand the flow of your interface and what they need to do next.

- **Intuitive Navigation**: Keep the navigation structure clear and easy to understand. Avoid using confusing labels or having too many layers of navigation that can make it difficult for users to find what they're looking for.

- **Efficient Interaction**: Minimize the steps required to complete a task. Ensure that the user doesn't have to go through unnecessary steps or provide unnecessary input to achieve their goal.

- **Error Prevention**: Help users minimize the chances of making errors by designing for error prevention. This can include things like disabling actions that aren't allowed, providing clear and concise instructions, or implementing user-friendly input fields.

- **Flexibility**: Provide multiple ways for your users to complete tasks, so they can choose the approach that works best for their individual preferences and needs.

- **Feedback**: Give users continuous feedback on the outcome of their actions. This can be through visual cues, sounds, and even haptic feedback. Providing feedback helps users understand what's happening and builds their confidence in the interface.

Remember, the easier it is for users to interact with your product, the more likely they are to enjoy using it, thus leading to a better overall user experience.
",concept
10030102,make progress visible,"Making progress visible is an essential part of UX design, as it helps users understand where they are in a process, and it gives them a sense of control and achievement. In this section, we'll discuss the importance of making progress visible and provide some practical tips for incorporating this approach into your designs.

## Importance of Making Progress Visible

Visible progress can significantly impact user experience. It helps in:

- **Reducing user anxiety**: When users can see that they're making progress, they experience less anxiety and frustration.
- **Building engagement**: Progress indicators help users feel invested and engaged with a task or product.
- **Avoiding drop-offs**: When users can see the end of a process, they're more likely to complete it.

## Tips for Making Progress Visible

Incorporate these best practices into your UX design to make progress visible:

- **Use progress bars:** A simple and effective way to show progress is through progress bars. You can use them for linear processes, like form completion or steps in a tutorial.
- **Break tasks into manageable steps:** Chunking tasks into smaller steps makes them more manageable for users, and it allows users to see progress as they complete each step.
- **Give feedback on progress:** Provide clear feedback on the user's progress, such as a tick or checkmark, accompanying text, or a change of color.
- **Estimate time or effort:** Give users a sense of how long a task will take, or how much effort is involved, by showing time estimates or the number of steps involved.
- **Enable users to review progress:** Allow users to review their progress and easily navigate between completed steps if they need to make changes.

By making progress visible, you can provide users with a sense of accomplishment, reduce anxiety, and encourage engagement with your product. Keep this approach in mind during your UX design process to create more satisfying and user-friendly experiences.
",concept
10030103,make progress meaningful reward user,"When designing a UX, one crucial aspect to consider is creating a sense of progress and achievement for users. By making progress meaningful and rewarding users, you can enhance their overall experience, satisfaction, and engagement with your product or service. Here's a brief summary of some key points to consider when implementing this principle in your design.

## Set Clear Goals and Milestones

Help users understand the objectives they need to achieve within your product or service. The goals should be specific, measurable, attainable, relevant, and time-bound (SMART). By providing well-defined milestones, users can easily visualize their progress and feel motivated to continue using your product.

## Provide Feedback

Continuously inform users about their progress and actions by providing feedback through visual cues, messages, notifications, or sounds. This will reassure them that they are on the right track and help maintain their engagement.

## Celebrate Achievements

Recognize and celebrate user accomplishments, whether it's completing a task, reaching a new level, or mastering a new skill. This can be done through messages, badges, trophies, or other visual elements that give users a sense of achievement and recognition.

## Personalize Rewards

Tailor rewards to cater to individual user preferences, taking into account their needs, desires, and achievements. This could mean offering different types of rewards or varying the difficulty levels to unlock them based on the user's past experiences with your product.

## Encourage Social Sharing

Leverage the power of social networks to allow users to share their achievements and progress with friends, family, or other users. Providing incentives for sharing can also help enhance the feeling of accomplishment and increase the likelihood of continued engagement.

## Gamification

Incorporate gamification elements into your UX design to make progress and rewards more engaging and entertaining. Gamification techniques can include points, levels, leaderboards, and other game-like components that encourage users to invest time and effort in your product.

By making progress meaningful and rewarding for users, you can significantly enhance the overall user experience, foster user loyalty, and improve the chances of your product's long-term success. Always consider the unique needs and preferences of your target audience to customize your approach for the best results.
",concept
10030104,make successful completion clearly visible,"When designing user experiences, it's essential to ensure that users can easily recognize when they've completed a task or achieved their goal. This is important because it provides users with a sense of accomplishment and satisfaction; it also helps build trust in the digital product. Here are some tips to make successful completion clearly visible:

- **Visual feedback:** Provide clear visual cues (e.g., color changes, checkmarks, or other symbols) to indicate when a user has successfully completed a task. This reinforces the user's understanding that their actions have had the desired outcome.

- **Success messages:** Display context-appropriate messages or confirmation screens to acknowledge that tasks have been successfully completed. For example, after submitting a form, show a success message containing a confirmation number and relevant next steps.

- **Progress indicators:** Use progress bars or other indicators to help users track their progress towards task completion. This helps users understand how much work remains and can motivate them to continue working towards their goal.

- **Transitions:** Utilize smooth animations and transitions when moving between different states or screens. This helps users recognize that they've successfully completed a task and are moving on to the next step.

- **Accessible design:** Ensure that your success indicators and feedback are accessible to all users, including those with visual impairments. Use suitable text labels, alt text, and other accessibility features to guarantee that everyone can perceive and understand when they've completed a task.

By incorporating these elements into your UX design, you will create a user experience that not only guides users through tasks efficiently but also provides them with the satisfaction of clearly visible successful completions. This, in turn, can lead to more enjoyable interactions with your digital product and improved user engagement.
",concept
100302,deliverables,deliverables,topic
10030200,custom experience map,"A **Custom Experience Map** is a powerful visual representation that helps designers and stakeholders understand the entire user journey. It captures the various touchpoints, interactions, and experiences a user goes through while using a product or service. This map can be created to suit the specific needs of your project or organization, giving you a comprehensive view of the user experience.

## Key Components of a Custom Experience Map

Below are some crucial components of an effective custom experience map:

- **User Persona**: This includes the demographics, goals, and pain-points of the target user, which helps in understanding the user's perspective throughout the journey.

- **Stages**: The different logical steps or phases the user goes through during their interaction with the product or service.

- **Touchpoints**: These are the specific interactions the user has with the product or service, such as clicking a button, opening an app, or talking to a customer representative.

- **Channels**: These refer to the mediums or platforms through which the interactions take place, such as website, mobile app, email, or in-person.

- **Emotions**: The emotional state of the user during each touchpoint, which can highlight areas of frustration or delight.

- **Opportunities**: Areas where improvements can be made, new features can be introduced, or further research can be conducted to enhance the overall user experience.

## Benefits of a Custom Experience Map

Creating a custom experience map offers several advantages for both designers and stakeholders:

- It helps identify the pain-points, gaps, or opportunities to improve user experience.
- It enables a better understanding of how users navigate and interact with the product or service.
- It facilitates the prioritization of UX design tasks and helps focus on high-impact areas.
- It promotes collaboration and communication across different team members within the organization.

## Tips for Effective Experience Mapping

To make the most of a custom experience map, consider the following tips:

- Involve different stakeholders and team members in the process to ensure diverse perspectives are taken into account.
- Use the map as a communication tool for sharing insights and findings with the team.
- Update the map as the product evolves or new data becomes available to keep it relevant and useful.
- Regularly review the map during design iterations to ensure user goals and pain-points are consistently addressed.

By leveraging the power of a custom experience map, UX designers can visualize and uncover valuable insights, which lead to more informed decisions and ultimately a better user experience.
",concept
10030201,simple flowchart,"A simple flowchart is a useful deliverable in the UX design process that helps visually represent the flow of a user's journey through a website or an app. It's a diagrammatic representation of the user interactions and decision points, showcasing the steps they will take to achieve a specific goal.

This straightforward visual aid can assist the entire project team, including designers, developers, and stakeholders, to understand the overall structure and organization of the proposed design solution.

## Key Elements of a Simple Flowchart

- **Shapes**: Standard shapes like rectangles, diamonds, and ovals are utilized to indicate different actions or decisions in a flowchart. Each shape has a specific meaning, which aids in understanding the flow of the user interaction.
- **Lines and Arrows**: These are used to connect the various shapes and define the sequence of steps.
- **Labels**: Brief descriptions or texts inside the shapes describe the action, decision, or process represented by that particular shape.

## Benefits of Using Simple Flowcharts

- **Shared Understanding**: Flowcharts are easy to read and understand, fostering a shared understanding between team members and stakeholders.

- **Effective Communication**: They provide a clear way to communicate the steps involved in a process, making it easier for teams to discuss and collaborate.

- **Identifying Potential Issues**: Flowcharts help identify potential bottlenecks or points of friction in a user's journey, enabling the team to address issues early in the design process.

- **Documentation**: As a deliverable, flowcharts can serve as documentation, capturing the broader structure and steps in a process for future reference.

To create a simple flowchart, start by listing all the essential steps and decisions in the user journey you want to document. Organize them sequentially and then use standard shapes and arrows to create the flowchart. Make sure to include annotations or labels to clarify the meaning of each shape.

In summary, a simple flowchart is a valuable UX deliverable that helps visualize user interactions and design solutions in an easy-to-understand format, facilitating better communication and collaboration within project teams.
",concept
10030202,event driven process chain model,"The Event Driven Process Chain (EPC) model is a flowchart-based diagramming method that supports the documentation and analysis of business processes. EPCs are frequently used in the field of UX design to aid in identifying areas for optimization and improvement.

In an EPC model, events, functions, and control flow are the primary components.

- **Event**: Represents a specific point in time, such as the start, end or a change in a process.
- **Function**: Represents an action or task that needs to be performed. Functions typically connect to events and other functions within a process chain.
- **Control Flow**: Illustrates the flow of activities in the process chain by connecting events and functions with arrows, showing the sequence of tasks.

Creating an EPC model involves the following steps:

- Identify the main activities and events in the process to be modeled.
- Define the flow of activities by connecting events and functions using arrows.
- Identify decision points or branches in the process, where alternative paths may be followed.
- Analyze the model to identify areas for improvement, such as bottlenecks, inefficiencies or redundancies.

EPC models are beneficial for UX designers as they provide a clear, visual representation of the business processes. This helps in understanding how a user's interactions with a product or service are tied to the overall process flow. Consequently, insights gained from EPC models can inform the UX design process in terms of the required steps and interactions, potential pain points, and opportunities for innovation.
",concept
10030203,business process model and notation,"Business Process Model and Notation (BPMN) is a graphical representation of business processes, providing a standardized and easy-to-understand method for visualizing different aspects of a business. By using BPMN, UX designers can analyze and optimize business processes and workflows, which ultimately improves the overall user experience.

## Key Components of BPMN

- Flow Objects: Main building blocks of a BPMN diagram, which include events, activities, and gateways.
- Connecting Objects: Linking elements between flow objects, such as sequence flows, message flows, and associations.
- Swimlanes: Visual elements that help organize activities based on roles or responsibilities.
- Artifacts: Supplementary elements providing additional information, such as data objects, groupings, and annotations.

## Benefits of BPMN for UX Design

- **Visualization**: BPMN offers a clear visual layout of business processes, allowing UX designers to understand the overall structure easily.
- **Standardization**: As an internationally recognized standard, BPMN ensures consistent interpretation and communication among team members.
- **Flexibility**: BPMN can accommodate various levels of complexity, enabling designers to model simple or complex processes as needed.
- **Collaboration**: By bridging the gap between technical and non-technical stakeholders, BPMN empowers cross-functional collaboration throughout the design process.

To incorporate BPMN in your UX design process, you'll need to familiarize yourself with its various elements and syntax. Consider leveraging BPMN tools and resources to create diagrams that accurately represent your target user's needs and the corresponding business processes. By doing so, you'll be able to craft a more precise and effective user experience.
",concept
1004,prototyping,prototyping,topic
100400,good layout rules,"In the world of UX design, a good layout is crucial to ensure your prototype is intuitive and user-friendly. By following these good layout rules, you can ensure your designs are efficient, attractive, and easy to navigate for users.

## Consistency

Being consistent with your design is vital in creating an easy-to-navigate interface. Utilize the same color schemes, typography, and other design elements consistently throughout your prototype to make it visually cohesive and user-friendly.

## Alignment and Spacing

Ensure all the elements on your prototype are aligned and spaced properly. This helps create a well-structured and clean look, while also making it easy for users to navigate and understand your design.

## Visual Hierarchy

Establish clear visual hierarchy by using size, color, contrast, and white space effectively. This helps users identify important elements on the screen quickly and understand the flow of your design easily.

## Grouping of Elements

Group related elements together, such as navigation menus or form input fields. This helps users recognize the purpose and function of each section more quickly and intuitively.

## Balance and Proportion

Create a balanced and proportional look by distributing elements on the screen evenly. This can be achieved through the use of grids or other layout techniques that help maintain a sense of harmony and order in your design.

## Accessibility

Ensure your design is accessible to all users by considering factors such as text size, contrast, and color combinations. Aim to create an inclusive prototype that caters to people of different abilities and preferences.

## Responsiveness and Flexibility

Make sure your prototype can adapt to different screen sizes and devices, ensuring a seamless user experience across various platforms. This is particularly important when designing for web and mobile applications.

## Iterating and Testing

As you develop your design, continually test and iterate on your layout based on user feedback and data. This process will help refine your design and ensure it meets the needs and expectations of your users.

By incorporating these good layout rules into your prototyping process, you'll be well on your way to creating a user-friendly and effective design that meets the goals and objectives of your project.
",concept
100401,ux patterns,ux patterns,topic
10040100,call to action,"A **Call to Action (CTA)** is a UX pattern that encourages users to take a specific action on a website, app, or other digital product. It is an essential component of effective UX design, as it helps guide users through the experience and accomplish their goals. CTAs can come in various forms, including buttons, links, images, or text.

## Importance of Call to Action

- **Increased conversion rates**: A well-placed and well-designed CTA can significantly increase conversion rates, leading to more sign-ups, purchases, or other desired user actions.
- **Guides user behavior**: CTAs help to guide users through the flow of your product, and can assist in providing a clear and concise user journey.
- **Highlighting key features**: A strong CTA can bring attention to key features or important information that you want your users to notice and engage with.

## Designing an Effective Call to Action

To create an effective CTA, consider the following factors:

- **Placement**: The placement of a CTA is crucial to its effectiveness. It should be easily noticeable and accessible without overwhelming or distracting users. In most cases, placing CTAs above the fold (the portion of the website visible without scrolling) has proven to be effective.
- **Size and shape**: The size and shape of a CTA should be consistent with the overall design of your product. Make sure it is large enough to be easily noticed, but not too large that it overwhelms other content.
- **Color and contrast**: Choose a color for your CTA that stands out from the rest of your design. High contrast between the CTA button and its surrounding elements can make it more noticeable and draw attention.
- **Clear and concise copy**: The text on your CTA should be clear, concise, and tell users exactly what to expect when they click on it. Use action-oriented language like ""Sign Up,"" ""Learn More,"" or ""Start Now"" to encourage users to take action.

## CTA Best Practices

Here are some best practices to follow when designing and implementing CTAs:

- Limit the number of CTAs on a single page or screen to maintain focus and avoid confusion.
- Ensure the CTA is relevant to the content and user experience.
- Test different CTA variations, placements, and designs to determine which is most effective for your target audience.

By incorporating CTAs into your UX design, you can create a more engaging, user-friendly experience that helps guide users through your product and ultimately drives them to take the desired actions.
",concept
10040101,status reports,"Status reports are an essential component of UX patterns that aid in keeping users informed about the current state of the system, task progress, and any relevant updates. By providing real-time feedback, users can understand the outcome of their actions which ultimately helps in building trust, reducing confusion, and enhancing overall user satisfaction.

Here are some key aspects to consider when designing status reports for your application:

## Timing

Choose the appropriate time to display status reports so that it doesn't interrupt the user's ongoing activities. For instance, progress bars should be visible only when a task requires some time to complete, while error messages should appear right after an incorrect input.

## Placement

Position the status reports in a way that they naturally draw users' attention without distracting them from their primary tasks. Some commonly used placements include the top or center of the page for critical alerts, and near the input fields for validation feedback.

## Content

Keep the content of your status report simple, concise, and informative. It should be easy for the user to understand what's happening and, if necessary, provide clear instructions on how to proceed. Avoid jargon and use plain language that users can easily comprehend.

## Visual Hierarchy

Design your status reports using visual hierarchy principles to prioritize the most important information. Make use of contrast, typography, and other visual elements to help users quickly understand the message and its level of importance.

## Accessibility

Ensure your status reports are accessible by providing descriptive text, like alternative text for images, or using ARIA roles for screen readers. This ensures that users with disabilities can also benefit from these useful reports.

## Dismissal

Offer users the option to dismiss non-critical status reports as per their preference. This can be done by providing a close button for banners, tooltips, and pop-ups.

In conclusion, status reports are a valuable aspect of UX design that effectively communicate essential information to users, thus improving their overall experience with your product. Integrating these principles into your UX pattern can considerably enhance your design's effectiveness and user satisfaction.
",concept
10040102,how to tips,"This design pattern design to provide users with guidance or tips on how to use a product or service. This pattern can be implemented in various ways, such as through tooltips, pop-ups, modals, or other interactive elements that appear on the screen.

The purpose of the ""How-to-tips"" UX pattern is to help users learn how to use a product or service quickly and easily, without having to refer to external documentation or search for answers online. By providing guidance and tips directly within the user interface, this pattern can improve the user experience and reduce frustration, especially for new or inexperienced users.

Examples of this pattern include:

- Tooltips that appear when users hover over or click on certain elements, providing information about the function or purpose of that element.
- Pop-ups or modals that appear when users first interact with a product or service, providing an overview or tutorial on how to get started.
- Interactive tutorials or walkthroughs that guide users through key features or functions of a product or service, step-by-step.

Overall, the ""How-to-tips"" UX pattern is a valuable tool for improving the usability and accessibility of a product or service, helping users to learn how to use it effectively and efficiently.
",concept
10040103,reminders planning prompts,"In the realm of UX design, **reminders and planning prompts** are essential components that ensure users remember to complete specific actions or tasks at the right time. By including these prompts within the user flow, you can aid users in staying on track and reduce the likelihood of missed deadlines or incomplete tasks.

## Why Use Reminders and Planning Prompts?

Users often have multiple tasks to juggle simultaneously, making it easy for things to slip through the cracks. By incorporating reminders and planning prompts into your application, you can help combat:

- **Forgetfulness**: People sometimes need a gentle nudge to remember their next step or obligation.
- **Procrastination**: Timely reminders can encourage users to prioritize their tasks and meet deadlines.
- **Lack of motivation**: Well-crafted planning prompts can inspire users to take action and stay engaged with your product.

## Types of Reminders and Planning Prompts

To provide effective, well-timed reminders and prompts, consider employing the following methods:

- **Push notifications**: Utilize mobile or desktop notifications to remind users about upcoming tasks, appointments, or deadlines.
- **In-product prompts**: Place on-screen prompts to encourage users to take specific actions while using the application.
- **Email reminders**: Send scheduled emails to users as reminders for tasks or appointment confirmation.
- **Badges**: Use badges or other visual cues to indicate pending tasks, such as unread messages or incomplete items in a to-do list.
- **Calendar integration**: Integrate your application with calendar tools, so users can easily add and access reminders and events.

## Strategies for Effective Reminders and Planning Prompts

To ensure that your reminders and planning prompts encourage users to take action, follow these guidelines:

- **Customization**: Allow users to customize their reminders, such as setting preferred notification times or choosing the method of delivery.
- **Context**: Provide context around the reminder so users have enough information upfront to determine the task's priority.
- **Actionable**: Make your reminders engaging and actionable, so users can directly take action from the reminder or prompt.
- **Timeliness**: Consider the user's time zone and availability when scheduling reminders and plan accordingly.

Incorporating reminders and planning prompts into your UX design strategy can improve user engagement, satisfaction, and product success. By considering the different types and strategies outlined above, you can create a user experience that keeps your audience actively engaged with your application.
",concept
10040104,decision making support,"Decision making support plays a crucial role in UX design by providing users with the necessary information, options, and feedback to make informed choices when interacting with a product or interface. This UX pattern focuses on helping users make decisions through clear presentation of information, minimizing cognitive load, and offering guidance throughout the various interactions.

## Key Elements of Decision Making Support

- **Clear presentation of information**: Present complex information in a simple, easily digestible format. Break down large amounts of data into smaller chunks, use visuals (e.g., icons, images, graphs) to convey information, and provide clear labeling and headings.

- **Minimize cognitive load**: Reducing the mental effort required by users when making decisions can lead to better decision-making and higher satisfaction. Limit the number of options presented, group similar items together, and use progressive disclosure to provide additional details when necessary.

- **Feedback and guidance**: Providing feedback and guidance can help users understand the implications of their decisions and options. Use micro-interactions (e.g., hover effects, tooltips) to clarify the meaning of interactive elements and provide suggestions or recommendations.

- **Defaults and pre-selected options**: Set sensible defaults and pre-selected options to help users make decisions quickly, while also allowing flexibility for customization. This can prevent decision paralysis and reduce frustration for users with limited knowledge or expertise.

- **Comparison tools**: Offer easy-to-use comparison tools for users to weigh different options, especially in cases where the decision involves multiple factors. This can be provided through side-by-side comparison tables, or visual aids that highlight differences between options.

## Tips for Implementing Decision Making Support

- Empathize with your users and create user personas to understand their needs, goals, and preferences when making decisions.
- Conduct usability tests to evaluate the effectiveness of your decision-making support features and iterate based on user feedback.
- Take into account different use cases and decision-making styles across your target audience, and design support features that cater to these variations.
- Be cautious not to overwhelm users with too much decision support, which can lead to increased cognitive load and poor user experience.

By incorporating effective decision-making support into your UX design, you can enhance user experience, increase satisfaction, and ultimately, help your users make better choices while interacting with your product.
",concept
10040105,behavior change games,"Behavior change games are a powerful UX design pattern that help users adopt new habits or make positive lifestyle changes. These games are typically designed to be engaging, enjoyable, and motivating, utilizing various game elements and mechanics to encourage users to take desired actions.

## Key elements of behavior change games

- **Set clear objectives**: Define specific goals users should achieve, such as losing weight or learning a new skill. Well-defined objectives provide a strong focus for the game and encourage user engagement.

- **Feedback and progress**: Provide real-time feedback and track user progress to create a sense of accomplishment. This can include visual cues, points, badges, or leveling up systems.

- **Social interaction**: Utilize social features, such as sharing achievements, comparing results with friends, or team challenges. This enables users to work together, fosters a sense of community, and enhances motivation through friendly competition.

- **Reward system**: Implement a reward system that grants virtual or real rewards for completing tasks or reaching milestones. These rewards can be intrinsic (e.g., personal satisfaction) or extrinsic (e.g., discounts or prizes).

- **Gamification**: Incorporate game-like elements, such as storytelling, quests, or time-limited challenges. These elements add an entertaining aspect, improve user experience, and make the behavior change process more enjoyable.

## Benefits of behavior change games

- **Increased motivation**: By turning the behavior change process into a game, users are often more motivated to participate and stay engaged.

- **Higher user retention**: Engaging games can increase user retention, resulting in higher long-term success rates for behavior change.

- **Measurable results**: These games allow users to easily track progress and outcomes, helping them understand the impact of their actions and reinforcing positive behavior.

- **Personalization**: Games can be tailored to individual users' preferences and play styles, making the experience more enjoyable and relevant.

- **Support network**: The inclusion of social features creates a community of support, forging connections between individuals with similar goals and fostering accountability.

When designing behavior change games, it's essential to keep user experience in mind, and create an enjoyable and motivating experience. Balancing fun and educational elements can result in a powerful tool for guiding users towards positive change in their lives.
",concept
10040106,gamification,"Gamification is a UX design pattern that involves incorporating elements of game design into non-game applications or websites to enhance user engagement and create enjoyable experiences. By using game mechanics like points, achievements, competition, and progress-tracking, designers can make mundane tasks more appealing and motivate users to interact with the content or perform certain actions.

## Benefits of Gamification

- **Increased engagement**: Gamification helps in capturing the user's attention and encourages them to spend more time interacting with the product.
- **Motivation**: Game mechanics like points, badges, and leaderboards act as incentives, motivating users to perform a desired behavior or accomplish specific goals.
- **Improved learning**: Gamification can make learning new concepts or skills more enjoyable, allowing users to better retain information.
- **User retention**: By creating a sense of achievement and fostering friendly competition, gamification can inspire users to keep returning to the product.

## Key Elements of Gamification

- **Points**: Points are a quantifiable way to track the user's accomplishments and give immediate feedback. They can be used as a currency to unlock specific content or features.
- **Badges**: Badges are visual representations of achievements that users can earn by completing certain activities or reaching milestones, which creates a sense of accomplishment.
- **Leaderboards**: Leaderboards display users' progress in comparison to others, encouraging competition and fostering motivation to improve one's standing within the community.
- **Progress tracking**: Providing a progress bar or checklist helps users visualize their journey and gives them a clear idea of what they have achieved and what's remaining.

## Implementing Gamification

When implementing gamification in your UX design, consider the following factors:

- **Target audience**: Define your target audience and analyze their demographics, preferences, and pain points to provide a suitable gamification experience.
- **Purpose**: Identify the desired outcome the gamification process aims to achieve, such as increased engagement, user acquisition, or learning.
- **Relevance**: Ensure that the gamification elements align with your product's purpose and add value to the user experience, rather than feeling forced or gimmicky.
- **Balancing challenge and reward**: Create a balance between the level of challenge and the offered rewards to maintain user interest.
- **Feedback**: Provide users with timely feedback on their progress and performance to keep them engaged and informed.

By incorporating gamification into your UX design, you can create more engaging and captivating experiences that keep users coming back for more. Just remember to ensure that the game elements are relevant to the product's purpose and contribute positively to the overall user experience.
",concept
10040107,planners,"Planners are an essential aspect of UX design, helping users accomplish complex tasks by breaking them down into manageable steps. Planners are particularly useful in situations where users are expected to make decisions or deal with a range of options. They help to create an engaging and interactive experience, guiding users to achieve their goals efficiently.

## Characteristics of Planners

There are a few key characteristics that define planners in UX design:

- **Clear Guidance:** Planners provide clear instructions and guidance on the various steps involved, making it easier for users to navigate through the process.

- **Progress Indicators:** Planners typically use some form of progress indicator, such as a progress bar or a checklist, to show users how far along in the process they are.

- **Error Prevention & Handling:** Planners strive to prevent user errors by providing input validation, feedback, and clear guidelines on what needs to be done. They also handle errors effectively, allowing users to recover and move forward, without getting frustrated.

- **Flexibility:** Planners offer users the flexibility to complete tasks at their own pace, and provide options for changing or updating information at any stage in the process.

- **Consistency:** Planners maintain consistency in the design and presentation of information, ensuring that the user experience is familiar and predictable at all times.

## Types of Planners

There are various types of planners used in UX design, depending on the specific needs of the project:

- **Decision Trees:** These provide users with a sequence of binary options, guiding them through a series of choices until they reach a specific end result.

- **Wizards:** These are step-by-step guides that walk users through a process, presenting one question or task at a time, and only moving on once the user has completed the previous step.

- **Task Checklists:** These provide users with a list of sub-tasks or actions they must complete in order to achieve a larger goal. Users can check-off tasks as they complete them, and see their progress towards the goal.

- **Interactive Conversations:** These mimic a conversational interaction between the user and the system, using natural language processing to guide users through tasks or decision-making processes.

## Implementing Planners

When incorporating planners into your UX design, consider the following best practices:

- Identify the core tasks or decisions your user needs to make and create a logical flow for each process.

- Use clear and concise language to guide users through steps, ensuring instructions are easy to follow and understand.

- Implement appropriate progress indicators or feedback mechanisms to show users how close they are to completing the task.

- Focus on error prevention and offer easy ways for users to recover from mistakes.

- Ensure that your planner design is consistent with the overall user interface and user experience goals, while also being flexible to accommodate user preferences and habits.

By following these best practices and tailoring planners to meet the needs of your users, you can create a more engaging and user-friendly experience that allows users to complete complex tasks with ease.
",concept
10040108,reminders,"**_Reminders_** play an essential role in the user's experience, especially when it comes to retaining user attention and engagement. They can be helpful in making sure that the user stays focused on their tasks, remembers essential information or deadlines, and continually interacts with your product or design.

## Importance of Reminders

- **User Engagement**: Reminders can act as an opportunity to drive users back to your app or website, ensuring they don't forget to use your product or service.
- **Timely Notifications**: When a reminder is well-timed and relevant, it can be a useful tool to prevent users from missing out on crucial information or essential tasks.
- **Positive User Experience**: Effective use of reminders can create a positive experience for users, making them feel supported and confident in using your product or service.

## Types of Reminders

There are several types of reminders that can be used in UX design. Here are some common ones:

- **Time-based Reminders**: Set at specific intervals or times, these reminders are designed to ensure users don't forget important tasks or events related to your product or service.
- **Location-based Reminders**: Triggered by entering or leaving certain locations, these reminders can be useful for tasks related to a specific place or area.
- **Action-based Reminders**: Initiated by user actions, these reminders can provide useful prompts or follow-up actions based on user behaviors within your app or website.

## Best Practices

Here are a few best practices to consider when incorporating reminders into your UX design:

- **Be Timely and Relevant**: Ensure that reminders are helpful to the user by making them timely and relevant to the user's needs.
- **Keep it Simple**: Use clear, concise language that is easy for users to understand and act upon.
- **Avoid Overloading Users**: Too many reminders can become overwhelming and irritating, negatively impacting the user experience. Strike a balance between providing important reminders and respecting the user's time and attention.
- **Allow Personalization**: Where possible, provide the user with options to customize the timing and frequency of reminders, enabling them to personalize their experience to suit their preferences.
- **Consider Design Elements**: Reminders can be delivered through several methods, including in-app notifications, push notifications, and emails. Consider the most appropriate method for your user base and ensure the design of the reminder is visually appealing and easy to engage with.

In conclusion, thoughtfully implemented reminders can significantly enhance the user experience and improve user engagement, retention, and satisfaction. By following best practices and considering the user's needs, you can create effective reminders that users appreciate and value.
",concept
10040109,social sharing,"In the realm of UX design, **Social Sharing** is a crucial pattern that allows users to share content from a website or app to various social media platforms. It helps in creating interaction between users and the content, engaging the audience and generating more traffic to the source.

## Benefits of Social Sharing

- Increase in brand visibility and awareness
- Drive more traffic to the website or app
- Higher chances of content going viral
- Encourages engagement and conversation around your content
- Improves organic search rankings

## Designing Effective Social Sharing Buttons

- **Positioning**: Place the social sharing buttons at an easily accessible location on the page, e.g., top, bottom, or alongside the content.
- **Size and Style**: Opt for clear and recognizable social icons that are easy to tap or click. Ensure their size is adequate to avoid any UX issues.
- **Customization**: Tailor the design of social sharing buttons to complement your website or app's visual appeal.
- **Selective platforms**: Focus on the most popular or relevant social media platforms for your target audience; not every platform may be necessary.
- **Share counts**: Show the number of shares for individual content pieces when appropriate, as it adds social proof and encourages more shares.
- **Mobile optimization**: Ensure your social sharing buttons are functional and visually appealing on mobile devices, as a significant portion of sharing occurs via mobile.

Incorporating social sharing into your UX design not only provides opportunities for increased engagement but also serves as an effective marketing tool. Remember, a well-designed and strategically placed social sharing component can lead to a higher reach and greater success for your brand.
",concept
10040110,goal trackers,"Goal trackers are essential UX patterns that enable users to monitor their progress towards accomplishing a specific task or objective. Essentially, they help users stay motivated, organized and informed about their journey within an app, website, or system. In this guide, we'll explore the significance of goal trackers, and how to effectively design and incorporate them in your projects.

## Why use goal trackers?

- **Motivation**: By visibly displaying the progress made, goal trackers constantly motivate users to actively participate in the experience and work towards completing their goals.
- **Expectation Management**: They provide clear guidance on the steps required, inform users about the remaining tasks or subgoals, and aid users in estimating the time and effort needed.
- **Sense of Achievement**: Goal trackers can enhance user satisfaction by celebrating milestones and achieved objectives, reaffirming that the effort invested has produced tangible results.
- **Personalization**: Users can customize their experience by setting up personalized goals and tracking their progress, fostering a greater sense of ownership and connection.

## Essential components of goal trackers

A well-designed goal tracker will typically include the following elements:

- **Visual Progress Bar**: This represents the user's progress towards completing the overall goal. It is usually color-coded, with a percentage or numerical value indicating the extent of the progress made.
- **Step Indicators**: These are specific milestones or subgoals that users need to complete in order to achieve the main goal. They help break down the overall process into manageable, smaller tasks.
- **Animations & Feedback**: Using animations, notifications, and other visual cues can make users feel rewarded for their progress, reinforcing positive behavior.
- **Summaries & Overviews**: A concise summary or overview of the user's progress and remaining tasks/subgoals allows users to quickly ascertain their position within the overall structure.

## Designing effective goal trackers

When designing a goal tracker, consider these best practices for optimal UX:

- **Simplicity**: Keep the design and presentation of the goal tracker simple and clear, avoiding unnecessary complexity or clutter.
- **Relevance**: Ensure that the tracked goals are closely aligned with the user's objectives, and make the process of updating or setting these goals as seamless as possible.
- **Adaptable**: Make the goal tracker adaptable and flexible, allowing users to change or modify their goals as needed.
- **Accessibility**: Design the goal tracker to be easily accessible, allowing users to monitor their progress without disrupting their workflow or navigation.

In conclusion, goal trackers play an important role in UX design to drive user engagement, satisfaction, and overall success. By understanding their purpose and components, and incorporating thoughtful design principles, you can create goal trackers that enhance your users' experience and promote the accomplishment of their desired objectives.
",concept
10040111,tutorials,"Tutorials are an important aspect of UX Design, as they help users understand and learn how to navigate through a new application, software or website. It is essential to create engaging, informative and easy-to-follow tutorials to ensure users can quickly comprehend the interface and become efficient in navigating it.

In this section, we will discuss the importance of tutorials in UX Design and provide best practices for creating effective tutorials.

## Importance of Tutorials

- **Guidance for new users:** Tutorials provide an opportunity for users to learn how to use a new software or application proficiently. They are particularly helpful for first-time users, who are often intimidated by the learning curve.
- **Boost user confidence:** Well-executed tutorials help users gain confidence in their ability to navigate a software, ultimately leading to increased user satisfaction and long-term engagement.
- **Minimize confusion:** Tutorials can help users avoid confusion and frustration by offering clear instructions and demonstrations, which ultimately reduces the need for user support.

## Best Practices for Creating Tutorials

- **Keep it simple and clear:** Use easy-to-understand language, avoid jargon, and break down complex concepts into smaller, manageable steps.
- **Use visuals:** Incorporate diagrams, screenshots, and videos if possible. Visuals can enhance learning and make it easier for users to understand complex instructions.
- **Make it interactive:** Encourage user engagement by making the tutorial interactive. This can be achieved by incorporating quizzes, allowing users to practice new skills, and providing immediate feedback.
- **Be concise:** Long tutorials can be overwhelming and discourage users. Present only the necessary information, and keep the tutorial as short and to-the-point as possible.
- **Test and iterate:** Regularly test your tutorials to ensure they are still relevant and effective. Gather user feedback to identify areas for improvement, and make updates accordingly.

Remember, a well-designed tutorial can greatly enhance a user's experience with your software or application. Invest time and effort into creating engaging, informative and easy-to-follow tutorials, and enjoy the benefits of a more skilled and satisfied user base.
",concept
100402,wireframing,wireframing,topic
10040200,figma,"[Figma](https://www.figma.com/) is a powerful and versatile web-based design tool that allows designers, developers, and stakeholders to collaborate on UI and UX projects in real-time. It's an excellent choice for creating wireframes and high-fidelity prototypes and supports vector editing, responsive design, and team collaboration.

## Key Features

- **Real-time collaboration**: Figma lets multiple users work on a single design simultaneously, so teams can easily collaborate and see each other's changes in real-time.

- **Platform-independent**: As a web-based tool, Figma is accessible from any device with a browser and an internet connection. It is compatible with Windows, macOS, and Linux.

- **Components**: Figma uses a 'component' system, which allows you to reuse elements across your designs. By creating a master component, any updates made to the master will be reflected in all instances, helping to keep your designs consistent.

- **Prototyping**: Figma allows you to create interactive prototypes of your designs using built-in prototyping features, including animations and transitions. This helps you to communicate the intended user experience to stakeholders and to test your designs with users.

- **Version history**: Figma automatically saves your work and maintains a version history that lets you go back to any previous version of your design.

- **Plugins**: Figma supports a wide range of user-created plugins that extend its functionality, allowing you to tailor the tool to your specific needs.

- [Figma Website](https://figma.com)
",concept
10040201,adobe xd,"Adobe XD (Experience Design) is a powerful design and prototyping tool that allows UX designers to create wireframes, mockups, and interactive prototypes for various digital projects. It is available for both Mac and Windows, and it focuses on providing an easy-to-use, intuitive interface for designing responsive websites, mobile apps, and more.

## Key Features of Adobe XD

- **Design tools**: Adobe XD offers a set of powerful design tools, such as vector drawing, the ability to import images, and a range of pre-defined UI components to help you create aesthetically pleasing designs. The built-in grid system allows for precise alignment and consistency across your designs.

- **Responsive artboards**: XD allows you to create multiple artboards for different devices and screen sizes. This enables you to visualize and design in one go, for multiple device types.

- **Prototype and Interactions**: With Adobe XD, you can easily add interactions to your designs. This helps in better communication of your ideas and makes it easier for clients and developers to understand your vision. The preview mode enables you to test your prototype and see the interactions in real-time.

- **Collaboration and Sharing**: Adobe XD simplifies collaboration between team members, stakeholders, and developers. You can create shared design specs and live URLs for your prototypes, gather feedback, and even co-edit documents with other designers in real-time.

- **Integrations**: XD seamlessly integrates with other Adobe Creative Cloud applications, such as Photoshop, Illustrator, and After Effects, enabling smoother workflows and consistency across your designs. It also supports third-party plugins to expand its capabilities.

To get started with Adobe XD, you'll need to download and install the application from the [Adobe Creative Cloud website](https://www.adobe.com/products/xd.html). Adobe offers a free basic plan for XD, which allows you to work on one shared document at a time and a limited number of shared prototypes and design specs.

As a designer, familiarizing yourself with Adobe XD's features and learning how to effectively use it can significantly improve your design process, making your wireframing and prototyping tasks quicker and more efficient.
",concept
10040202,sketch,"Sketch is a powerful digital design tool specifically tailored for user interface (UI) and user experience (UX) design. As part of the creative process, designers use Sketch to create wireframes, visual mockups, and interactive prototypes that help plan and iterate their ideas.

## Key Features

- **Vector-based:** Unlike pixel-based software (such as Photoshop), Sketch uses vector shapes, enabling you to create crisp and clean designs that can scale to any resolution without losing quality.

- **Artboards:** Artboards provide designated spaces within your canvas to create designs for various screen sizes, devices and orientations. This makes it easier to design and test responsive layouts.

- **Symbols:** Symbols are reusable design components, such as buttons, icons, or navigation menus. When you update a symbol, all instances of it across your designs will be updated, making it a huge time-saver.

- **Export options:** Sketch supports multiple export formats (PNG, JPG, SVG, etc.) and provides options to optimize your assets for different platforms, such as iOS or Android.

- **Collaboration and Plugins:** Sketch offers a wide range of plugins and integrations for collaborative work and extends its functionality via community-driven addons.

- [Sketch Website](https://www.sketch.com/)
",concept
10040203,balsamiq,"Balsamiq is a popular wireframing tool that helps designers, developers, and product managers to quickly create and visualize user interfaces, web pages, or app screens. It's an easy-to-use software that allows you to focus on ideas and concepts rather than getting caught up in pixel-perfect designs.

**Key Features of Balsamiq**

- _Drag-and-Drop Interface:_ Balsamiq has a simple, drag-and-drop interface that allows you to add elements like buttons, text fields, images, and icons to your wireframes, making it easy for anyone to use.

- _Built-in UI Components:_ Balsamiq has a wide variety of pre-designed UI components, which help you quickly create wireframes for different platforms like web, mobile, and desktop applications.

- _Sketch-style Wireframes:_ Balsamiq's sketch-like wireframe style encourages you to focus on your concepts and think about the user experience before getting into detailed design work. This approach is great for brainstorming or getting feedback from stakeholders.

- _Collaboration and Sharing:_ You can easily share your wireframes with team members or clients using Balsamiq Cloud or by exporting your wireframes to a variety of formats, including PDF and PNG.

- _Integration with Other Tools:_ Balsamiq can integrate with popular tools like Google Drive, Atlassian Confluence, Jira, and more, allowing you to seamlessly collaborate and manage your projects.

- [Balsamiq Website](https://balsamiq.com/)
",concept
1005,ux best practices,ux best practices,topic
100500,getting attention,getting attention,topic
10050000,tell user and ask,"In the world of UX design, one of the key objectives is to maintain effective communication with users and ensure that their needs and expectations are being met. One powerful technique to achieve this is through **Tell User and Ask** strategy.

## Tell User

This approach requires the designer to provide clear, concise, and relevant information to the user throughout their interaction with the product. This can be achieved through various means:

- **Visual cues**: Utilize colors, icons, and typography effectively to signal the user about important elements on the page or screen.
- **Microcopy**: Provide short, helpful pieces of text, such as labels or tooltips, to guide the user in taking appropriate actions.
- **Notifications**: Offer live updates, system status, and contextual feedback to keep the user informed about any ongoing processes or significant events.

## Ask User

Another important aspect of creating an engaging and interactive experience is through soliciting user input or feedback. This can facilitate two-way communication and ultimately contribute to a more personalized and efficient user experience. Some ways to incorporate this strategy into your design:

- **Forms and surveys**: Collect information from users in a structured and organized manner, using various input fields such as text, multiple-choice, and dropdowns.
- **Interactive elements**: Encourage users to engage with the interface, such as sliding for content, using progressive disclosure techniques, or utilizing drag-and-drop functionality.
- **Feedback mechanisms**: Provide quick and easy ways for users to express their opinions or report issues, such as clickable star ratings, feedback forms, or live chat features.

By combining the ""Tell User"" and ""Ask User"" strategies, UX designers can create a more dynamic and engaging user experience, while also staying in tune with the evolving needs and expectations of their audience.
",concept
10050001,make it clear where to act,"When designing a user interface, it is essential to guide your users in such a way that they can effortlessly understand where they need to act. This means making it abundantly clear where the actionable elements are on the screen.

Here are a few strategies to ensure users can easily identify where to act:

- **Use Affordances:** Make use of [affordances](https://www.interaction-design.org/literature/topics/affordances) to give users clues about the functionality of individual elements. For instance, buttons should look clickable, links should be visually distinguishable from plain text, and input fields should resemble an area where text can be entered.

- **Visual Hierarchy:** Establish a [visual hierarchy](https://www.interaction-design.org/literature/topics/visual-hierarchy) within the interface by placing important actions more prominently, making them larger or more noticeable. This can be achieved through the use of size, color, contrast, and proximity.

- **Consistent Element Patterns:** Use consistent element patterns throughout your design, ensuring that all actionable elements have the same visual styling. This helps users recognize which elements they can interact with and which ones they can't.

- **Clear Labels and Instructions:** Provide clear labels and instructions to help users understand what different elements do, and what is expected of them. This could be explicit instructions or simply using descriptive, concise labels that are easy-to-understand.

- **Whitespace:** Make good use of [whitespace](https://www.interaction-design.org/literature/topics/white-space) to provide breathing room between elements and group related content. This allows users to quickly grasp the structure of the page and find the points of interaction.

- **Feedback:** Provide feedback to users when they interact with various elements. This can include hover effects, button presses, and animations that serve as confirmations of successful actions.

By making it clear where users need to act, your interface becomes more accessible, efficient, and enjoyable for them to use. This will ultimately result in a more successful and engaging user experience.
",concept
10050002,clear the page of distractions,"To create an effective UX design, it is essential to focus on the user's attention and reduce any distractions that might be present on the webpage. This will not only improve the usability of your website, but it will also make it more visually appealing and engaging. Here are some tips for eliminating distractions from your design:

## Keep it Simple

It's crucial to ensure your design is clean and straightforward. Stick to essential design elements, and avoid using excessive images, icons, or other visual elements that may distract users from the main content.

## Use White Space

Incorporate white space, also known as negative space, throughout your design. The appropriate use of white space provides relief for users and makes it easier to process the information on the page.

## Establish a Visual Hierarchy

Organizing content according to its importance will help users focus on the most crucial information. Creating a clear visual hierarchy can be achieved by using font sizes, colors, and positioning to guide the user's attention.

## Use Consistent Navigation

Keep your website's navigation consistent throughout the site to reduce potential confusion. This allows users to quickly find what they are looking for without getting lost or overwhelmed.

## Minimize Popups and Ads

Excessive use of popups or ads can be distracting and annoying to users. Keep their usage to a minimum, and ensure they are not disruptive to the overall user experience.

## Optimize Load Times

Ensure that your webpage loads quickly, as slow loading times can lead to user frustration and abandonment. Optimize images and other media, and consider lazy loading techniques for a smoother experience.

By following these guidelines and effectively clearing your page of distractions, you can create a user-friendly and aesthetically pleasant design that will keep your users engaged and focused on the most important elements of your website.
",concept
100501,getting favorable conscious evaluation,getting favorable conscious evaluation,topic
10050100,prime user relevant associations,"Priming user relevant associations is a vital concept in UX design, aiming to create positive associations with various aspects of the user's experience. To achieve this, designers must tap into the cognitive aspects influencing a user's perception, decision-making, and overall satisfaction with the product or service.

## Understanding User Relevance

To prime user-relevant associations, it's essential to first understand the users and their expectations. Conduct user research to identify their motivations, preferences, and context of use. This helps in shaping the product's design and creating experiences that resonate with their specific needs and desires.

## Creating Meaningful Experiences

Foster meaningful experiences to evoke positive emotions and establish strong resonating associations. This can be done through:

- Consistent Branding: Provide a cohesive and continuous visual language throughout the experience. Create harmony by using uniform colors, typography, imagery, and overall design system.

- Emotional Design: Create memorable experiences by incorporating emotionally-driven visuals, copy, and interactions. Appeal to users' emotions through the use of storytelling, relatability, and various other persuasive techniques.

- Design for Real-life Usage: Understand and address user pain points by offering practical solutions. Design for the user's context of use so they find purpose in the product.

## Reinforcing Positive Associations

Constant reinforcement of positive associations is crucial throughout the user journey. This can be achieved by:

- Timely Feedback: Ensure that the user receives feedback on the outcome of their actions, both for successful and unsuccessful attempts. Use appropriate visual and auditory cues to guide users and reassure them of their progress.

- Reward System: Encourage users through rewards - this could be as simple as congratulatory messages or more complex mechanisms like progress bars or achievements.

- Personalization: Customize the user experience to each individual user, tailoring the content, visuals, and interactions as per their preference and past behaviors.

## Benefits

By successfully priming user-relevant associations, designers can:

- Foster user satisfaction
- Build trust and credibility
- Establish long-lasting customer relationships
- Increase user engagement and product adoption
- Encourage brand loyalty

By closely understanding and addressing users' needs and preferences, UX designers can create favorable conscious evaluations and ultimately lay a solid foundation for a successful user experience.
",concept
10050101,leverage loss aversion,"Loss aversion is a psychological phenomenon where individuals are more likely to avoid losses than to achieve equivalent gains. In other words, people feel the pain of losing something more strongly than they feel the pleasure of gaining something of equal value. As a UX designer, you can leverage loss aversion to encourage user engagement, increase conversions, and boost overall user satisfaction.

## Tips for applying loss aversion in UX design:

- **Highlight potential losses:** Emphasize the negative consequences of not taking action. For example, instead of focusing on the benefits of signing up for a newsletter, you could stress the valuable insights and opportunities the user will miss out on if they don't subscribe.

- **Use time-sensitive offers:** Creating a sense of urgency can be a powerful motivator for users to take action. Limited-time offers, discounts, or exclusive content can tap into users' fear of missing out (FOMO) and prompt them to engage with your product or service.

- **Free trials and progress tracking:** Offer free trials with limited features or time frames that encourage users to explore the full potential of your product. Show users the progress they've made during the trial and remind them what they'll lose if they don't upgrade or purchase.

- **Saved user data:** Retain user preferences, settings, or shopping cart data for a limited time, and remind them that this information will be lost if they don't act. This can be especially persuasive, as users may have already invested time and effort into customizing their experience.

- **Social proof and testimonials:** Showcase the success stories and testimonials of satisfied customers or users. This can create a sense of loss for prospects who may feel like they're falling behind or missing out on the advantages enjoyed by others.

- **Risk reversal and guarantees:** Reduce the perceived risk by offering money-back guarantees, free returns, or no-strings-attached trials. By taking away the potential for loss, users may be more likely to give your product or service a try.

Remember, the goal is to create a balanced user experience that informs and helps users make informed decisions, without resorting to manipulative tactics. Use loss aversion thoughtfully and ethically, and always prioritize the needs and emotions of your users.
",concept
10050102,use peer comparisons,"Peer comparisons involve using feedback or showcasing how other users, especially those with similar attributes or objectives, are interacting with your product. This can be a powerful tool in influencing user behavior and driving favorable conscious evaluation.

## Why Use Peer Comparisons?

- **Social Proof:** Peer comparisons provide social proof of the value of your product, which can reassure users and boost their willingness to adopt it.
- **Healthy Competition:** Comparisons with peers can motivate users to improve their performance and fully utilize your product to stay ahead.
- **Personal Relevance:** Peer comparisons are more relatable than general statistics or testimonials, since users see the results of others who are in similar situations.
- **Guidance:** By observing the actions of their peers, users can learn best practices and common pitfalls, improving their overall experience with your product.

## How to Implement Peer Comparisons

- **Choose Relevant Peers:** To make comparisons meaningful and motivating, focus on users who share key attributes, goals, or contexts with the target user. Tailor the comparisons accordingly.
- **Highlight Key Metrics:** Showcase an individual's progress, usage, or success with the product in comparison to their peers. Ensure these metrics are relevant and understandable to your users.
- **Provide Context:** Make sure that users can understand why they are being compared to a particular peer group, minimizing potential resentment or disinterest.
- **Maintain Anonymity:** To respect user privacy and avoid potential negative experiences, ensure that personal information is not shared without consent.
- **Enable Opt-Out:** Users should always have the option to opt out of peer comparisons if they find it intrusive or unhelpful.

## Caveats

- Be aware that peer comparisons can lead to unintended consequences if not handled properly, such as demotivation, social pressure, or decreased self-esteem.
- Always respect user privacy and ensure a positive, supportive environment when implementing peer comparisons in your UX design.

By effectively leveraging peer comparisons, you can enhance user engagement and satisfaction, ultimately creating a more successful and enjoyable product experience.
",concept
10050103,use competition,"Utilizing competition in UX design can lead to more engaging and motivating user experiences. By incorporating competitive elements, you encourage users to not only interact with your product or system but also compare their performance with others. This comparison can fuel their desire to improve, return to the app, and spend more time on your platform. Below are key points to keep in mind when using competition in UX design:

## Identify appropriate competitive elements

It is crucial to determine which competitive elements are suitable for your target audience and the nature of your product. For example:

- **Leaderboards:** Show rankings of top users based on points or achievements, encouraging users to climb higher in rankings.
- **Badges and awards:** Recognize users' achievements by awarding virtual trophies or badges for completing specific tasks.
- **Challenges:** Set up periodic or one-time events where users need to complete a task within a certain timeframe to win prizes.

## Balance competition with collaboration

Ensure that your UX design balances competition and collaboration. Too much competition can create a hostile environment, while collaboration allows users to support each other and work together. For example, you could have a group leaderboard where users can form teams and compete against other teams or create collaborative challenges where users must work together to succeed collectively.

## Consider the target audience

Keep your target audience in mind when incorporating competitive elements in your UX design. Understand the motivation and preferences of your users to create competition that appeals to them. For example, casual users might prefer low-pressure, friendly competitions, whereas professional or hardcore users might appreciate more intense, skill-based competitions.

## Be mindful of negative impacts

Be aware of the potential for negative implications that competition can bring, such as increased stress or social comparison. To mitigate these, consider:

- Allowing users to opt-out of competitive features and leaderboards.
- Maintaining a friendly and positive tone in your app's language.
- Rewarding users for improvements in their performance, rather than just absolute performance levels.

## Measure success

Evaluate the effectiveness of the competitive features in your UX design by tracking relevant metrics such as user engagement, time spent in the app, user retention, and user satisfaction. Use this data to iterate and refine the competition aspects based on user feedback and performance.

In conclusion, using competition in UX design can create engaging experiences that motivate users, encouraging them to delve deeper into your app or platform. By carefully considering your target audience and the potential pitfalls of competition, you will be well on your way to crafting a user experience that keeps users coming back for more.

---
",concept
10050104,avoid cognitive overhead,"Cognitive overhead refers to the mental effort needed to understand or operate a given system, tool, or interface. In UX design, it is crucial to minimize cognitive overhead to create user-friendly and efficient experiences. The less mental effort a user needs to invest, the more likely they will have a positive conscious evaluation of your design. Here are three key strategies to help you avoid cognitive overhead in your designs:

#### 1. Keep it simple

A clutter-free, clean, and easy-to-navigate design is always a good starting point. In order to keep cognitive overhead to a minimum, focus on simplifying both the interface and the content:

- Utilize white space: By providing ample space between functional elements, you make it easier for users to scan and process the interface.
- Reduce the number of options: Offering too many choices can overwhelm users or cause them to second-guess their decisions. Aim for a balance of ease and functionality.

#### 2. Establish a clear hierarchy

A well-structured hierarchy helps users navigate your design and understand the relationship between elements. This reduces cognitive overhead as users don't have to work hard to make sense of the interface:

- Organize content logically: Group related items together and place them in a consistent order.
- Use size, color, and typography effectively: Make important information stand out and use visual cues to indicate less important elements.

#### 3. Provide clear & concise instructions

Your design should guide users effortlessly, which can be achieved by providing clear directions or prompts:

- Use actionable language: Be precise and direct with your wording, and avoid using jargon.
- Offer visual cues & feedback: Include well-placed icons, highlighted sections, or animation to support the user's actions and indicate the outcome of those actions.

In summary, reducing cognitive overhead in your UX design is essential to create an efficient and user-friendly experience. Adopt a simple and clean design, establish a clear hierarchy, and provide helpful instructions to ensure more favorable conscious evaluations from your users.
",concept
10050105,avoid choice overload,"Choice overload is a phenomenon that occurs when users are presented with too many options, causing decision paralysis, anxiety, and ultimately, dissatisfaction with their final choice. As a UX designer, it's essential to ensure that users can easily make decisions within your designs, so it's important to avoid choice overload. In this section, we'll discuss some strategies for managing the number of options and streamlining decision-making processes for users.

## Limit the Number of Options

Research has shown that a user's ability to make decisions decreases as the number of options increases. To avoid overwhelming users, aim to present no more than 5-7 options at a time. This can be applied to menus, product listings, or any other area where users are asked to make a selection. Remember to prioritize the most important or commonly used options and make them more prominent within the design.

## Categorize and Organize Options

When users are presented with multiple choices, it's crucial to make it easy for them to understand and differentiate between the available options. By categorizing and organizing options into logical groups, users can more quickly find the information or functionality they need. Consider using headings, icons, or other visual cues to assist in organizing content effectively.

## Implement Smart Defaults

To help users make decisions quicker, consider setting default selections for certain choices. By pre-selecting the most commonly used or recommended option, users can easily accept the default if it aligns with their needs, or quickly change it if necessary. This not only saves time and effort for the user, but it can also guide them towards an optimal outcome based on their needs.

## Advanced Filtering and Sorting Options

If your design requires users to make complex decisions, such as choosing a product from an extensive catalog, consider implementing advanced filtering and sorting options. By giving users the ability to refine their options based on specific attributes, they can more easily identify the best option for their needs. Make sure these filtering options are easy to understand and use, and provide clear feedback on the number of results remaining as users adjust their filters.

By being mindful of choice overload and implementing these strategies, you can create a more enjoyable and user-friendly experience for your users. Remember, the goal is to make their decision-making process as seamless and stress-free as possible.
",concept
10050106,avoid direct payments,"Avoiding direct payments is a crucial aspect of UX design that can lead to favorable conscious evaluations from users. Direct payments refer to instances where users are required to pay for your product or service upfront, which can create a negative perception and less willingness to engage. By finding alternative ways to monetize or offer premium features, you can create an enjoyable experience and encourage users to appreciate and invest in your offerings without feeling forced.

## Why it Matters?

- **Trust-Building**: When users are not asked to pay upfront or have no hidden costs, they are more likely to trust your product or service, increasing the likelihood of loyal customers.
- **Accessibility**: Making your offerings available without direct payments ensures a larger and more diverse audience can experience the value your product provides, which can lead to increased traffic and eventual conversions.
- **Reduced churn**: Users who do not feel ""locked-in"" by having to pay upfront are less likely to abandon your product or service in search of alternative solutions.

## Strategies to Avoid Direct Payments

- **Offer a free trial**: Provide users with a limited-time free trial of your product or service to showcase its value and encourage them to invest once the trial is over.
- **Freemium model**: Allow users to access basic features of your product for free, while offering premium features at a cost. This model lets users experience your offerings without having to pay upfront and gives them the option to upgrade if they find value in it.
- **In-app purchases**: Incorporate in-app purchases within your product, which enables users to access premium features and benefits without being forced to pay upfront.
- **Subscriptions**: Offer subscriptions as an alternative payment method that allows users to access premium features and receive updates frequently, creating a sense of loyalty and commitment.
- **Pay-as-you-go or usage-based pricing**: Implement a flexible pricing model where users only pay for what they use or when they use a specific feature, removing the barrier of direct payments and increasing user satisfaction.

By avoiding direct payments and implementing these strategies, a UX designer can create a user experience that fosters trust, accessibility, and user engagement. By doing so, you increase the likelihood of gaining favorable conscious evaluations of your product, ultimately leading to long-term success.
",concept
100502,positive intuitive reaction,positive intuitive reaction,topic
10050200,make ui professional and beautiful,"Creating a professional and beautiful user interface (UI) is essential for a positive intuitive reaction. This not only captures the users' attention but also keeps them engaged with your product. A visually appealing UI establishes trust and confidence, ultimately enhancing the overall user experience (UX). In this section, we will discuss key aspects to keep in mind for designing a professional and beautiful UI.

## Color Scheme

Choose a color scheme that complements your brand and the message you want to convey. Use colors that evoke emotions and are aesthetically pleasing. Aim for a balanced mix of primary, secondary, and accent colors. You can use online color palette generators or other resources to create a harmonious color scheme.

## Typography

Typography plays a critical role in making your UI more readable and user-friendly. Spend time selecting a typeface that aligns well with your brand personality. Make sure that the font sizes, line heights, and letter spacing are optimized for readability. Maintain consistency in typefaces and styles throughout your design.

## Layout and Grid System

Organize the interface elements in a clear, consistent, and logical manner using a grid system. It helps you achieve a clean and professional look. A well-defined layout not only enhances the visual appeal but also improves the usability of the interface.

## Iconography and Imagery

Use high-quality icons and images that are consistent in style and theme. Icons should be easily recognizable and convey the purpose of their associated actions. Opt for vector graphics and SVG files as they scale better for different screen sizes and resolutions.

## Consistency and Patterns

Maintain consistency in your UI elements and their interactions. Established design patterns help users feel comfortable and familiar with your interface. Standardize navigation, buttons, and other interface components to create an intuitive and seamless experience.

## Responsive Design

Ensure your design adapts well to various screen sizes and resolutions. Cater to different devices and platforms to maximize accessibility and user satisfaction. Utilize responsive design techniques, such as fluid grids, flexible images, and media queries.

## White Space

Make effective use of white space (also known as negative space) to create visual hierarchy, separate different elements, and guide the users' attention. White space is essential for a clean, balanced, and professional appearance.

## Feedback and Micro-interactions

Provide visual feedback and subtle animations to enhance user interaction. Micro-interactions, such as hover effects, progress indicators, and animations, showcase attentiveness to detail and contribute to an engaging UX.

By incorporating these aspects, you can craft a professional and beautiful UI that promotes a positive intuitive reaction. Remember that a visually appealing interface, combined with smooth and efficient functionality, leads to a better UX, ultimately benefiting both the users and your business.
",concept
10050201,deploy social proof,"Deploying social proof is a powerful UX design principle that helps to encourage a positive intuitive reaction among users. Social proof is the concept that people tend to conform to the actions, beliefs, and attitudes of those around them, especially when they are unsure of the correct behavior in a given situation. In UX design, this means leveraging user-generated content and testimonials that demonstrate how your product or service is positively impacting others. This helps to instill trust and credibility in your design, and it can ultimately influence user engagement and decision-making.

## Key Aspects of Deploying Social Proof

- **User Testimonials and Reviews**: Sharing direct quotes and reviews from satisfied users can help build trust in your product, and create a perceived sense of popularity. Make sure to include testimonials on your website or app that highlight the most compelling benefits of your product.

- **Social Media Mentions**: Showcasing positive word-of-mouth spread organically by real users can help persuade potential customers to try your product. Incorporate social media mentions, shares, or ratings on your website or app as a way of demonstrating your product's reputation.

- **Expert Opinions and Endorsements**: If your product is endorsed by industry experts, leaders, or influencers, this can add authority to your brand. Include these supporters' names or quotes in your UX design to show that knowledgeable individuals trust and are using your product or service.

- **Usage Statistics**: Displaying the total number of users, downloads, or customer success stories can provide a strong indicator of the popularity of your product or service. Ensure that these statistics are accurate and up-to-date in order to maintain credibility with your audience.

- **Trust Seals and Certifications**: Including trust seals from established organizations or certifications from industry leaders can further enhance your product's credibility. Ensure that these are relevant to your target audience and displayed prominently within your UX design.

By deploying social proof strategically within your UX design, you can create a positive intuitive reaction that encourages users to trust your product, comply with your suggestions, and ultimately, choose your product over the competition.
",concept
10050202,deploy strong subject authority,"Deploying strong subject authority refers to providing the user with a sense of trust and confidence when they interact with your product. This can be achieved by showcasing your expertise and establishing your position as a reliable source of information, products or services. Let us explore the key aspects of deploying strong subject authority in UX design:

## Reliable Content:

- **Accuracy:** Make sure the information provided is accurate, relevant, and up-to-date. Inaccurate information can lead to distrust and dissatisfaction.
- **Expertise:** If possible, involve subject matter experts to ensure the content is reliable and credible. Expert opinions and insights add more value to the content.
- **Curation:** Curate your content carefully to avoid information overload, and ensure it remains focused, informative, and useful for your target audience.

## Design and Aesthetics:

- **Professional design:** A well-designed interface instills confidence in the user. Choose professional-looking fonts, colors, and other design elements that resonate with your target audience.
- **Consistency:** Maintain consistency in layout, color schemes, and overall branding. This helps users to associate your content with a familiar and trustworthy organization.
- **Navigation:** Ensure the navigation is intuitive and easy to use, helping users to explore your content with confidence.

## Testimonials and Social Proof:

- **Testimonials:** Share real testimonials from satisfied users/customers to build trust with your audience.
- **Case Studies:** Showcase your expertise with detailed case studies that demonstrate your skills and accomplishments.
- **Social Proof:** Display social proof by featuring badges, certifications, or collaborations with renowned organizations.

## Accessibility and Support:

- **Accessibility:** Ensure your content is accessible to everyone, regardless of their abilities, by meeting accessibility standards.
- **Customer Support:** Offer easily accessible support options and resources, such as a help center, live chat, or customer service contact information.

To deploy strong subject authority in your UX design, focus on providing reliable content, maintaining a professional appearance, sharing testimonials and social proof, and offering accessible support. By incorporating these elements into your design, users are more likely to have a positive, intuitive reaction to your product and become loyal, satisfied customers.
",concept
10050203,be authentic and personal,"When creating a user experience (UX) design, it's essential to be authentic and personal. This means that your design should be genuine, truthful, and relatable to your users. By being authentic and personal, you can create a positive intuitive reaction in your users, as they feel connected and engaged with your website or application. Here are some tips to make your UX design authentic and personal:

#### 1. Understand your user persona(s)

Before you start designing, define your target audience and create user personas that represent them. This may include their age, gender, occupation, interests, and pain points. By understanding the different personas, you can create a design that resonates with each of them, meeting their needs and expectations.

#### 2. Use natural and conversational language

To make your design personal, use natural and conversational language that speaks directly to your users. Avoid jargons, buzzwords, or overly formal language that can create a barrier between you and your users. Your users should be able to understand the content and interact with it smoothly.

#### 3. Employ appropriate imagery and visuals

To enhance authenticity, incorporate images and graphics that are relevant and relatable to your target audience. This means using high-quality, real-life pictures of people or objects that genuinely represent your brand or product. Avoid overused stock images, as they can significantly decrease the perceived authenticity of your design.

#### 4. Make emotional connections

Emotions play a vital role in creating personal connections with users. In your design, use color schemes, fonts, and visual elements that evoke emotions and encourage users to form an emotional attachment to your product or brand. The more emotionally invested users are, the more positive their intuitive reactions will be.

#### 5. Consistency in design elements

An authentic user experience is characterized by consistency in design elements, including typography, colors, and visual hierarchy. This consistency helps users feel reassured and comfortable, as they can easily understand and navigate through the design.

#### 6. Provide personalized experiences

To create an authentic UX design, offer personalized experiences to your users based on their preferences, browsing history, or other data. This might include recommending content they may be interested in or tailoring the website layout to meet their specific needs.

By being authentic and personal in your UX design, you can create a positive and memorable experience for your users. By understanding your target audience, using natural language, incorporating engaging visuals, and providing personalized experiences, you can foster user engagement, trust, and loyalty towards your product or brand.
",concept
100503,create urgency,create urgency,topic
10050300,avoid temporal myopia,"Temporal myopia, also known as short-termism, occurs when individuals or organizations prioritize immediate gains over long-term benefits. This focus on the present can lead to suboptimal decisions, negatively impacting the overall user experience (UX) in the long run. As a UX designer, your goal is to avoid temporal myopia and create designs keeping the long-term user experience in mind.

## Long-term vs. Short-term UX

It's essential to balance short-term goals, such as increasing conversions or sales, with long-term UX objectives, such as user satisfaction and loyalty. Consider the following when avoiding temporal myopia in your designs:

#### 1. Sustainable Design Solutions

Design for both the present and future by creating sustainable design solutions that adapt to evolving user needs and technology advancements. This approach will ensure a seamless experience across different contexts and platforms, catering to growth and change.

#### 2. Prioritize User Needs

Understand and prioritize user needs throughout the development process. Strive to balance business objectives with end-user satisfaction, focusing on designing experiences that create lasting value for both parties.

#### 3. Iterate and Test

Adopt a continuous improvement mindset and emphasize the importance of iteration and testing in the design process. This approach will enable you to refine and perfect your designs over time, addressing any negative impacts of short-term decisions and meeting long-term user requirements.

#### 4. User Feedback

Incorporate user feedback into your design process, gathering insights from diverse sources such as usability testing, surveys, and customer reviews. Analyzing user feedback will help you identify elements that contribute to a positive long-term experience and can inform your design choices.

#### 5. Build Trust and Loyalty

Design experiences that foster trust and loyalty with users, including employing principles of personalization, security, transparency, and accessibility. Establishing long-term relationships with users will help you better understand their needs and adapt your designs as their requirements change over time.

By avoiding temporal myopia in your UX design process, you'll create experiences that cater to both immediate and long-term user needs while fostering trust and loyalty. Balancing short-term gains with a long-term user-centric focus will help you deliver designs that stand the test of time and provide lasting value to both users and organizations.
",concept
10050301,remind of prior commitment to act,"Sometimes, users need a gentle reminder of the commitments or decisions they've made in the past to help them move forward in their user journey. As a UX designer, you can incorporate these reminders to create a sense of urgency and promote desired actions from users.

## Benefits of Reminding Users of Prior Commitments

- **Motivate users to act**: When reminded of a commitment they've already made, users are more likely to follow through with the action, especially if they feel they've invested time or resources toward that action.
- **Create a sense of urgency**: By emphasizing the importance of their commitments, users are more likely to prioritize their tasks and act sooner.
- **Promote consistency**: Reminding users of their prior commitments can promote consistency in their behavior and decision-making, leading to a better user experience.

## Strategies to Remind Users of Prior Commitments

- **Display progress indicators**: Show users how far they have come in a process, such as filling out a form or completing a survey, to remind them of their progress so far.
- **Use notifications**: Send timely notifications or reminders to remind users of their prior commitments, such as appointments they made or tasks they wished to complete.
- **Leverage personalized content**: Customize content to emphasize a user's previous actions, for example, by showing related products based on prior purchases, or pre-filling forms with previously entered data.
- **Create social proof**: Showcase testimonials, reviews, or follower counts to remind users of their decision to join a community or use a product, creating a sense of belonging and reinforcing their initial commitment.

By incorporating reminders of prior commitments in the user experience, you can make users feel more invested in the process, create a sense of urgency, and ultimately, improve the overall UX design.
",concept
10050302,make commitment to friends,"One of the key strategies to create a sense of urgency in your UX design is to encourage users to make commitments with their friends. This approach leverages the power of social influence and personal accountability to drive user engagement and action.

## Why it's effective

- **Social Proof:** When users see that their friends have already made a commitment, they are more likely to follow suit. This creates a sense of social validation and peer pressure, which can nudge users towards making similar decisions.
- **Accountability:** Making a commitment with friends can increase a user's sense of responsibility and dedication to follow through on their decision. Knowing that their actions are being observed by others makes backing out less attractive, hence increasing the chances of users following through on their commitments.

## How to implement it in your UX design

- **Show friend's activity:** Design your interface to portray commitments and actions made by friends. For example, social media platforms often show a user's friends who have already signed up for an event or have endorsed a product.
- **Enable sharing:** Make it easy for users to share their commitments, interests, or goals with their friends. This could include features like sharing buttons or personalized social media posts.
- **Create group goals:** Allow users to commit to a shared goal together. Design experiences that encourage collaboration and teamwork, such as group challenges or competitions.
- **Offer incentives for group commitments:** Reward users for achieving goals together, for example, offering discounts or exclusive features for a group of friends who sign up for a service together.

By incorporating the ""make commitment to friends"" concept in your UX design, you can tap into people's natural tendencies of social conformity and accountability. This encourages users to engage with your product, convert to actions, and more importantly, stick around for the long haul.
",concept
10050303,make reward scarce,"One of the effective techniques to create urgency in UX design is to make rewards scarce. Making a reward scarce means limiting its availability in terms of quantity or time. This scarcity increases its perceived value leading to urgency among users to act fast in order to avail the reward. Here, we'll discuss some strategies to make rewards scarce in your design:

## Limited Quantity

Introduce rewards with limited quantities, making users feel that they need to act fast before the rewards are gone. This exerts psychological pressure as users do not want to miss out on the opportunity.

_Example_: You can offer a limited quantity promotion wherein the first 50 customers to make a purchase receive a bonus gift or a special discount.

## Limited Time Offers

Creating time-based limitations on rewards is another effective way to increase urgency. The inherent nature of time works its magic by encouraging users to be quick to avoid missing out on the reward.

_Example_: Flash sales, 24-hour promotions and countdown timers are examples of limited-time offers that create urgency to buy now or miss out on the deal.

## Exclusive Access

Offering exclusive access to specific features, content or experiences for a limited number of users not only increases perceived value but also adds a sense of exclusivity.

_Example_: Granting access to a members-only online event, beta release of an application, or special product launches can create urgency to sign-up or purchase for the privilege of having that exclusive access.

## Seasonal Rewards

Align the rewards with seasons, events, or holidays, creating a natural sense of scarcity due to the time-bound nature of these events.

_Example_: Offering discounts, special promotions, or limited edition items connected to holidays or events like Christmas, Valentine's Day, Black Friday, etc., can create a sense of urgency as users are aware that these opportunities only come around once a year.

Remember to apply these strategies ethically and transparently when designing experiences in your application. Creating genuine scarcity and urgency will ensure that your users value your offers and continue to engage with your product.
",concept
100504,make it easy for users,make it easy for users,topic
10050400,elicit implementation intentions,"Eliciting implementation intentions is a powerful technique used in UX design to help users achieve their goals while using your platform or product. Implementation intentions are formed when users are encouraged to think about and plan specific actions they will take to reach a desired outcome. By incorporating prompts and guidance for users to make these plans, you can boost their chances of success and improve overall user satisfaction. In this section, we will discuss how to effectively elicit implementation intentions.

## Why Implementation Intentions Matter

Numerous studies show that when people form implementation intentions, they are more likely to follow through with their plans and achieve their goals. Instead of just having a vague idea of what they want to accomplish, users with implementation intentions have a clear roadmap of how and when to take action. This removes much of the guesswork and ambiguity that can hinder success and can make your UX design more effective at helping users achieve their desired outcomes.

## How to Elicit Implementation Intentions

To encourage users to form implementation intentions, you'll want to create prompts and guidance within your UX design that help them identify and plan for the specific actions they will take. Here are some tips to help you do this:

- **Break down goals into subtasks**: To help users make plans, divide their overarching goal into smaller, more manageable subtasks. Present these subtasks clearly within your design and encourage users to think about how and when they will complete them.

- **Provide clear instructions**: Offer step-by-step guidance to help users accomplish each subtask. This can take the form of tooltips, onboarding flows, or even simple checklists.

- **Set attainable deadlines**: Encourage users to set specific deadlines for when they will complete each subtask. Including a built-in calendar or scheduling functionality can help make this process more seamless.

- **Create reminders and notifications**: Incorporate reminder mechanisms into your design to help users stay on track with their plans. This can include push notifications, email reminders, or in-app alerts.

- **Track progress**: Make it easy for users to track their progress toward goal completion. Visual aids, such as progress bars and checklists, go a long way in helping users see how far they've come and encouraging them to keep going.

- **Offer encouragement and feedback**: Positive reinforcement can help keep users motivated and engaged with their plans. Congratulate users on milestones reached and provide feedback on their progress.

By incorporating these strategies into your UX design, you can foster an environment that supports users in forming implementation intentions and helps them achieve their goals more effectively. Remember, the easier it is for users to make plans and take actionable steps towards their objectives, the more successful and satisfied they will be with your product.
",concept
10050401,default everything,"One of the key principles in UX design is to **make it easy for users** by creating a seamless and intuitive interface. One effective way to achieve this is by implementing **default settings** for various user actions and input fields. Default settings not only simplify the decision-making process but also save time and prevent errors. In this section, we will discuss the importance of default settings and provide some practical tips for implementing them in your UX design.

#### Why are default settings important?

- **Save time and effort:** Defaults reduce the cognitive load on the user, as they don't have to manually set options while interacting with your product. They can quickly proceed without worrying about customizing every single element.

- **Increase usability:** Defaults make it easier for users to use your product without needing to understand the complexities involved. This is especially helpful for new users who are still exploring your product and might be overwhelmed by too many options.

- **Reduce errors:** Errors are more likely to occur when users have to configure complex settings manually. Providing default options minimizes the chances of error and ensures a smoother experience.

#### Tips for implementing default settings in your UX design:

- **Choose sensible defaults:** It's essential to carefully consider which default settings are most appropriate for your target user group. Keep their needs and preferences in mind while making these choices.

- **Allow customization:** While providing default settings, it's crucial to give users the flexibility to change these settings as per their needs. Make sure that customization options are easily accessible so that users can modify them if required.

- **Set progressive defaults:** Progressive defaults adjust over time based on a user's behavior and choices. For example, if a user always selects a specific option, make that the new default for that user. This personalizes the experience and demonstrates that your product is actively adapting to the user's preferences.

- **Test your defaults:** It's important to test and validate your default settings to ensure that they benefit your users. Collect feedback, conduct user testing, and iterate to find the most effective defaults for your product.

By implementing default settings in your UX design, you'll simplify the user's experience and make it easier for them to interact with your product. By choosing the right defaults and constantly testing and refining them, you'll provide a more satisfying and efficient experience for your users.
",concept
10050402,lessen the burden of action info,"The goal of ""lessening the burden of action information"" is to simplify and streamline the user experience so that users can efficiently accomplish their tasks without confusion or frustration. Here are some key ways to do this:

- #### Provide Clear Instructions
  Clearly communicate to your users what they need to do. Ensure language is clear, concise and easily understood. This reduces the chances of users feeling lost or not knowing what to do.
- #### Minimize Steps
  Reduce the number of steps or actions users need to take in order to complete a task. This not only simplifies the process but also saves users' time and effort.
- #### Declutter Interface
  Remove unnecessary elements from your interface that might distract or confuse your users. Focus on presenting only the essential information and UI components, which will allow your users to navigate and interact more easily.
- #### Group Related Actions
  Organize similar actions and options together. This helps users understand the logical flow of completing a task and makes the interface easier to navigate.
- #### Break Down Complex Tasks
  Break complex tasks into smaller, more manageable sub-tasks or steps. This helps users understand the overall process better and allows them to focus on one step at a time.
- #### Make Default Values Meaningful
  Set default values that make sense and help users to complete actions more quickly. This saves users the time and effort of manually entering or selecting values in certain cases.

By implementing these techniques in your UX design, you will make it easier for users to interact with and complete tasks within your product, leading to a more satisfying and successful experience.
",concept
10050403,deploy peer comparisons,"Deploying peer comparisons in UX design involves showing users how their actions or decisions stack up against those of other users in a similar context. This technique can be highly effective in motivating users to take desired actions, especially when backed by strong social proof. It's crucial, however, to implement peer comparisons in a way that is both ethical and user-friendly. Let's explore key considerations and best practices for including peer comparisons in your UX design.

## Benefits of Peer Comparisons

- **Motivation** - Users often feel encouraged to take desired actions when they see peers doing the same. This phenomenon is called social proof, a powerful motivator for persuasive design.
- **Informative** - Comparisons can provide users with valuable insights, such as how they rank against peers or how much improvement they can make.
- **Friendly Competition** - Peer comparisons can introduce a healthy sense of competition among users, which can lead to positive outcomes.

## Best Practices for Deploying Peer Comparisons

- **Ensure Relevance** - Make sure the peer comparisons displayed are relevant and useful to the user. Irrelevant comparisons can lead to confusion or frustration.
- **Don't Shame Users** - Avoid designing comparisons that put users down in any way. Focus on creating a positive experience and highlighting the benefits of adopting desired behaviors.
- **Respect Privacy** - Be mindful of users' privacy by obtaining consent before displaying their personal data or comparing their actions with others.
- **Provide Opt-Out Options** - Give users the choice to remove themselves from peer comparisons or view comparisons anonymously.
- **Avoid Overwhelming Users** - Display comparisons sparingly and thoughtfully. Excessive peer comparisons can be overwhelming or counterproductive.

By carefully implementing peer comparisons in your UX design, you can effectively motivate users to take desired actions, while maintaining a positive and intuitive user experience. Remember to be considerate of users' privacy and preferences when introducing this powerful technique.
",concept
1006,measuring the impact,measuring the impact,topic
100600,testing,testing,topic
10060000,incremental ab testing,"Incremental A/B testing is the process of testing small design, content, or functionality changes in your user experience (UX) design to evaluate their impact on your conversion goals. Instead of making a large, sweeping change to your design, incremental A/B testing focuses on smaller, iterative changes that can be measured and analyzed. This approach has several benefits:

## Reduced Risk

By making smaller, more focused changes, you can reduce the risk associated with bigger changes that may affect several aspects of your design. This allows you to isolate specific elements of the user experience and determine the impact of your changes more accurately.

## Easier Implementation

Incremental changes are typically easier to implement and test, which can lead to shorter development cycles and a quicker turnaround time on improvements. This can help you save valuable resources, such as time and budget, while improving your UX design.

## More Data-Based Insights

Since incremental A/B testing generates more specific and focused results, you can gather more data-based insights to help you make better, informed decisions on your UX design. This can lead to a more targeted approach when making future design improvements.

## How to Conduct Incremental A/B Testing:

**Step 1: Identify Your Goal**

Before you begin testing, you need to have a clear understanding of the goal you are trying to achieve with your incremental change. This could be increasing conversion rates, reducing bounce rates, or improving user engagement.

**Step 2: Define a Hypothesis**

Develop a hypothesis for each change. Your hypothesis should be based on research and data and should clearly state your expected outcome from the incremental change.

**Step 3: Design and Implement Changes**

Design and implement your changes in line with your hypothesis. Keep your changes specific, targeted, and incremental to improve data accuracy and make implementation easier.

**Step 4: Set up A/B Testing**

Use a reliable A/B testing tool to set up your testing environment. Ensure that you have a control version (without changes) and a treatment version (with changes) to compare within the test.

**Step 5: Analyze and Interpret Results**

Once you've completed your test, analyze the results to determine if your incremental change has had the desired impact on your goal. Evaluate the data and make decisions based on your findings.

**Step 6: Iterate and Improve**

Based on your results, iterate and make improvements to your UX design. Continue running incremental A/B tests as you fine-tune your design to achieve the best possible user experience.

By making use of incremental A/B testing, you thoroughly understand the impact of each small change in your UX design, which empowers you to create an optimized user experience and reach your conversion goals effectively.
",concept
10060001,multivariate testing,"Multivariate testing is an advanced user testing method that allows designers to test multiple elements or variations within a single test. Its primary goal is to identify the best-performing variations among several competing design alternatives. Multivariate testing provides insights on how different design variations impact user experience and conversions, and helps in identifying which combination of elements works best for your users.

## How it Works

In a multivariate test, several design variations are presented to different groups of users simultaneously. The test seeks to measure the performance of each design variation utilizing clearly-defined metrics like conversion rates, number of clicks, or user engagement. Data is collected and analyzed to determine which variation has the greatest positive impact on those pre-identified metrics.

## Key Advantages

- **Optimization**: Multivariate testing enables designers to optimize their designs by identifying the best-performing variations for each element. This ultimately leads to improved overall performance of the user interface.
- **Increased Confidence**: By comparing multiple design elements simultaneously, designers can gather data-driven insights to make informed decisions, increasing confidence in their design choices.
- **Efficiency**: Multivariate testing enables designers to test several elements in a single test. This saves time, effort, and resources compared to testing each element individually.

## When to Use Multivariate Testing

- **Complex Designs or High Traffic**: Multivariate testing is particularly suitable for complex designs with multiple combinations, or situations when the design is expected to generate high traffic.
- **Confirming Best-Performing Variations**: When simplistic A/B testing does not provide enough information to determine which variation is the best, multivariate testing can provide deeper insights.
- **When Hypotheses are Uncertain**: If you're unsure which design element is responsible for driving desired user behavior, a multivariate test can provide valuable information to guide your design decisions.

## Things to Consider

Multivariate testing may require a larger user sample size compared to A/B testing, as more variations of the design are being analyzed. Additionally, this method works best when there is sufficient traffic or a high volume of user engagement.

Keep in mind that while multivariate testing can provide valuable insights, it's important not to lose sight of the big picture. Focus on testing elements that are truly critical to your design goals and prioritize user feedback at every stage of the process.
",concept
100601,gather lessons prioritize integrate,"One of the most important aspects of measuring the impact of UX design is to gather lessons, prioritize them, and integrate them into future iterations. This process ensures that you're continuously improving your product design and user experience.

## Gather Lessons

The first step in this process is to gather the lessons you've learned as a result of your UX design impact measurements. You should take note of both the strong and weak points of your current design. Some methods to gather these lessons include user feedback, quantitative data from usability tests, and qualitative insights from user interviews or surveys. Collecting this data helps you to get a comprehensive understanding of what is working well and what needs improvements in your product design.

## Prioritize

After gathering the lessons, it's crucial to identify and prioritize the most important issues that need to be addressed. Prioritization can be based on various factors, such as the severity of the issue, the number of users affected, the effort required for the improvement, and the potential impact on user satisfaction.

To help with prioritization, you can make use of methods such as:

- Impact-Effort Matrix: Rank issues based on their potential impact on users and the effort required to resolve them.
- MoSCoW Method: Classify issues as ""Must-Have,"" ""Should-Have,"" ""Could-Have,"" or ""Won't-Have.""
- Kano Model: Identify issues that will delight users, satisfy their basic needs, or cause dissatisfaction if not addressed.

By prioritizing issues, you'll be able to allocate the right resources and time to solve them effectively.

## Integrate

Once you have prioritized the key issues, the next step is to integrate them into your product roadmap and design process. This means addressing these issues during iteration planning, incorporating them into your design requirements, and working closely with your development team to ensure they're implemented appropriately.

Monitoring the progress and evaluating the impact of these changes in subsequent iterations is also important. This will help you validate the success of your efforts and provide valuable insights for continuous improvement.

To summarize, gathering lessons, prioritizing, and integrating them into your UX design process is essential for measuring the impact and knowing the areas of improvement. By continuously iterating and learning from user feedback and data, you can build a more effective and engaging product for your users.
",concept
